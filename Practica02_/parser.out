Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADD
    ADDF
    ADDR
    AND
    ARROBA
    BASE
    CLEAR
    COMF
    COMMENT_ML
    COMP
    COMPR
    C_TEXT
    DIRECTIV
    DIV
    DIVF
    DIVR
    EXTENDED
    FINL
    FIX
    FLOAT_NUM
    HIO
    J
    JEQ
    JGT
    JLT
    JSUB
    LDA
    LDB
    LDCH
    LDF
    LDL
    LDS
    LDT
    LDX
    LPS
    MODIF
    MUL
    MULF
    MULR
    NORM
    OPERANDO
    OR
    RD
    RMO
    SHIFTL
    SHIFTR
    SIO
    SSK
    STA
    STB
    STCH
    STF
    STI
    STL
    STS
    STSW
    STT
    STX
    SUB
    SUBF
    SUBR
    SVC
    TD
    TIO
    TIX
    TIXR
    UMINUS
    WD
    X_HEX

Grammar

Rule 0     S' -> sicxe_file
Rule 1     sicxe_file -> programa
Rule 2     sicxe_file -> empty programa
Rule 3     sicxe_file -> empty programa empty
Rule 4     sicxe_file -> programa empty
Rule 5     programa -> inicio proposiciones fin
Rule 6     inicio -> nombre_programa START numero NEWLINE
Rule 7     inicio -> nombre_programa START error NEWLINE
Rule 8     inicio -> error START numero NEWLINE
Rule 9     inicio -> error START error NEWLINE
Rule 10    numero -> INT
Rule 11    numero -> HEX_INT
Rule 12    fin -> END entrada
Rule 13    entrada -> NAME
Rule 14    proposiciones -> proposiciones proposicion
Rule 15    proposiciones -> proposicion
Rule 16    proposicion -> <empty>
Rule 17    proposicion -> directiva NEWLINE
Rule 18    proposicion -> instruccion NEWLINE
Rule 19    proposicion -> error NEWLINE
Rule 20    instruccion -> etiqueta opformato
Rule 21    instruccion -> opformato
Rule 22    directiva -> etiqueta tipodirectiva opdirectiva
Rule 23    directiva -> tipodirectiva opdirectiva
Rule 24    opdirectiva -> NUM
Rule 25    opdirectiva -> NAME
Rule 26    opdirectiva -> expression
Rule 27    tipodirectiva -> BYTE
Rule 28    tipodirectiva -> WORD
Rule 29    tipodirectiva -> RESB
Rule 30    tipodirectiva -> RESW
Rule 31    etiqueta -> NAME
Rule 32    nombre_programa -> NAME
Rule 33    opformato -> f4
Rule 34    opformato -> f3
Rule 35    opformato -> f2
Rule 36    opformato -> f1
Rule 37    f4 -> PLUS f3
Rule 38    f3 -> simple3
Rule 39    f3 -> indirecto3
Rule 40    f3 -> inmediato3
Rule 41    f3 -> RSUB
Rule 42    f3 -> simple3 COMA X
Rule 43    simple3 -> CODOP NAME
Rule 44    simple3 -> CODOP NUM
Rule 45    indirecto3 -> CODOP AT NUM
Rule 46    indirecto3 -> PLUS CODOP AT NAME
Rule 47    inmediato3 -> CODOP SHARP NUM
Rule 48    inmediato3 -> CODOP SHARP NAME
Rule 49    f2 -> CODOP NUM
Rule 50    f2 -> CODOP REG
Rule 51    f2 -> CODOP REG COMA REG
Rule 52    f2 -> CODOP REG COMA NUM
Rule 53    f1 -> CODOP
Rule 54    expression -> MINUS expression
Rule 55    expression -> FACTORIAL expression
Rule 56    expression -> expression PLUS expression
Rule 57    expression -> expression MINUS expression
Rule 58    expression -> expression MULTIPLY expression
Rule 59    expression -> expression DIVIDE expression
Rule 60    expression -> expression MOD expression
Rule 61    expression -> expression LESST expression
Rule 62    expression -> expression MORET expression
Rule 63    expression -> expression LESSEQ expression
Rule 64    expression -> expression MOREEQ expression
Rule 65    expression -> expression OR_G expression
Rule 66    expression -> expression AND_G expression
Rule 67    expression -> NAME EQUALS expression
Rule 68    var -> NAME
Rule 69    expression -> INT
Rule 70    expression -> FLOAT
Rule 71    expression -> var
Rule 72    expression -> LPARENT expression RPARENT
Rule 73    empty -> NEWLINE
Rule 74    empty -> <empty>

Terminals, with rules where they appear

ADD                  : 
ADDF                 : 
ADDR                 : 
AND                  : 
AND_G                : 66
ARROBA               : 
AT                   : 45 46
BASE                 : 
BYTE                 : 27
CLEAR                : 
CODOP                : 43 44 45 46 47 48 49 50 51 52 53
COMA                 : 42 51 52
COMF                 : 
COMMENT_ML           : 
COMP                 : 
COMPR                : 
C_TEXT               : 
DIRECTIV             : 
DIV                  : 
DIVF                 : 
DIVIDE               : 59
DIVR                 : 
END                  : 12
EQUALS               : 67
EXTENDED             : 
FACTORIAL            : 55
FINL                 : 
FIX                  : 
FLOAT                : 70
FLOAT_NUM            : 
HEX_INT              : 11
HIO                  : 
INT                  : 10 69
J                    : 
JEQ                  : 
JGT                  : 
JLT                  : 
JSUB                 : 
LDA                  : 
LDB                  : 
LDCH                 : 
LDF                  : 
LDL                  : 
LDS                  : 
LDT                  : 
LDX                  : 
LESSEQ               : 63
LESST                : 61
LPARENT              : 72
LPS                  : 
MINUS                : 54 57
MOD                  : 60
MODIF                : 
MOREEQ               : 64
MORET                : 62
MUL                  : 
MULF                 : 
MULR                 : 
MULTIPLY             : 58
NAME                 : 13 25 31 32 43 46 48 67 68
NEWLINE              : 6 7 8 9 17 18 19 73
NORM                 : 
NUM                  : 24 44 45 47 49 52
OPERANDO             : 
OR                   : 
OR_G                 : 65
PLUS                 : 37 46 56
RD                   : 
REG                  : 50 51 51 52
RESB                 : 29
RESW                 : 30
RMO                  : 
RPARENT              : 72
RSUB                 : 41
SHARP                : 47 48
SHIFTL               : 
SHIFTR               : 
SIO                  : 
SSK                  : 
STA                  : 
START                : 6 7 8 9
STB                  : 
STCH                 : 
STF                  : 
STI                  : 
STL                  : 
STS                  : 
STSW                 : 
STT                  : 
STX                  : 
SUB                  : 
SUBF                 : 
SUBR                 : 
SVC                  : 
TD                   : 
TIO                  : 
TIX                  : 
TIXR                 : 
UMINUS               : 
WD                   : 
WORD                 : 28
X                    : 42
X_HEX                : 
error                : 7 8 9 9 19

Nonterminals, with rules where they appear

directiva            : 17
empty                : 2 3 3 4
entrada              : 12
etiqueta             : 20 22
expression           : 26 54 55 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 72
f1                   : 36
f2                   : 35
f3                   : 34 37
f4                   : 33
fin                  : 5
indirecto3           : 39
inicio               : 5
inmediato3           : 40
instruccion          : 18
nombre_programa      : 6 7
numero               : 6 8
opdirectiva          : 22 23
opformato            : 20 21
programa             : 1 2 3 4
proposicion          : 14 15
proposiciones        : 5 14
sicxe_file           : 0
simple3              : 38 42
tipodirectiva        : 22 23
var                  : 71

Parsing method: LALR

state 0

    (0) S' -> . sicxe_file
    (1) sicxe_file -> . programa
    (2) sicxe_file -> . empty programa
    (3) sicxe_file -> . empty programa empty
    (4) sicxe_file -> . programa empty
    (5) programa -> . inicio proposiciones fin
    (73) empty -> . NEWLINE
    (74) empty -> .
    (6) inicio -> . nombre_programa START numero NEWLINE
    (7) inicio -> . nombre_programa START error NEWLINE
    (8) inicio -> . error START numero NEWLINE
    (9) inicio -> . error START error NEWLINE
    (32) nombre_programa -> . NAME

  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
    NEWLINE         shift and go to state 5
    error           shift and go to state 7
    NAME            shift and go to state 8

  ! error           [ reduce using rule 74 (empty -> .) ]
  ! NAME            [ reduce using rule 74 (empty -> .) ]

    sicxe_file                     shift and go to state 1
    programa                       shift and go to state 2
    empty                          shift and go to state 3
    inicio                         shift and go to state 4
    nombre_programa                shift and go to state 6

state 1

    (0) S' -> sicxe_file .



state 2

    (1) sicxe_file -> programa .
    (4) sicxe_file -> programa . empty
    (73) empty -> . NEWLINE
    (74) empty -> .

  ! reduce/reduce conflict for $end resolved using rule 1 (sicxe_file -> programa .)
    $end            reduce using rule 1 (sicxe_file -> programa .)
    NEWLINE         shift and go to state 5

  ! $end            [ reduce using rule 74 (empty -> .) ]

    empty                          shift and go to state 9

state 3

    (2) sicxe_file -> empty . programa
    (3) sicxe_file -> empty . programa empty
    (5) programa -> . inicio proposiciones fin
    (6) inicio -> . nombre_programa START numero NEWLINE
    (7) inicio -> . nombre_programa START error NEWLINE
    (8) inicio -> . error START numero NEWLINE
    (9) inicio -> . error START error NEWLINE
    (32) nombre_programa -> . NAME

    error           shift and go to state 7
    NAME            shift and go to state 8

    programa                       shift and go to state 10
    inicio                         shift and go to state 4
    nombre_programa                shift and go to state 6

state 4

    (5) programa -> inicio . proposiciones fin
    (14) proposiciones -> . proposiciones proposicion
    (15) proposiciones -> . proposicion
    (16) proposicion -> .
    (17) proposicion -> . directiva NEWLINE
    (18) proposicion -> . instruccion NEWLINE
    (19) proposicion -> . error NEWLINE
    (22) directiva -> . etiqueta tipodirectiva opdirectiva
    (23) directiva -> . tipodirectiva opdirectiva
    (20) instruccion -> . etiqueta opformato
    (21) instruccion -> . opformato
    (31) etiqueta -> . NAME
    (27) tipodirectiva -> . BYTE
    (28) tipodirectiva -> . WORD
    (29) tipodirectiva -> . RESB
    (30) tipodirectiva -> . RESW
    (33) opformato -> . f4
    (34) opformato -> . f3
    (35) opformato -> . f2
    (36) opformato -> . f1
    (37) f4 -> . PLUS f3
    (38) f3 -> . simple3
    (39) f3 -> . indirecto3
    (40) f3 -> . inmediato3
    (41) f3 -> . RSUB
    (42) f3 -> . simple3 COMA X
    (49) f2 -> . CODOP NUM
    (50) f2 -> . CODOP REG
    (51) f2 -> . CODOP REG COMA REG
    (52) f2 -> . CODOP REG COMA NUM
    (53) f1 -> . CODOP
    (43) simple3 -> . CODOP NAME
    (44) simple3 -> . CODOP NUM
    (45) indirecto3 -> . CODOP AT NUM
    (46) indirecto3 -> . PLUS CODOP AT NAME
    (47) inmediato3 -> . CODOP SHARP NUM
    (48) inmediato3 -> . CODOP SHARP NAME

  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for WORD resolved as shift
  ! shift/reduce conflict for RESB resolved as shift
  ! shift/reduce conflict for RESW resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for RSUB resolved as shift
  ! shift/reduce conflict for CODOP resolved as shift
    END             reduce using rule 16 (proposicion -> .)
    error           shift and go to state 15
    NAME            shift and go to state 19
    BYTE            shift and go to state 20
    WORD            shift and go to state 21
    RESB            shift and go to state 22
    RESW            shift and go to state 23
    PLUS            shift and go to state 28
    RSUB            shift and go to state 32
    CODOP           shift and go to state 33

  ! error           [ reduce using rule 16 (proposicion -> .) ]
  ! NAME            [ reduce using rule 16 (proposicion -> .) ]
  ! BYTE            [ reduce using rule 16 (proposicion -> .) ]
  ! WORD            [ reduce using rule 16 (proposicion -> .) ]
  ! RESB            [ reduce using rule 16 (proposicion -> .) ]
  ! RESW            [ reduce using rule 16 (proposicion -> .) ]
  ! PLUS            [ reduce using rule 16 (proposicion -> .) ]
  ! RSUB            [ reduce using rule 16 (proposicion -> .) ]
  ! CODOP           [ reduce using rule 16 (proposicion -> .) ]

    proposiciones                  shift and go to state 11
    proposicion                    shift and go to state 12
    directiva                      shift and go to state 13
    instruccion                    shift and go to state 14
    etiqueta                       shift and go to state 16
    tipodirectiva                  shift and go to state 17
    opformato                      shift and go to state 18
    f4                             shift and go to state 24
    f3                             shift and go to state 25
    f2                             shift and go to state 26
    f1                             shift and go to state 27
    simple3                        shift and go to state 29
    indirecto3                     shift and go to state 30
    inmediato3                     shift and go to state 31

state 5

    (73) empty -> NEWLINE .

    error           reduce using rule 73 (empty -> NEWLINE .)
    NAME            reduce using rule 73 (empty -> NEWLINE .)
    $end            reduce using rule 73 (empty -> NEWLINE .)


state 6

    (6) inicio -> nombre_programa . START numero NEWLINE
    (7) inicio -> nombre_programa . START error NEWLINE

    START           shift and go to state 34


state 7

    (8) inicio -> error . START numero NEWLINE
    (9) inicio -> error . START error NEWLINE

    START           shift and go to state 35


state 8

    (32) nombre_programa -> NAME .

    START           reduce using rule 32 (nombre_programa -> NAME .)


state 9

    (4) sicxe_file -> programa empty .

    $end            reduce using rule 4 (sicxe_file -> programa empty .)


state 10

    (2) sicxe_file -> empty programa .
    (3) sicxe_file -> empty programa . empty
    (73) empty -> . NEWLINE
    (74) empty -> .

  ! reduce/reduce conflict for $end resolved using rule 2 (sicxe_file -> empty programa .)
    $end            reduce using rule 2 (sicxe_file -> empty programa .)
    NEWLINE         shift and go to state 5

  ! $end            [ reduce using rule 74 (empty -> .) ]

    empty                          shift and go to state 36

state 11

    (5) programa -> inicio proposiciones . fin
    (14) proposiciones -> proposiciones . proposicion
    (12) fin -> . END entrada
    (16) proposicion -> .
    (17) proposicion -> . directiva NEWLINE
    (18) proposicion -> . instruccion NEWLINE
    (19) proposicion -> . error NEWLINE
    (22) directiva -> . etiqueta tipodirectiva opdirectiva
    (23) directiva -> . tipodirectiva opdirectiva
    (20) instruccion -> . etiqueta opformato
    (21) instruccion -> . opformato
    (31) etiqueta -> . NAME
    (27) tipodirectiva -> . BYTE
    (28) tipodirectiva -> . WORD
    (29) tipodirectiva -> . RESB
    (30) tipodirectiva -> . RESW
    (33) opformato -> . f4
    (34) opformato -> . f3
    (35) opformato -> . f2
    (36) opformato -> . f1
    (37) f4 -> . PLUS f3
    (38) f3 -> . simple3
    (39) f3 -> . indirecto3
    (40) f3 -> . inmediato3
    (41) f3 -> . RSUB
    (42) f3 -> . simple3 COMA X
    (49) f2 -> . CODOP NUM
    (50) f2 -> . CODOP REG
    (51) f2 -> . CODOP REG COMA REG
    (52) f2 -> . CODOP REG COMA NUM
    (53) f1 -> . CODOP
    (43) simple3 -> . CODOP NAME
    (44) simple3 -> . CODOP NUM
    (45) indirecto3 -> . CODOP AT NUM
    (46) indirecto3 -> . PLUS CODOP AT NAME
    (47) inmediato3 -> . CODOP SHARP NUM
    (48) inmediato3 -> . CODOP SHARP NAME

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for WORD resolved as shift
  ! shift/reduce conflict for RESB resolved as shift
  ! shift/reduce conflict for RESW resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for RSUB resolved as shift
  ! shift/reduce conflict for CODOP resolved as shift
    END             shift and go to state 39
    error           shift and go to state 15
    NAME            shift and go to state 19
    BYTE            shift and go to state 20
    WORD            shift and go to state 21
    RESB            shift and go to state 22
    RESW            shift and go to state 23
    PLUS            shift and go to state 28
    RSUB            shift and go to state 32
    CODOP           shift and go to state 33

  ! END             [ reduce using rule 16 (proposicion -> .) ]
  ! error           [ reduce using rule 16 (proposicion -> .) ]
  ! NAME            [ reduce using rule 16 (proposicion -> .) ]
  ! BYTE            [ reduce using rule 16 (proposicion -> .) ]
  ! WORD            [ reduce using rule 16 (proposicion -> .) ]
  ! RESB            [ reduce using rule 16 (proposicion -> .) ]
  ! RESW            [ reduce using rule 16 (proposicion -> .) ]
  ! PLUS            [ reduce using rule 16 (proposicion -> .) ]
  ! RSUB            [ reduce using rule 16 (proposicion -> .) ]
  ! CODOP           [ reduce using rule 16 (proposicion -> .) ]

    fin                            shift and go to state 37
    proposicion                    shift and go to state 38
    directiva                      shift and go to state 13
    instruccion                    shift and go to state 14
    etiqueta                       shift and go to state 16
    tipodirectiva                  shift and go to state 17
    opformato                      shift and go to state 18
    f4                             shift and go to state 24
    f3                             shift and go to state 25
    f2                             shift and go to state 26
    f1                             shift and go to state 27
    simple3                        shift and go to state 29
    indirecto3                     shift and go to state 30
    inmediato3                     shift and go to state 31

state 12

    (15) proposiciones -> proposicion .

    END             reduce using rule 15 (proposiciones -> proposicion .)
    error           reduce using rule 15 (proposiciones -> proposicion .)
    NAME            reduce using rule 15 (proposiciones -> proposicion .)
    BYTE            reduce using rule 15 (proposiciones -> proposicion .)
    WORD            reduce using rule 15 (proposiciones -> proposicion .)
    RESB            reduce using rule 15 (proposiciones -> proposicion .)
    RESW            reduce using rule 15 (proposiciones -> proposicion .)
    PLUS            reduce using rule 15 (proposiciones -> proposicion .)
    RSUB            reduce using rule 15 (proposiciones -> proposicion .)
    CODOP           reduce using rule 15 (proposiciones -> proposicion .)


state 13

    (17) proposicion -> directiva . NEWLINE

    NEWLINE         shift and go to state 40


state 14

    (18) proposicion -> instruccion . NEWLINE

    NEWLINE         shift and go to state 41


state 15

    (19) proposicion -> error . NEWLINE

    NEWLINE         shift and go to state 42


state 16

    (22) directiva -> etiqueta . tipodirectiva opdirectiva
    (20) instruccion -> etiqueta . opformato
    (27) tipodirectiva -> . BYTE
    (28) tipodirectiva -> . WORD
    (29) tipodirectiva -> . RESB
    (30) tipodirectiva -> . RESW
    (33) opformato -> . f4
    (34) opformato -> . f3
    (35) opformato -> . f2
    (36) opformato -> . f1
    (37) f4 -> . PLUS f3
    (38) f3 -> . simple3
    (39) f3 -> . indirecto3
    (40) f3 -> . inmediato3
    (41) f3 -> . RSUB
    (42) f3 -> . simple3 COMA X
    (49) f2 -> . CODOP NUM
    (50) f2 -> . CODOP REG
    (51) f2 -> . CODOP REG COMA REG
    (52) f2 -> . CODOP REG COMA NUM
    (53) f1 -> . CODOP
    (43) simple3 -> . CODOP NAME
    (44) simple3 -> . CODOP NUM
    (45) indirecto3 -> . CODOP AT NUM
    (46) indirecto3 -> . PLUS CODOP AT NAME
    (47) inmediato3 -> . CODOP SHARP NUM
    (48) inmediato3 -> . CODOP SHARP NAME

    BYTE            shift and go to state 20
    WORD            shift and go to state 21
    RESB            shift and go to state 22
    RESW            shift and go to state 23
    PLUS            shift and go to state 28
    RSUB            shift and go to state 32
    CODOP           shift and go to state 33

    tipodirectiva                  shift and go to state 43
    opformato                      shift and go to state 44
    f4                             shift and go to state 24
    f3                             shift and go to state 25
    f2                             shift and go to state 26
    f1                             shift and go to state 27
    simple3                        shift and go to state 29
    indirecto3                     shift and go to state 30
    inmediato3                     shift and go to state 31

state 17

    (23) directiva -> tipodirectiva . opdirectiva
    (24) opdirectiva -> . NUM
    (25) opdirectiva -> . NAME
    (26) opdirectiva -> . expression
    (54) expression -> . MINUS expression
    (55) expression -> . FACTORIAL expression
    (56) expression -> . expression PLUS expression
    (57) expression -> . expression MINUS expression
    (58) expression -> . expression MULTIPLY expression
    (59) expression -> . expression DIVIDE expression
    (60) expression -> . expression MOD expression
    (61) expression -> . expression LESST expression
    (62) expression -> . expression MORET expression
    (63) expression -> . expression LESSEQ expression
    (64) expression -> . expression MOREEQ expression
    (65) expression -> . expression OR_G expression
    (66) expression -> . expression AND_G expression
    (67) expression -> . NAME EQUALS expression
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . var
    (72) expression -> . LPARENT expression RPARENT
    (68) var -> . NAME

    NUM             shift and go to state 46
    NAME            shift and go to state 47
    MINUS           shift and go to state 49
    FACTORIAL       shift and go to state 50
    INT             shift and go to state 51
    FLOAT           shift and go to state 52
    LPARENT         shift and go to state 54

    opdirectiva                    shift and go to state 45
    expression                     shift and go to state 48
    var                            shift and go to state 53

state 18

    (21) instruccion -> opformato .

    NEWLINE         reduce using rule 21 (instruccion -> opformato .)


state 19

    (31) etiqueta -> NAME .

    BYTE            reduce using rule 31 (etiqueta -> NAME .)
    WORD            reduce using rule 31 (etiqueta -> NAME .)
    RESB            reduce using rule 31 (etiqueta -> NAME .)
    RESW            reduce using rule 31 (etiqueta -> NAME .)
    PLUS            reduce using rule 31 (etiqueta -> NAME .)
    RSUB            reduce using rule 31 (etiqueta -> NAME .)
    CODOP           reduce using rule 31 (etiqueta -> NAME .)


state 20

    (27) tipodirectiva -> BYTE .

    NUM             reduce using rule 27 (tipodirectiva -> BYTE .)
    NAME            reduce using rule 27 (tipodirectiva -> BYTE .)
    MINUS           reduce using rule 27 (tipodirectiva -> BYTE .)
    FACTORIAL       reduce using rule 27 (tipodirectiva -> BYTE .)
    INT             reduce using rule 27 (tipodirectiva -> BYTE .)
    FLOAT           reduce using rule 27 (tipodirectiva -> BYTE .)
    LPARENT         reduce using rule 27 (tipodirectiva -> BYTE .)


state 21

    (28) tipodirectiva -> WORD .

    NUM             reduce using rule 28 (tipodirectiva -> WORD .)
    NAME            reduce using rule 28 (tipodirectiva -> WORD .)
    MINUS           reduce using rule 28 (tipodirectiva -> WORD .)
    FACTORIAL       reduce using rule 28 (tipodirectiva -> WORD .)
    INT             reduce using rule 28 (tipodirectiva -> WORD .)
    FLOAT           reduce using rule 28 (tipodirectiva -> WORD .)
    LPARENT         reduce using rule 28 (tipodirectiva -> WORD .)


state 22

    (29) tipodirectiva -> RESB .

    NUM             reduce using rule 29 (tipodirectiva -> RESB .)
    NAME            reduce using rule 29 (tipodirectiva -> RESB .)
    MINUS           reduce using rule 29 (tipodirectiva -> RESB .)
    FACTORIAL       reduce using rule 29 (tipodirectiva -> RESB .)
    INT             reduce using rule 29 (tipodirectiva -> RESB .)
    FLOAT           reduce using rule 29 (tipodirectiva -> RESB .)
    LPARENT         reduce using rule 29 (tipodirectiva -> RESB .)


state 23

    (30) tipodirectiva -> RESW .

    NUM             reduce using rule 30 (tipodirectiva -> RESW .)
    NAME            reduce using rule 30 (tipodirectiva -> RESW .)
    MINUS           reduce using rule 30 (tipodirectiva -> RESW .)
    FACTORIAL       reduce using rule 30 (tipodirectiva -> RESW .)
    INT             reduce using rule 30 (tipodirectiva -> RESW .)
    FLOAT           reduce using rule 30 (tipodirectiva -> RESW .)
    LPARENT         reduce using rule 30 (tipodirectiva -> RESW .)


state 24

    (33) opformato -> f4 .

    NEWLINE         reduce using rule 33 (opformato -> f4 .)


state 25

    (34) opformato -> f3 .

    NEWLINE         reduce using rule 34 (opformato -> f3 .)


state 26

    (35) opformato -> f2 .

    NEWLINE         reduce using rule 35 (opformato -> f2 .)


state 27

    (36) opformato -> f1 .

    NEWLINE         reduce using rule 36 (opformato -> f1 .)


state 28

    (37) f4 -> PLUS . f3
    (46) indirecto3 -> PLUS . CODOP AT NAME
    (38) f3 -> . simple3
    (39) f3 -> . indirecto3
    (40) f3 -> . inmediato3
    (41) f3 -> . RSUB
    (42) f3 -> . simple3 COMA X
    (43) simple3 -> . CODOP NAME
    (44) simple3 -> . CODOP NUM
    (45) indirecto3 -> . CODOP AT NUM
    (46) indirecto3 -> . PLUS CODOP AT NAME
    (47) inmediato3 -> . CODOP SHARP NUM
    (48) inmediato3 -> . CODOP SHARP NAME

    CODOP           shift and go to state 57
    RSUB            shift and go to state 32
    PLUS            shift and go to state 55

    f3                             shift and go to state 56
    simple3                        shift and go to state 29
    indirecto3                     shift and go to state 30
    inmediato3                     shift and go to state 31

state 29

    (38) f3 -> simple3 .
    (42) f3 -> simple3 . COMA X

    NEWLINE         reduce using rule 38 (f3 -> simple3 .)
    COMA            shift and go to state 58


state 30

    (39) f3 -> indirecto3 .

    NEWLINE         reduce using rule 39 (f3 -> indirecto3 .)


state 31

    (40) f3 -> inmediato3 .

    NEWLINE         reduce using rule 40 (f3 -> inmediato3 .)


state 32

    (41) f3 -> RSUB .

    NEWLINE         reduce using rule 41 (f3 -> RSUB .)


state 33

    (49) f2 -> CODOP . NUM
    (50) f2 -> CODOP . REG
    (51) f2 -> CODOP . REG COMA REG
    (52) f2 -> CODOP . REG COMA NUM
    (53) f1 -> CODOP .
    (43) simple3 -> CODOP . NAME
    (44) simple3 -> CODOP . NUM
    (45) indirecto3 -> CODOP . AT NUM
    (47) inmediato3 -> CODOP . SHARP NUM
    (48) inmediato3 -> CODOP . SHARP NAME

    NUM             shift and go to state 59
    REG             shift and go to state 60
    NEWLINE         reduce using rule 53 (f1 -> CODOP .)
    NAME            shift and go to state 61
    AT              shift and go to state 62
    SHARP           shift and go to state 63


state 34

    (6) inicio -> nombre_programa START . numero NEWLINE
    (7) inicio -> nombre_programa START . error NEWLINE
    (10) numero -> . INT
    (11) numero -> . HEX_INT

    error           shift and go to state 65
    INT             shift and go to state 66
    HEX_INT         shift and go to state 67

    numero                         shift and go to state 64

state 35

    (8) inicio -> error START . numero NEWLINE
    (9) inicio -> error START . error NEWLINE
    (10) numero -> . INT
    (11) numero -> . HEX_INT

    error           shift and go to state 68
    INT             shift and go to state 66
    HEX_INT         shift and go to state 67

    numero                         shift and go to state 69

state 36

    (3) sicxe_file -> empty programa empty .

    $end            reduce using rule 3 (sicxe_file -> empty programa empty .)


state 37

    (5) programa -> inicio proposiciones fin .

    NEWLINE         reduce using rule 5 (programa -> inicio proposiciones fin .)
    $end            reduce using rule 5 (programa -> inicio proposiciones fin .)


state 38

    (14) proposiciones -> proposiciones proposicion .

    END             reduce using rule 14 (proposiciones -> proposiciones proposicion .)
    error           reduce using rule 14 (proposiciones -> proposiciones proposicion .)
    NAME            reduce using rule 14 (proposiciones -> proposiciones proposicion .)
    BYTE            reduce using rule 14 (proposiciones -> proposiciones proposicion .)
    WORD            reduce using rule 14 (proposiciones -> proposiciones proposicion .)
    RESB            reduce using rule 14 (proposiciones -> proposiciones proposicion .)
    RESW            reduce using rule 14 (proposiciones -> proposiciones proposicion .)
    PLUS            reduce using rule 14 (proposiciones -> proposiciones proposicion .)
    RSUB            reduce using rule 14 (proposiciones -> proposiciones proposicion .)
    CODOP           reduce using rule 14 (proposiciones -> proposiciones proposicion .)


state 39

    (12) fin -> END . entrada
    (13) entrada -> . NAME

    NAME            shift and go to state 71

    entrada                        shift and go to state 70

state 40

    (17) proposicion -> directiva NEWLINE .

    END             reduce using rule 17 (proposicion -> directiva NEWLINE .)
    error           reduce using rule 17 (proposicion -> directiva NEWLINE .)
    NAME            reduce using rule 17 (proposicion -> directiva NEWLINE .)
    BYTE            reduce using rule 17 (proposicion -> directiva NEWLINE .)
    WORD            reduce using rule 17 (proposicion -> directiva NEWLINE .)
    RESB            reduce using rule 17 (proposicion -> directiva NEWLINE .)
    RESW            reduce using rule 17 (proposicion -> directiva NEWLINE .)
    PLUS            reduce using rule 17 (proposicion -> directiva NEWLINE .)
    RSUB            reduce using rule 17 (proposicion -> directiva NEWLINE .)
    CODOP           reduce using rule 17 (proposicion -> directiva NEWLINE .)


state 41

    (18) proposicion -> instruccion NEWLINE .

    END             reduce using rule 18 (proposicion -> instruccion NEWLINE .)
    error           reduce using rule 18 (proposicion -> instruccion NEWLINE .)
    NAME            reduce using rule 18 (proposicion -> instruccion NEWLINE .)
    BYTE            reduce using rule 18 (proposicion -> instruccion NEWLINE .)
    WORD            reduce using rule 18 (proposicion -> instruccion NEWLINE .)
    RESB            reduce using rule 18 (proposicion -> instruccion NEWLINE .)
    RESW            reduce using rule 18 (proposicion -> instruccion NEWLINE .)
    PLUS            reduce using rule 18 (proposicion -> instruccion NEWLINE .)
    RSUB            reduce using rule 18 (proposicion -> instruccion NEWLINE .)
    CODOP           reduce using rule 18 (proposicion -> instruccion NEWLINE .)


state 42

    (19) proposicion -> error NEWLINE .

    END             reduce using rule 19 (proposicion -> error NEWLINE .)
    error           reduce using rule 19 (proposicion -> error NEWLINE .)
    NAME            reduce using rule 19 (proposicion -> error NEWLINE .)
    BYTE            reduce using rule 19 (proposicion -> error NEWLINE .)
    WORD            reduce using rule 19 (proposicion -> error NEWLINE .)
    RESB            reduce using rule 19 (proposicion -> error NEWLINE .)
    RESW            reduce using rule 19 (proposicion -> error NEWLINE .)
    PLUS            reduce using rule 19 (proposicion -> error NEWLINE .)
    RSUB            reduce using rule 19 (proposicion -> error NEWLINE .)
    CODOP           reduce using rule 19 (proposicion -> error NEWLINE .)


state 43

    (22) directiva -> etiqueta tipodirectiva . opdirectiva
    (24) opdirectiva -> . NUM
    (25) opdirectiva -> . NAME
    (26) opdirectiva -> . expression
    (54) expression -> . MINUS expression
    (55) expression -> . FACTORIAL expression
    (56) expression -> . expression PLUS expression
    (57) expression -> . expression MINUS expression
    (58) expression -> . expression MULTIPLY expression
    (59) expression -> . expression DIVIDE expression
    (60) expression -> . expression MOD expression
    (61) expression -> . expression LESST expression
    (62) expression -> . expression MORET expression
    (63) expression -> . expression LESSEQ expression
    (64) expression -> . expression MOREEQ expression
    (65) expression -> . expression OR_G expression
    (66) expression -> . expression AND_G expression
    (67) expression -> . NAME EQUALS expression
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . var
    (72) expression -> . LPARENT expression RPARENT
    (68) var -> . NAME

    NUM             shift and go to state 46
    NAME            shift and go to state 47
    MINUS           shift and go to state 49
    FACTORIAL       shift and go to state 50
    INT             shift and go to state 51
    FLOAT           shift and go to state 52
    LPARENT         shift and go to state 54

    opdirectiva                    shift and go to state 72
    expression                     shift and go to state 48
    var                            shift and go to state 53

state 44

    (20) instruccion -> etiqueta opformato .

    NEWLINE         reduce using rule 20 (instruccion -> etiqueta opformato .)


state 45

    (23) directiva -> tipodirectiva opdirectiva .

    NEWLINE         reduce using rule 23 (directiva -> tipodirectiva opdirectiva .)


state 46

    (24) opdirectiva -> NUM .

    NEWLINE         reduce using rule 24 (opdirectiva -> NUM .)


state 47

    (25) opdirectiva -> NAME .
    (67) expression -> NAME . EQUALS expression
    (68) var -> NAME .

  ! reduce/reduce conflict for NEWLINE resolved using rule 25 (opdirectiva -> NAME .)
    NEWLINE         reduce using rule 25 (opdirectiva -> NAME .)
    EQUALS          shift and go to state 73
    PLUS            reduce using rule 68 (var -> NAME .)
    MINUS           reduce using rule 68 (var -> NAME .)
    MULTIPLY        reduce using rule 68 (var -> NAME .)
    DIVIDE          reduce using rule 68 (var -> NAME .)
    MOD             reduce using rule 68 (var -> NAME .)
    LESST           reduce using rule 68 (var -> NAME .)
    MORET           reduce using rule 68 (var -> NAME .)
    LESSEQ          reduce using rule 68 (var -> NAME .)
    MOREEQ          reduce using rule 68 (var -> NAME .)
    OR_G            reduce using rule 68 (var -> NAME .)
    AND_G           reduce using rule 68 (var -> NAME .)

  ! NEWLINE         [ reduce using rule 68 (var -> NAME .) ]


state 48

    (26) opdirectiva -> expression .
    (56) expression -> expression . PLUS expression
    (57) expression -> expression . MINUS expression
    (58) expression -> expression . MULTIPLY expression
    (59) expression -> expression . DIVIDE expression
    (60) expression -> expression . MOD expression
    (61) expression -> expression . LESST expression
    (62) expression -> expression . MORET expression
    (63) expression -> expression . LESSEQ expression
    (64) expression -> expression . MOREEQ expression
    (65) expression -> expression . OR_G expression
    (66) expression -> expression . AND_G expression

    NEWLINE         reduce using rule 26 (opdirectiva -> expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MOD             shift and go to state 78
    LESST           shift and go to state 79
    MORET           shift and go to state 80
    LESSEQ          shift and go to state 81
    MOREEQ          shift and go to state 82
    OR_G            shift and go to state 83
    AND_G           shift and go to state 84


state 49

    (54) expression -> MINUS . expression
    (54) expression -> . MINUS expression
    (55) expression -> . FACTORIAL expression
    (56) expression -> . expression PLUS expression
    (57) expression -> . expression MINUS expression
    (58) expression -> . expression MULTIPLY expression
    (59) expression -> . expression DIVIDE expression
    (60) expression -> . expression MOD expression
    (61) expression -> . expression LESST expression
    (62) expression -> . expression MORET expression
    (63) expression -> . expression LESSEQ expression
    (64) expression -> . expression MOREEQ expression
    (65) expression -> . expression OR_G expression
    (66) expression -> . expression AND_G expression
    (67) expression -> . NAME EQUALS expression
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . var
    (72) expression -> . LPARENT expression RPARENT
    (68) var -> . NAME

    MINUS           shift and go to state 49
    FACTORIAL       shift and go to state 50
    NAME            shift and go to state 86
    INT             shift and go to state 51
    FLOAT           shift and go to state 52
    LPARENT         shift and go to state 54

    expression                     shift and go to state 85
    var                            shift and go to state 53

state 50

    (55) expression -> FACTORIAL . expression
    (54) expression -> . MINUS expression
    (55) expression -> . FACTORIAL expression
    (56) expression -> . expression PLUS expression
    (57) expression -> . expression MINUS expression
    (58) expression -> . expression MULTIPLY expression
    (59) expression -> . expression DIVIDE expression
    (60) expression -> . expression MOD expression
    (61) expression -> . expression LESST expression
    (62) expression -> . expression MORET expression
    (63) expression -> . expression LESSEQ expression
    (64) expression -> . expression MOREEQ expression
    (65) expression -> . expression OR_G expression
    (66) expression -> . expression AND_G expression
    (67) expression -> . NAME EQUALS expression
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . var
    (72) expression -> . LPARENT expression RPARENT
    (68) var -> . NAME

    MINUS           shift and go to state 49
    FACTORIAL       shift and go to state 50
    NAME            shift and go to state 86
    INT             shift and go to state 51
    FLOAT           shift and go to state 52
    LPARENT         shift and go to state 54

    expression                     shift and go to state 87
    var                            shift and go to state 53

state 51

    (69) expression -> INT .

    PLUS            reduce using rule 69 (expression -> INT .)
    MINUS           reduce using rule 69 (expression -> INT .)
    MULTIPLY        reduce using rule 69 (expression -> INT .)
    DIVIDE          reduce using rule 69 (expression -> INT .)
    MOD             reduce using rule 69 (expression -> INT .)
    LESST           reduce using rule 69 (expression -> INT .)
    MORET           reduce using rule 69 (expression -> INT .)
    LESSEQ          reduce using rule 69 (expression -> INT .)
    MOREEQ          reduce using rule 69 (expression -> INT .)
    OR_G            reduce using rule 69 (expression -> INT .)
    AND_G           reduce using rule 69 (expression -> INT .)
    NEWLINE         reduce using rule 69 (expression -> INT .)
    RPARENT         reduce using rule 69 (expression -> INT .)


state 52

    (70) expression -> FLOAT .

    PLUS            reduce using rule 70 (expression -> FLOAT .)
    MINUS           reduce using rule 70 (expression -> FLOAT .)
    MULTIPLY        reduce using rule 70 (expression -> FLOAT .)
    DIVIDE          reduce using rule 70 (expression -> FLOAT .)
    MOD             reduce using rule 70 (expression -> FLOAT .)
    LESST           reduce using rule 70 (expression -> FLOAT .)
    MORET           reduce using rule 70 (expression -> FLOAT .)
    LESSEQ          reduce using rule 70 (expression -> FLOAT .)
    MOREEQ          reduce using rule 70 (expression -> FLOAT .)
    OR_G            reduce using rule 70 (expression -> FLOAT .)
    AND_G           reduce using rule 70 (expression -> FLOAT .)
    NEWLINE         reduce using rule 70 (expression -> FLOAT .)
    RPARENT         reduce using rule 70 (expression -> FLOAT .)


state 53

    (71) expression -> var .

    PLUS            reduce using rule 71 (expression -> var .)
    MINUS           reduce using rule 71 (expression -> var .)
    MULTIPLY        reduce using rule 71 (expression -> var .)
    DIVIDE          reduce using rule 71 (expression -> var .)
    MOD             reduce using rule 71 (expression -> var .)
    LESST           reduce using rule 71 (expression -> var .)
    MORET           reduce using rule 71 (expression -> var .)
    LESSEQ          reduce using rule 71 (expression -> var .)
    MOREEQ          reduce using rule 71 (expression -> var .)
    OR_G            reduce using rule 71 (expression -> var .)
    AND_G           reduce using rule 71 (expression -> var .)
    NEWLINE         reduce using rule 71 (expression -> var .)
    RPARENT         reduce using rule 71 (expression -> var .)


state 54

    (72) expression -> LPARENT . expression RPARENT
    (54) expression -> . MINUS expression
    (55) expression -> . FACTORIAL expression
    (56) expression -> . expression PLUS expression
    (57) expression -> . expression MINUS expression
    (58) expression -> . expression MULTIPLY expression
    (59) expression -> . expression DIVIDE expression
    (60) expression -> . expression MOD expression
    (61) expression -> . expression LESST expression
    (62) expression -> . expression MORET expression
    (63) expression -> . expression LESSEQ expression
    (64) expression -> . expression MOREEQ expression
    (65) expression -> . expression OR_G expression
    (66) expression -> . expression AND_G expression
    (67) expression -> . NAME EQUALS expression
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . var
    (72) expression -> . LPARENT expression RPARENT
    (68) var -> . NAME

    MINUS           shift and go to state 49
    FACTORIAL       shift and go to state 50
    NAME            shift and go to state 86
    INT             shift and go to state 51
    FLOAT           shift and go to state 52
    LPARENT         shift and go to state 54

    expression                     shift and go to state 88
    var                            shift and go to state 53

state 55

    (46) indirecto3 -> PLUS . CODOP AT NAME

    CODOP           shift and go to state 89


state 56

    (37) f4 -> PLUS f3 .

    NEWLINE         reduce using rule 37 (f4 -> PLUS f3 .)


state 57

    (46) indirecto3 -> PLUS CODOP . AT NAME
    (43) simple3 -> CODOP . NAME
    (44) simple3 -> CODOP . NUM
    (45) indirecto3 -> CODOP . AT NUM
    (47) inmediato3 -> CODOP . SHARP NUM
    (48) inmediato3 -> CODOP . SHARP NAME

    AT              shift and go to state 90
    NAME            shift and go to state 61
    NUM             shift and go to state 91
    SHARP           shift and go to state 63


state 58

    (42) f3 -> simple3 COMA . X

    X               shift and go to state 92


state 59

    (49) f2 -> CODOP NUM .
    (44) simple3 -> CODOP NUM .

  ! reduce/reduce conflict for NEWLINE resolved using rule 44 (simple3 -> CODOP NUM .)
    COMA            reduce using rule 44 (simple3 -> CODOP NUM .)
    NEWLINE         reduce using rule 44 (simple3 -> CODOP NUM .)

  ! NEWLINE         [ reduce using rule 49 (f2 -> CODOP NUM .) ]


state 60

    (50) f2 -> CODOP REG .
    (51) f2 -> CODOP REG . COMA REG
    (52) f2 -> CODOP REG . COMA NUM

    NEWLINE         reduce using rule 50 (f2 -> CODOP REG .)
    COMA            shift and go to state 93


state 61

    (43) simple3 -> CODOP NAME .

    COMA            reduce using rule 43 (simple3 -> CODOP NAME .)
    NEWLINE         reduce using rule 43 (simple3 -> CODOP NAME .)


state 62

    (45) indirecto3 -> CODOP AT . NUM

    NUM             shift and go to state 94


state 63

    (47) inmediato3 -> CODOP SHARP . NUM
    (48) inmediato3 -> CODOP SHARP . NAME

    NUM             shift and go to state 95
    NAME            shift and go to state 96


state 64

    (6) inicio -> nombre_programa START numero . NEWLINE

    NEWLINE         shift and go to state 97


state 65

    (7) inicio -> nombre_programa START error . NEWLINE

    NEWLINE         shift and go to state 98


state 66

    (10) numero -> INT .

    NEWLINE         reduce using rule 10 (numero -> INT .)


state 67

    (11) numero -> HEX_INT .

    NEWLINE         reduce using rule 11 (numero -> HEX_INT .)


state 68

    (9) inicio -> error START error . NEWLINE

    NEWLINE         shift and go to state 99


state 69

    (8) inicio -> error START numero . NEWLINE

    NEWLINE         shift and go to state 100


state 70

    (12) fin -> END entrada .

    NEWLINE         reduce using rule 12 (fin -> END entrada .)
    $end            reduce using rule 12 (fin -> END entrada .)


state 71

    (13) entrada -> NAME .

    NEWLINE         reduce using rule 13 (entrada -> NAME .)
    $end            reduce using rule 13 (entrada -> NAME .)


state 72

    (22) directiva -> etiqueta tipodirectiva opdirectiva .

    NEWLINE         reduce using rule 22 (directiva -> etiqueta tipodirectiva opdirectiva .)


state 73

    (67) expression -> NAME EQUALS . expression
    (54) expression -> . MINUS expression
    (55) expression -> . FACTORIAL expression
    (56) expression -> . expression PLUS expression
    (57) expression -> . expression MINUS expression
    (58) expression -> . expression MULTIPLY expression
    (59) expression -> . expression DIVIDE expression
    (60) expression -> . expression MOD expression
    (61) expression -> . expression LESST expression
    (62) expression -> . expression MORET expression
    (63) expression -> . expression LESSEQ expression
    (64) expression -> . expression MOREEQ expression
    (65) expression -> . expression OR_G expression
    (66) expression -> . expression AND_G expression
    (67) expression -> . NAME EQUALS expression
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . var
    (72) expression -> . LPARENT expression RPARENT
    (68) var -> . NAME

    MINUS           shift and go to state 49
    FACTORIAL       shift and go to state 50
    NAME            shift and go to state 86
    INT             shift and go to state 51
    FLOAT           shift and go to state 52
    LPARENT         shift and go to state 54

    expression                     shift and go to state 101
    var                            shift and go to state 53

state 74

    (56) expression -> expression PLUS . expression
    (54) expression -> . MINUS expression
    (55) expression -> . FACTORIAL expression
    (56) expression -> . expression PLUS expression
    (57) expression -> . expression MINUS expression
    (58) expression -> . expression MULTIPLY expression
    (59) expression -> . expression DIVIDE expression
    (60) expression -> . expression MOD expression
    (61) expression -> . expression LESST expression
    (62) expression -> . expression MORET expression
    (63) expression -> . expression LESSEQ expression
    (64) expression -> . expression MOREEQ expression
    (65) expression -> . expression OR_G expression
    (66) expression -> . expression AND_G expression
    (67) expression -> . NAME EQUALS expression
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . var
    (72) expression -> . LPARENT expression RPARENT
    (68) var -> . NAME

    MINUS           shift and go to state 49
    FACTORIAL       shift and go to state 50
    NAME            shift and go to state 86
    INT             shift and go to state 51
    FLOAT           shift and go to state 52
    LPARENT         shift and go to state 54

    expression                     shift and go to state 102
    var                            shift and go to state 53

state 75

    (57) expression -> expression MINUS . expression
    (54) expression -> . MINUS expression
    (55) expression -> . FACTORIAL expression
    (56) expression -> . expression PLUS expression
    (57) expression -> . expression MINUS expression
    (58) expression -> . expression MULTIPLY expression
    (59) expression -> . expression DIVIDE expression
    (60) expression -> . expression MOD expression
    (61) expression -> . expression LESST expression
    (62) expression -> . expression MORET expression
    (63) expression -> . expression LESSEQ expression
    (64) expression -> . expression MOREEQ expression
    (65) expression -> . expression OR_G expression
    (66) expression -> . expression AND_G expression
    (67) expression -> . NAME EQUALS expression
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . var
    (72) expression -> . LPARENT expression RPARENT
    (68) var -> . NAME

    MINUS           shift and go to state 49
    FACTORIAL       shift and go to state 50
    NAME            shift and go to state 86
    INT             shift and go to state 51
    FLOAT           shift and go to state 52
    LPARENT         shift and go to state 54

    expression                     shift and go to state 103
    var                            shift and go to state 53

state 76

    (58) expression -> expression MULTIPLY . expression
    (54) expression -> . MINUS expression
    (55) expression -> . FACTORIAL expression
    (56) expression -> . expression PLUS expression
    (57) expression -> . expression MINUS expression
    (58) expression -> . expression MULTIPLY expression
    (59) expression -> . expression DIVIDE expression
    (60) expression -> . expression MOD expression
    (61) expression -> . expression LESST expression
    (62) expression -> . expression MORET expression
    (63) expression -> . expression LESSEQ expression
    (64) expression -> . expression MOREEQ expression
    (65) expression -> . expression OR_G expression
    (66) expression -> . expression AND_G expression
    (67) expression -> . NAME EQUALS expression
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . var
    (72) expression -> . LPARENT expression RPARENT
    (68) var -> . NAME

    MINUS           shift and go to state 49
    FACTORIAL       shift and go to state 50
    NAME            shift and go to state 86
    INT             shift and go to state 51
    FLOAT           shift and go to state 52
    LPARENT         shift and go to state 54

    expression                     shift and go to state 104
    var                            shift and go to state 53

state 77

    (59) expression -> expression DIVIDE . expression
    (54) expression -> . MINUS expression
    (55) expression -> . FACTORIAL expression
    (56) expression -> . expression PLUS expression
    (57) expression -> . expression MINUS expression
    (58) expression -> . expression MULTIPLY expression
    (59) expression -> . expression DIVIDE expression
    (60) expression -> . expression MOD expression
    (61) expression -> . expression LESST expression
    (62) expression -> . expression MORET expression
    (63) expression -> . expression LESSEQ expression
    (64) expression -> . expression MOREEQ expression
    (65) expression -> . expression OR_G expression
    (66) expression -> . expression AND_G expression
    (67) expression -> . NAME EQUALS expression
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . var
    (72) expression -> . LPARENT expression RPARENT
    (68) var -> . NAME

    MINUS           shift and go to state 49
    FACTORIAL       shift and go to state 50
    NAME            shift and go to state 86
    INT             shift and go to state 51
    FLOAT           shift and go to state 52
    LPARENT         shift and go to state 54

    expression                     shift and go to state 105
    var                            shift and go to state 53

state 78

    (60) expression -> expression MOD . expression
    (54) expression -> . MINUS expression
    (55) expression -> . FACTORIAL expression
    (56) expression -> . expression PLUS expression
    (57) expression -> . expression MINUS expression
    (58) expression -> . expression MULTIPLY expression
    (59) expression -> . expression DIVIDE expression
    (60) expression -> . expression MOD expression
    (61) expression -> . expression LESST expression
    (62) expression -> . expression MORET expression
    (63) expression -> . expression LESSEQ expression
    (64) expression -> . expression MOREEQ expression
    (65) expression -> . expression OR_G expression
    (66) expression -> . expression AND_G expression
    (67) expression -> . NAME EQUALS expression
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . var
    (72) expression -> . LPARENT expression RPARENT
    (68) var -> . NAME

    MINUS           shift and go to state 49
    FACTORIAL       shift and go to state 50
    NAME            shift and go to state 86
    INT             shift and go to state 51
    FLOAT           shift and go to state 52
    LPARENT         shift and go to state 54

    expression                     shift and go to state 106
    var                            shift and go to state 53

state 79

    (61) expression -> expression LESST . expression
    (54) expression -> . MINUS expression
    (55) expression -> . FACTORIAL expression
    (56) expression -> . expression PLUS expression
    (57) expression -> . expression MINUS expression
    (58) expression -> . expression MULTIPLY expression
    (59) expression -> . expression DIVIDE expression
    (60) expression -> . expression MOD expression
    (61) expression -> . expression LESST expression
    (62) expression -> . expression MORET expression
    (63) expression -> . expression LESSEQ expression
    (64) expression -> . expression MOREEQ expression
    (65) expression -> . expression OR_G expression
    (66) expression -> . expression AND_G expression
    (67) expression -> . NAME EQUALS expression
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . var
    (72) expression -> . LPARENT expression RPARENT
    (68) var -> . NAME

    MINUS           shift and go to state 49
    FACTORIAL       shift and go to state 50
    NAME            shift and go to state 86
    INT             shift and go to state 51
    FLOAT           shift and go to state 52
    LPARENT         shift and go to state 54

    expression                     shift and go to state 107
    var                            shift and go to state 53

state 80

    (62) expression -> expression MORET . expression
    (54) expression -> . MINUS expression
    (55) expression -> . FACTORIAL expression
    (56) expression -> . expression PLUS expression
    (57) expression -> . expression MINUS expression
    (58) expression -> . expression MULTIPLY expression
    (59) expression -> . expression DIVIDE expression
    (60) expression -> . expression MOD expression
    (61) expression -> . expression LESST expression
    (62) expression -> . expression MORET expression
    (63) expression -> . expression LESSEQ expression
    (64) expression -> . expression MOREEQ expression
    (65) expression -> . expression OR_G expression
    (66) expression -> . expression AND_G expression
    (67) expression -> . NAME EQUALS expression
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . var
    (72) expression -> . LPARENT expression RPARENT
    (68) var -> . NAME

    MINUS           shift and go to state 49
    FACTORIAL       shift and go to state 50
    NAME            shift and go to state 86
    INT             shift and go to state 51
    FLOAT           shift and go to state 52
    LPARENT         shift and go to state 54

    expression                     shift and go to state 108
    var                            shift and go to state 53

state 81

    (63) expression -> expression LESSEQ . expression
    (54) expression -> . MINUS expression
    (55) expression -> . FACTORIAL expression
    (56) expression -> . expression PLUS expression
    (57) expression -> . expression MINUS expression
    (58) expression -> . expression MULTIPLY expression
    (59) expression -> . expression DIVIDE expression
    (60) expression -> . expression MOD expression
    (61) expression -> . expression LESST expression
    (62) expression -> . expression MORET expression
    (63) expression -> . expression LESSEQ expression
    (64) expression -> . expression MOREEQ expression
    (65) expression -> . expression OR_G expression
    (66) expression -> . expression AND_G expression
    (67) expression -> . NAME EQUALS expression
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . var
    (72) expression -> . LPARENT expression RPARENT
    (68) var -> . NAME

    MINUS           shift and go to state 49
    FACTORIAL       shift and go to state 50
    NAME            shift and go to state 86
    INT             shift and go to state 51
    FLOAT           shift and go to state 52
    LPARENT         shift and go to state 54

    expression                     shift and go to state 109
    var                            shift and go to state 53

state 82

    (64) expression -> expression MOREEQ . expression
    (54) expression -> . MINUS expression
    (55) expression -> . FACTORIAL expression
    (56) expression -> . expression PLUS expression
    (57) expression -> . expression MINUS expression
    (58) expression -> . expression MULTIPLY expression
    (59) expression -> . expression DIVIDE expression
    (60) expression -> . expression MOD expression
    (61) expression -> . expression LESST expression
    (62) expression -> . expression MORET expression
    (63) expression -> . expression LESSEQ expression
    (64) expression -> . expression MOREEQ expression
    (65) expression -> . expression OR_G expression
    (66) expression -> . expression AND_G expression
    (67) expression -> . NAME EQUALS expression
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . var
    (72) expression -> . LPARENT expression RPARENT
    (68) var -> . NAME

    MINUS           shift and go to state 49
    FACTORIAL       shift and go to state 50
    NAME            shift and go to state 86
    INT             shift and go to state 51
    FLOAT           shift and go to state 52
    LPARENT         shift and go to state 54

    expression                     shift and go to state 110
    var                            shift and go to state 53

state 83

    (65) expression -> expression OR_G . expression
    (54) expression -> . MINUS expression
    (55) expression -> . FACTORIAL expression
    (56) expression -> . expression PLUS expression
    (57) expression -> . expression MINUS expression
    (58) expression -> . expression MULTIPLY expression
    (59) expression -> . expression DIVIDE expression
    (60) expression -> . expression MOD expression
    (61) expression -> . expression LESST expression
    (62) expression -> . expression MORET expression
    (63) expression -> . expression LESSEQ expression
    (64) expression -> . expression MOREEQ expression
    (65) expression -> . expression OR_G expression
    (66) expression -> . expression AND_G expression
    (67) expression -> . NAME EQUALS expression
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . var
    (72) expression -> . LPARENT expression RPARENT
    (68) var -> . NAME

    MINUS           shift and go to state 49
    FACTORIAL       shift and go to state 50
    NAME            shift and go to state 86
    INT             shift and go to state 51
    FLOAT           shift and go to state 52
    LPARENT         shift and go to state 54

    expression                     shift and go to state 111
    var                            shift and go to state 53

state 84

    (66) expression -> expression AND_G . expression
    (54) expression -> . MINUS expression
    (55) expression -> . FACTORIAL expression
    (56) expression -> . expression PLUS expression
    (57) expression -> . expression MINUS expression
    (58) expression -> . expression MULTIPLY expression
    (59) expression -> . expression DIVIDE expression
    (60) expression -> . expression MOD expression
    (61) expression -> . expression LESST expression
    (62) expression -> . expression MORET expression
    (63) expression -> . expression LESSEQ expression
    (64) expression -> . expression MOREEQ expression
    (65) expression -> . expression OR_G expression
    (66) expression -> . expression AND_G expression
    (67) expression -> . NAME EQUALS expression
    (69) expression -> . INT
    (70) expression -> . FLOAT
    (71) expression -> . var
    (72) expression -> . LPARENT expression RPARENT
    (68) var -> . NAME

    MINUS           shift and go to state 49
    FACTORIAL       shift and go to state 50
    NAME            shift and go to state 86
    INT             shift and go to state 51
    FLOAT           shift and go to state 52
    LPARENT         shift and go to state 54

    expression                     shift and go to state 112
    var                            shift and go to state 53

state 85

    (54) expression -> MINUS expression .
    (56) expression -> expression . PLUS expression
    (57) expression -> expression . MINUS expression
    (58) expression -> expression . MULTIPLY expression
    (59) expression -> expression . DIVIDE expression
    (60) expression -> expression . MOD expression
    (61) expression -> expression . LESST expression
    (62) expression -> expression . MORET expression
    (63) expression -> expression . LESSEQ expression
    (64) expression -> expression . MOREEQ expression
    (65) expression -> expression . OR_G expression
    (66) expression -> expression . AND_G expression

    PLUS            reduce using rule 54 (expression -> MINUS expression .)
    MINUS           reduce using rule 54 (expression -> MINUS expression .)
    MULTIPLY        reduce using rule 54 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 54 (expression -> MINUS expression .)
    MOD             reduce using rule 54 (expression -> MINUS expression .)
    LESST           reduce using rule 54 (expression -> MINUS expression .)
    MORET           reduce using rule 54 (expression -> MINUS expression .)
    LESSEQ          reduce using rule 54 (expression -> MINUS expression .)
    MOREEQ          reduce using rule 54 (expression -> MINUS expression .)
    OR_G            reduce using rule 54 (expression -> MINUS expression .)
    AND_G           reduce using rule 54 (expression -> MINUS expression .)
    NEWLINE         reduce using rule 54 (expression -> MINUS expression .)
    RPARENT         reduce using rule 54 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 74 ]
  ! MINUS           [ shift and go to state 75 ]
  ! MULTIPLY        [ shift and go to state 76 ]
  ! DIVIDE          [ shift and go to state 77 ]
  ! MOD             [ shift and go to state 78 ]
  ! LESST           [ shift and go to state 79 ]
  ! MORET           [ shift and go to state 80 ]
  ! LESSEQ          [ shift and go to state 81 ]
  ! MOREEQ          [ shift and go to state 82 ]
  ! OR_G            [ shift and go to state 83 ]
  ! AND_G           [ shift and go to state 84 ]


state 86

    (67) expression -> NAME . EQUALS expression
    (68) var -> NAME .

    EQUALS          shift and go to state 73
    PLUS            reduce using rule 68 (var -> NAME .)
    MINUS           reduce using rule 68 (var -> NAME .)
    MULTIPLY        reduce using rule 68 (var -> NAME .)
    DIVIDE          reduce using rule 68 (var -> NAME .)
    MOD             reduce using rule 68 (var -> NAME .)
    LESST           reduce using rule 68 (var -> NAME .)
    MORET           reduce using rule 68 (var -> NAME .)
    LESSEQ          reduce using rule 68 (var -> NAME .)
    MOREEQ          reduce using rule 68 (var -> NAME .)
    OR_G            reduce using rule 68 (var -> NAME .)
    AND_G           reduce using rule 68 (var -> NAME .)
    NEWLINE         reduce using rule 68 (var -> NAME .)
    RPARENT         reduce using rule 68 (var -> NAME .)


state 87

    (55) expression -> FACTORIAL expression .
    (56) expression -> expression . PLUS expression
    (57) expression -> expression . MINUS expression
    (58) expression -> expression . MULTIPLY expression
    (59) expression -> expression . DIVIDE expression
    (60) expression -> expression . MOD expression
    (61) expression -> expression . LESST expression
    (62) expression -> expression . MORET expression
    (63) expression -> expression . LESSEQ expression
    (64) expression -> expression . MOREEQ expression
    (65) expression -> expression . OR_G expression
    (66) expression -> expression . AND_G expression

    PLUS            reduce using rule 55 (expression -> FACTORIAL expression .)
    MINUS           reduce using rule 55 (expression -> FACTORIAL expression .)
    MULTIPLY        reduce using rule 55 (expression -> FACTORIAL expression .)
    DIVIDE          reduce using rule 55 (expression -> FACTORIAL expression .)
    MOD             reduce using rule 55 (expression -> FACTORIAL expression .)
    LESST           reduce using rule 55 (expression -> FACTORIAL expression .)
    MORET           reduce using rule 55 (expression -> FACTORIAL expression .)
    LESSEQ          reduce using rule 55 (expression -> FACTORIAL expression .)
    MOREEQ          reduce using rule 55 (expression -> FACTORIAL expression .)
    OR_G            reduce using rule 55 (expression -> FACTORIAL expression .)
    AND_G           reduce using rule 55 (expression -> FACTORIAL expression .)
    NEWLINE         reduce using rule 55 (expression -> FACTORIAL expression .)
    RPARENT         reduce using rule 55 (expression -> FACTORIAL expression .)

  ! PLUS            [ shift and go to state 74 ]
  ! MINUS           [ shift and go to state 75 ]
  ! MULTIPLY        [ shift and go to state 76 ]
  ! DIVIDE          [ shift and go to state 77 ]
  ! MOD             [ shift and go to state 78 ]
  ! LESST           [ shift and go to state 79 ]
  ! MORET           [ shift and go to state 80 ]
  ! LESSEQ          [ shift and go to state 81 ]
  ! MOREEQ          [ shift and go to state 82 ]
  ! OR_G            [ shift and go to state 83 ]
  ! AND_G           [ shift and go to state 84 ]


state 88

    (72) expression -> LPARENT expression . RPARENT
    (56) expression -> expression . PLUS expression
    (57) expression -> expression . MINUS expression
    (58) expression -> expression . MULTIPLY expression
    (59) expression -> expression . DIVIDE expression
    (60) expression -> expression . MOD expression
    (61) expression -> expression . LESST expression
    (62) expression -> expression . MORET expression
    (63) expression -> expression . LESSEQ expression
    (64) expression -> expression . MOREEQ expression
    (65) expression -> expression . OR_G expression
    (66) expression -> expression . AND_G expression

    RPARENT         shift and go to state 113
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MOD             shift and go to state 78
    LESST           shift and go to state 79
    MORET           shift and go to state 80
    LESSEQ          shift and go to state 81
    MOREEQ          shift and go to state 82
    OR_G            shift and go to state 83
    AND_G           shift and go to state 84


state 89

    (46) indirecto3 -> PLUS CODOP . AT NAME

    AT              shift and go to state 114


state 90

    (46) indirecto3 -> PLUS CODOP AT . NAME
    (45) indirecto3 -> CODOP AT . NUM

    NAME            shift and go to state 115
    NUM             shift and go to state 94


state 91

    (44) simple3 -> CODOP NUM .

    COMA            reduce using rule 44 (simple3 -> CODOP NUM .)
    NEWLINE         reduce using rule 44 (simple3 -> CODOP NUM .)


state 92

    (42) f3 -> simple3 COMA X .

    NEWLINE         reduce using rule 42 (f3 -> simple3 COMA X .)


state 93

    (51) f2 -> CODOP REG COMA . REG
    (52) f2 -> CODOP REG COMA . NUM

    REG             shift and go to state 116
    NUM             shift and go to state 117


state 94

    (45) indirecto3 -> CODOP AT NUM .

    NEWLINE         reduce using rule 45 (indirecto3 -> CODOP AT NUM .)


state 95

    (47) inmediato3 -> CODOP SHARP NUM .

    NEWLINE         reduce using rule 47 (inmediato3 -> CODOP SHARP NUM .)


state 96

    (48) inmediato3 -> CODOP SHARP NAME .

    NEWLINE         reduce using rule 48 (inmediato3 -> CODOP SHARP NAME .)


state 97

    (6) inicio -> nombre_programa START numero NEWLINE .

    error           reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    NAME            reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    BYTE            reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    WORD            reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    RESB            reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    RESW            reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    PLUS            reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    RSUB            reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    CODOP           reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    END             reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)


state 98

    (7) inicio -> nombre_programa START error NEWLINE .

    error           reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    NAME            reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    BYTE            reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    WORD            reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    RESB            reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    RESW            reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    PLUS            reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    RSUB            reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    CODOP           reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    END             reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)


state 99

    (9) inicio -> error START error NEWLINE .

    error           reduce using rule 9 (inicio -> error START error NEWLINE .)
    NAME            reduce using rule 9 (inicio -> error START error NEWLINE .)
    BYTE            reduce using rule 9 (inicio -> error START error NEWLINE .)
    WORD            reduce using rule 9 (inicio -> error START error NEWLINE .)
    RESB            reduce using rule 9 (inicio -> error START error NEWLINE .)
    RESW            reduce using rule 9 (inicio -> error START error NEWLINE .)
    PLUS            reduce using rule 9 (inicio -> error START error NEWLINE .)
    RSUB            reduce using rule 9 (inicio -> error START error NEWLINE .)
    CODOP           reduce using rule 9 (inicio -> error START error NEWLINE .)
    END             reduce using rule 9 (inicio -> error START error NEWLINE .)


state 100

    (8) inicio -> error START numero NEWLINE .

    error           reduce using rule 8 (inicio -> error START numero NEWLINE .)
    NAME            reduce using rule 8 (inicio -> error START numero NEWLINE .)
    BYTE            reduce using rule 8 (inicio -> error START numero NEWLINE .)
    WORD            reduce using rule 8 (inicio -> error START numero NEWLINE .)
    RESB            reduce using rule 8 (inicio -> error START numero NEWLINE .)
    RESW            reduce using rule 8 (inicio -> error START numero NEWLINE .)
    PLUS            reduce using rule 8 (inicio -> error START numero NEWLINE .)
    RSUB            reduce using rule 8 (inicio -> error START numero NEWLINE .)
    CODOP           reduce using rule 8 (inicio -> error START numero NEWLINE .)
    END             reduce using rule 8 (inicio -> error START numero NEWLINE .)


state 101

    (67) expression -> NAME EQUALS expression .
    (56) expression -> expression . PLUS expression
    (57) expression -> expression . MINUS expression
    (58) expression -> expression . MULTIPLY expression
    (59) expression -> expression . DIVIDE expression
    (60) expression -> expression . MOD expression
    (61) expression -> expression . LESST expression
    (62) expression -> expression . MORET expression
    (63) expression -> expression . LESSEQ expression
    (64) expression -> expression . MOREEQ expression
    (65) expression -> expression . OR_G expression
    (66) expression -> expression . AND_G expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for LESST resolved as shift
  ! shift/reduce conflict for MORET resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for OR_G resolved as shift
  ! shift/reduce conflict for AND_G resolved as shift
    NEWLINE         reduce using rule 67 (expression -> NAME EQUALS expression .)
    RPARENT         reduce using rule 67 (expression -> NAME EQUALS expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MOD             shift and go to state 78
    LESST           shift and go to state 79
    MORET           shift and go to state 80
    LESSEQ          shift and go to state 81
    MOREEQ          shift and go to state 82
    OR_G            shift and go to state 83
    AND_G           shift and go to state 84

  ! PLUS            [ reduce using rule 67 (expression -> NAME EQUALS expression .) ]
  ! MINUS           [ reduce using rule 67 (expression -> NAME EQUALS expression .) ]
  ! MULTIPLY        [ reduce using rule 67 (expression -> NAME EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 67 (expression -> NAME EQUALS expression .) ]
  ! MOD             [ reduce using rule 67 (expression -> NAME EQUALS expression .) ]
  ! LESST           [ reduce using rule 67 (expression -> NAME EQUALS expression .) ]
  ! MORET           [ reduce using rule 67 (expression -> NAME EQUALS expression .) ]
  ! LESSEQ          [ reduce using rule 67 (expression -> NAME EQUALS expression .) ]
  ! MOREEQ          [ reduce using rule 67 (expression -> NAME EQUALS expression .) ]
  ! OR_G            [ reduce using rule 67 (expression -> NAME EQUALS expression .) ]
  ! AND_G           [ reduce using rule 67 (expression -> NAME EQUALS expression .) ]


state 102

    (56) expression -> expression PLUS expression .
    (56) expression -> expression . PLUS expression
    (57) expression -> expression . MINUS expression
    (58) expression -> expression . MULTIPLY expression
    (59) expression -> expression . DIVIDE expression
    (60) expression -> expression . MOD expression
    (61) expression -> expression . LESST expression
    (62) expression -> expression . MORET expression
    (63) expression -> expression . LESSEQ expression
    (64) expression -> expression . MOREEQ expression
    (65) expression -> expression . OR_G expression
    (66) expression -> expression . AND_G expression

    PLUS            reduce using rule 56 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 56 (expression -> expression PLUS expression .)
    LESST           reduce using rule 56 (expression -> expression PLUS expression .)
    MORET           reduce using rule 56 (expression -> expression PLUS expression .)
    LESSEQ          reduce using rule 56 (expression -> expression PLUS expression .)
    MOREEQ          reduce using rule 56 (expression -> expression PLUS expression .)
    OR_G            reduce using rule 56 (expression -> expression PLUS expression .)
    AND_G           reduce using rule 56 (expression -> expression PLUS expression .)
    NEWLINE         reduce using rule 56 (expression -> expression PLUS expression .)
    RPARENT         reduce using rule 56 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MOD             shift and go to state 78

  ! MULTIPLY        [ reduce using rule 56 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 56 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 56 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 74 ]
  ! MINUS           [ shift and go to state 75 ]
  ! LESST           [ shift and go to state 79 ]
  ! MORET           [ shift and go to state 80 ]
  ! LESSEQ          [ shift and go to state 81 ]
  ! MOREEQ          [ shift and go to state 82 ]
  ! OR_G            [ shift and go to state 83 ]
  ! AND_G           [ shift and go to state 84 ]


state 103

    (57) expression -> expression MINUS expression .
    (56) expression -> expression . PLUS expression
    (57) expression -> expression . MINUS expression
    (58) expression -> expression . MULTIPLY expression
    (59) expression -> expression . DIVIDE expression
    (60) expression -> expression . MOD expression
    (61) expression -> expression . LESST expression
    (62) expression -> expression . MORET expression
    (63) expression -> expression . LESSEQ expression
    (64) expression -> expression . MOREEQ expression
    (65) expression -> expression . OR_G expression
    (66) expression -> expression . AND_G expression

    PLUS            reduce using rule 57 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 57 (expression -> expression MINUS expression .)
    LESST           reduce using rule 57 (expression -> expression MINUS expression .)
    MORET           reduce using rule 57 (expression -> expression MINUS expression .)
    LESSEQ          reduce using rule 57 (expression -> expression MINUS expression .)
    MOREEQ          reduce using rule 57 (expression -> expression MINUS expression .)
    OR_G            reduce using rule 57 (expression -> expression MINUS expression .)
    AND_G           reduce using rule 57 (expression -> expression MINUS expression .)
    NEWLINE         reduce using rule 57 (expression -> expression MINUS expression .)
    RPARENT         reduce using rule 57 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MOD             shift and go to state 78

  ! MULTIPLY        [ reduce using rule 57 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 57 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 57 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 74 ]
  ! MINUS           [ shift and go to state 75 ]
  ! LESST           [ shift and go to state 79 ]
  ! MORET           [ shift and go to state 80 ]
  ! LESSEQ          [ shift and go to state 81 ]
  ! MOREEQ          [ shift and go to state 82 ]
  ! OR_G            [ shift and go to state 83 ]
  ! AND_G           [ shift and go to state 84 ]


state 104

    (58) expression -> expression MULTIPLY expression .
    (56) expression -> expression . PLUS expression
    (57) expression -> expression . MINUS expression
    (58) expression -> expression . MULTIPLY expression
    (59) expression -> expression . DIVIDE expression
    (60) expression -> expression . MOD expression
    (61) expression -> expression . LESST expression
    (62) expression -> expression . MORET expression
    (63) expression -> expression . LESSEQ expression
    (64) expression -> expression . MOREEQ expression
    (65) expression -> expression . OR_G expression
    (66) expression -> expression . AND_G expression

    PLUS            reduce using rule 58 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 58 (expression -> expression MULTIPLY expression .)
    MULTIPLY        reduce using rule 58 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 58 (expression -> expression MULTIPLY expression .)
    MOD             reduce using rule 58 (expression -> expression MULTIPLY expression .)
    LESST           reduce using rule 58 (expression -> expression MULTIPLY expression .)
    MORET           reduce using rule 58 (expression -> expression MULTIPLY expression .)
    LESSEQ          reduce using rule 58 (expression -> expression MULTIPLY expression .)
    MOREEQ          reduce using rule 58 (expression -> expression MULTIPLY expression .)
    OR_G            reduce using rule 58 (expression -> expression MULTIPLY expression .)
    AND_G           reduce using rule 58 (expression -> expression MULTIPLY expression .)
    NEWLINE         reduce using rule 58 (expression -> expression MULTIPLY expression .)
    RPARENT         reduce using rule 58 (expression -> expression MULTIPLY expression .)

  ! PLUS            [ shift and go to state 74 ]
  ! MINUS           [ shift and go to state 75 ]
  ! MULTIPLY        [ shift and go to state 76 ]
  ! DIVIDE          [ shift and go to state 77 ]
  ! MOD             [ shift and go to state 78 ]
  ! LESST           [ shift and go to state 79 ]
  ! MORET           [ shift and go to state 80 ]
  ! LESSEQ          [ shift and go to state 81 ]
  ! MOREEQ          [ shift and go to state 82 ]
  ! OR_G            [ shift and go to state 83 ]
  ! AND_G           [ shift and go to state 84 ]


state 105

    (59) expression -> expression DIVIDE expression .
    (56) expression -> expression . PLUS expression
    (57) expression -> expression . MINUS expression
    (58) expression -> expression . MULTIPLY expression
    (59) expression -> expression . DIVIDE expression
    (60) expression -> expression . MOD expression
    (61) expression -> expression . LESST expression
    (62) expression -> expression . MORET expression
    (63) expression -> expression . LESSEQ expression
    (64) expression -> expression . MOREEQ expression
    (65) expression -> expression . OR_G expression
    (66) expression -> expression . AND_G expression

    PLUS            reduce using rule 59 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 59 (expression -> expression DIVIDE expression .)
    MULTIPLY        reduce using rule 59 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 59 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 59 (expression -> expression DIVIDE expression .)
    LESST           reduce using rule 59 (expression -> expression DIVIDE expression .)
    MORET           reduce using rule 59 (expression -> expression DIVIDE expression .)
    LESSEQ          reduce using rule 59 (expression -> expression DIVIDE expression .)
    MOREEQ          reduce using rule 59 (expression -> expression DIVIDE expression .)
    OR_G            reduce using rule 59 (expression -> expression DIVIDE expression .)
    AND_G           reduce using rule 59 (expression -> expression DIVIDE expression .)
    NEWLINE         reduce using rule 59 (expression -> expression DIVIDE expression .)
    RPARENT         reduce using rule 59 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 74 ]
  ! MINUS           [ shift and go to state 75 ]
  ! MULTIPLY        [ shift and go to state 76 ]
  ! DIVIDE          [ shift and go to state 77 ]
  ! MOD             [ shift and go to state 78 ]
  ! LESST           [ shift and go to state 79 ]
  ! MORET           [ shift and go to state 80 ]
  ! LESSEQ          [ shift and go to state 81 ]
  ! MOREEQ          [ shift and go to state 82 ]
  ! OR_G            [ shift and go to state 83 ]
  ! AND_G           [ shift and go to state 84 ]


state 106

    (60) expression -> expression MOD expression .
    (56) expression -> expression . PLUS expression
    (57) expression -> expression . MINUS expression
    (58) expression -> expression . MULTIPLY expression
    (59) expression -> expression . DIVIDE expression
    (60) expression -> expression . MOD expression
    (61) expression -> expression . LESST expression
    (62) expression -> expression . MORET expression
    (63) expression -> expression . LESSEQ expression
    (64) expression -> expression . MOREEQ expression
    (65) expression -> expression . OR_G expression
    (66) expression -> expression . AND_G expression

    PLUS            reduce using rule 60 (expression -> expression MOD expression .)
    MINUS           reduce using rule 60 (expression -> expression MOD expression .)
    MULTIPLY        reduce using rule 60 (expression -> expression MOD expression .)
    DIVIDE          reduce using rule 60 (expression -> expression MOD expression .)
    MOD             reduce using rule 60 (expression -> expression MOD expression .)
    LESST           reduce using rule 60 (expression -> expression MOD expression .)
    MORET           reduce using rule 60 (expression -> expression MOD expression .)
    LESSEQ          reduce using rule 60 (expression -> expression MOD expression .)
    MOREEQ          reduce using rule 60 (expression -> expression MOD expression .)
    OR_G            reduce using rule 60 (expression -> expression MOD expression .)
    AND_G           reduce using rule 60 (expression -> expression MOD expression .)
    NEWLINE         reduce using rule 60 (expression -> expression MOD expression .)
    RPARENT         reduce using rule 60 (expression -> expression MOD expression .)

  ! PLUS            [ shift and go to state 74 ]
  ! MINUS           [ shift and go to state 75 ]
  ! MULTIPLY        [ shift and go to state 76 ]
  ! DIVIDE          [ shift and go to state 77 ]
  ! MOD             [ shift and go to state 78 ]
  ! LESST           [ shift and go to state 79 ]
  ! MORET           [ shift and go to state 80 ]
  ! LESSEQ          [ shift and go to state 81 ]
  ! MOREEQ          [ shift and go to state 82 ]
  ! OR_G            [ shift and go to state 83 ]
  ! AND_G           [ shift and go to state 84 ]


state 107

    (61) expression -> expression LESST expression .
    (56) expression -> expression . PLUS expression
    (57) expression -> expression . MINUS expression
    (58) expression -> expression . MULTIPLY expression
    (59) expression -> expression . DIVIDE expression
    (60) expression -> expression . MOD expression
    (61) expression -> expression . LESST expression
    (62) expression -> expression . MORET expression
    (63) expression -> expression . LESSEQ expression
    (64) expression -> expression . MOREEQ expression
    (65) expression -> expression . OR_G expression
    (66) expression -> expression . AND_G expression

    LESST           reduce using rule 61 (expression -> expression LESST expression .)
    MORET           reduce using rule 61 (expression -> expression LESST expression .)
    LESSEQ          reduce using rule 61 (expression -> expression LESST expression .)
    MOREEQ          reduce using rule 61 (expression -> expression LESST expression .)
    OR_G            reduce using rule 61 (expression -> expression LESST expression .)
    AND_G           reduce using rule 61 (expression -> expression LESST expression .)
    NEWLINE         reduce using rule 61 (expression -> expression LESST expression .)
    RPARENT         reduce using rule 61 (expression -> expression LESST expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MOD             shift and go to state 78

  ! PLUS            [ reduce using rule 61 (expression -> expression LESST expression .) ]
  ! MINUS           [ reduce using rule 61 (expression -> expression LESST expression .) ]
  ! MULTIPLY        [ reduce using rule 61 (expression -> expression LESST expression .) ]
  ! DIVIDE          [ reduce using rule 61 (expression -> expression LESST expression .) ]
  ! MOD             [ reduce using rule 61 (expression -> expression LESST expression .) ]
  ! LESST           [ shift and go to state 79 ]
  ! MORET           [ shift and go to state 80 ]
  ! LESSEQ          [ shift and go to state 81 ]
  ! MOREEQ          [ shift and go to state 82 ]
  ! OR_G            [ shift and go to state 83 ]
  ! AND_G           [ shift and go to state 84 ]


state 108

    (62) expression -> expression MORET expression .
    (56) expression -> expression . PLUS expression
    (57) expression -> expression . MINUS expression
    (58) expression -> expression . MULTIPLY expression
    (59) expression -> expression . DIVIDE expression
    (60) expression -> expression . MOD expression
    (61) expression -> expression . LESST expression
    (62) expression -> expression . MORET expression
    (63) expression -> expression . LESSEQ expression
    (64) expression -> expression . MOREEQ expression
    (65) expression -> expression . OR_G expression
    (66) expression -> expression . AND_G expression

    LESST           reduce using rule 62 (expression -> expression MORET expression .)
    MORET           reduce using rule 62 (expression -> expression MORET expression .)
    LESSEQ          reduce using rule 62 (expression -> expression MORET expression .)
    MOREEQ          reduce using rule 62 (expression -> expression MORET expression .)
    OR_G            reduce using rule 62 (expression -> expression MORET expression .)
    AND_G           reduce using rule 62 (expression -> expression MORET expression .)
    NEWLINE         reduce using rule 62 (expression -> expression MORET expression .)
    RPARENT         reduce using rule 62 (expression -> expression MORET expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MOD             shift and go to state 78

  ! PLUS            [ reduce using rule 62 (expression -> expression MORET expression .) ]
  ! MINUS           [ reduce using rule 62 (expression -> expression MORET expression .) ]
  ! MULTIPLY        [ reduce using rule 62 (expression -> expression MORET expression .) ]
  ! DIVIDE          [ reduce using rule 62 (expression -> expression MORET expression .) ]
  ! MOD             [ reduce using rule 62 (expression -> expression MORET expression .) ]
  ! LESST           [ shift and go to state 79 ]
  ! MORET           [ shift and go to state 80 ]
  ! LESSEQ          [ shift and go to state 81 ]
  ! MOREEQ          [ shift and go to state 82 ]
  ! OR_G            [ shift and go to state 83 ]
  ! AND_G           [ shift and go to state 84 ]


state 109

    (63) expression -> expression LESSEQ expression .
    (56) expression -> expression . PLUS expression
    (57) expression -> expression . MINUS expression
    (58) expression -> expression . MULTIPLY expression
    (59) expression -> expression . DIVIDE expression
    (60) expression -> expression . MOD expression
    (61) expression -> expression . LESST expression
    (62) expression -> expression . MORET expression
    (63) expression -> expression . LESSEQ expression
    (64) expression -> expression . MOREEQ expression
    (65) expression -> expression . OR_G expression
    (66) expression -> expression . AND_G expression

    LESST           reduce using rule 63 (expression -> expression LESSEQ expression .)
    MORET           reduce using rule 63 (expression -> expression LESSEQ expression .)
    LESSEQ          reduce using rule 63 (expression -> expression LESSEQ expression .)
    MOREEQ          reduce using rule 63 (expression -> expression LESSEQ expression .)
    OR_G            reduce using rule 63 (expression -> expression LESSEQ expression .)
    AND_G           reduce using rule 63 (expression -> expression LESSEQ expression .)
    NEWLINE         reduce using rule 63 (expression -> expression LESSEQ expression .)
    RPARENT         reduce using rule 63 (expression -> expression LESSEQ expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MOD             shift and go to state 78

  ! PLUS            [ reduce using rule 63 (expression -> expression LESSEQ expression .) ]
  ! MINUS           [ reduce using rule 63 (expression -> expression LESSEQ expression .) ]
  ! MULTIPLY        [ reduce using rule 63 (expression -> expression LESSEQ expression .) ]
  ! DIVIDE          [ reduce using rule 63 (expression -> expression LESSEQ expression .) ]
  ! MOD             [ reduce using rule 63 (expression -> expression LESSEQ expression .) ]
  ! LESST           [ shift and go to state 79 ]
  ! MORET           [ shift and go to state 80 ]
  ! LESSEQ          [ shift and go to state 81 ]
  ! MOREEQ          [ shift and go to state 82 ]
  ! OR_G            [ shift and go to state 83 ]
  ! AND_G           [ shift and go to state 84 ]


state 110

    (64) expression -> expression MOREEQ expression .
    (56) expression -> expression . PLUS expression
    (57) expression -> expression . MINUS expression
    (58) expression -> expression . MULTIPLY expression
    (59) expression -> expression . DIVIDE expression
    (60) expression -> expression . MOD expression
    (61) expression -> expression . LESST expression
    (62) expression -> expression . MORET expression
    (63) expression -> expression . LESSEQ expression
    (64) expression -> expression . MOREEQ expression
    (65) expression -> expression . OR_G expression
    (66) expression -> expression . AND_G expression

    LESST           reduce using rule 64 (expression -> expression MOREEQ expression .)
    MORET           reduce using rule 64 (expression -> expression MOREEQ expression .)
    LESSEQ          reduce using rule 64 (expression -> expression MOREEQ expression .)
    MOREEQ          reduce using rule 64 (expression -> expression MOREEQ expression .)
    OR_G            reduce using rule 64 (expression -> expression MOREEQ expression .)
    AND_G           reduce using rule 64 (expression -> expression MOREEQ expression .)
    NEWLINE         reduce using rule 64 (expression -> expression MOREEQ expression .)
    RPARENT         reduce using rule 64 (expression -> expression MOREEQ expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MOD             shift and go to state 78

  ! PLUS            [ reduce using rule 64 (expression -> expression MOREEQ expression .) ]
  ! MINUS           [ reduce using rule 64 (expression -> expression MOREEQ expression .) ]
  ! MULTIPLY        [ reduce using rule 64 (expression -> expression MOREEQ expression .) ]
  ! DIVIDE          [ reduce using rule 64 (expression -> expression MOREEQ expression .) ]
  ! MOD             [ reduce using rule 64 (expression -> expression MOREEQ expression .) ]
  ! LESST           [ shift and go to state 79 ]
  ! MORET           [ shift and go to state 80 ]
  ! LESSEQ          [ shift and go to state 81 ]
  ! MOREEQ          [ shift and go to state 82 ]
  ! OR_G            [ shift and go to state 83 ]
  ! AND_G           [ shift and go to state 84 ]


state 111

    (65) expression -> expression OR_G expression .
    (56) expression -> expression . PLUS expression
    (57) expression -> expression . MINUS expression
    (58) expression -> expression . MULTIPLY expression
    (59) expression -> expression . DIVIDE expression
    (60) expression -> expression . MOD expression
    (61) expression -> expression . LESST expression
    (62) expression -> expression . MORET expression
    (63) expression -> expression . LESSEQ expression
    (64) expression -> expression . MOREEQ expression
    (65) expression -> expression . OR_G expression
    (66) expression -> expression . AND_G expression

    OR_G            reduce using rule 65 (expression -> expression OR_G expression .)
    AND_G           reduce using rule 65 (expression -> expression OR_G expression .)
    NEWLINE         reduce using rule 65 (expression -> expression OR_G expression .)
    RPARENT         reduce using rule 65 (expression -> expression OR_G expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MOD             shift and go to state 78
    LESST           shift and go to state 79
    MORET           shift and go to state 80
    LESSEQ          shift and go to state 81
    MOREEQ          shift and go to state 82

  ! PLUS            [ reduce using rule 65 (expression -> expression OR_G expression .) ]
  ! MINUS           [ reduce using rule 65 (expression -> expression OR_G expression .) ]
  ! MULTIPLY        [ reduce using rule 65 (expression -> expression OR_G expression .) ]
  ! DIVIDE          [ reduce using rule 65 (expression -> expression OR_G expression .) ]
  ! MOD             [ reduce using rule 65 (expression -> expression OR_G expression .) ]
  ! LESST           [ reduce using rule 65 (expression -> expression OR_G expression .) ]
  ! MORET           [ reduce using rule 65 (expression -> expression OR_G expression .) ]
  ! LESSEQ          [ reduce using rule 65 (expression -> expression OR_G expression .) ]
  ! MOREEQ          [ reduce using rule 65 (expression -> expression OR_G expression .) ]
  ! OR_G            [ shift and go to state 83 ]
  ! AND_G           [ shift and go to state 84 ]


state 112

    (66) expression -> expression AND_G expression .
    (56) expression -> expression . PLUS expression
    (57) expression -> expression . MINUS expression
    (58) expression -> expression . MULTIPLY expression
    (59) expression -> expression . DIVIDE expression
    (60) expression -> expression . MOD expression
    (61) expression -> expression . LESST expression
    (62) expression -> expression . MORET expression
    (63) expression -> expression . LESSEQ expression
    (64) expression -> expression . MOREEQ expression
    (65) expression -> expression . OR_G expression
    (66) expression -> expression . AND_G expression

    OR_G            reduce using rule 66 (expression -> expression AND_G expression .)
    AND_G           reduce using rule 66 (expression -> expression AND_G expression .)
    NEWLINE         reduce using rule 66 (expression -> expression AND_G expression .)
    RPARENT         reduce using rule 66 (expression -> expression AND_G expression .)
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    MULTIPLY        shift and go to state 76
    DIVIDE          shift and go to state 77
    MOD             shift and go to state 78
    LESST           shift and go to state 79
    MORET           shift and go to state 80
    LESSEQ          shift and go to state 81
    MOREEQ          shift and go to state 82

  ! PLUS            [ reduce using rule 66 (expression -> expression AND_G expression .) ]
  ! MINUS           [ reduce using rule 66 (expression -> expression AND_G expression .) ]
  ! MULTIPLY        [ reduce using rule 66 (expression -> expression AND_G expression .) ]
  ! DIVIDE          [ reduce using rule 66 (expression -> expression AND_G expression .) ]
  ! MOD             [ reduce using rule 66 (expression -> expression AND_G expression .) ]
  ! LESST           [ reduce using rule 66 (expression -> expression AND_G expression .) ]
  ! MORET           [ reduce using rule 66 (expression -> expression AND_G expression .) ]
  ! LESSEQ          [ reduce using rule 66 (expression -> expression AND_G expression .) ]
  ! MOREEQ          [ reduce using rule 66 (expression -> expression AND_G expression .) ]
  ! OR_G            [ shift and go to state 83 ]
  ! AND_G           [ shift and go to state 84 ]


state 113

    (72) expression -> LPARENT expression RPARENT .

    PLUS            reduce using rule 72 (expression -> LPARENT expression RPARENT .)
    MINUS           reduce using rule 72 (expression -> LPARENT expression RPARENT .)
    MULTIPLY        reduce using rule 72 (expression -> LPARENT expression RPARENT .)
    DIVIDE          reduce using rule 72 (expression -> LPARENT expression RPARENT .)
    MOD             reduce using rule 72 (expression -> LPARENT expression RPARENT .)
    LESST           reduce using rule 72 (expression -> LPARENT expression RPARENT .)
    MORET           reduce using rule 72 (expression -> LPARENT expression RPARENT .)
    LESSEQ          reduce using rule 72 (expression -> LPARENT expression RPARENT .)
    MOREEQ          reduce using rule 72 (expression -> LPARENT expression RPARENT .)
    OR_G            reduce using rule 72 (expression -> LPARENT expression RPARENT .)
    AND_G           reduce using rule 72 (expression -> LPARENT expression RPARENT .)
    NEWLINE         reduce using rule 72 (expression -> LPARENT expression RPARENT .)
    RPARENT         reduce using rule 72 (expression -> LPARENT expression RPARENT .)


state 114

    (46) indirecto3 -> PLUS CODOP AT . NAME

    NAME            shift and go to state 115


state 115

    (46) indirecto3 -> PLUS CODOP AT NAME .

    NEWLINE         reduce using rule 46 (indirecto3 -> PLUS CODOP AT NAME .)


state 116

    (51) f2 -> CODOP REG COMA REG .

    NEWLINE         reduce using rule 51 (f2 -> CODOP REG COMA REG .)


state 117

    (52) f2 -> CODOP REG COMA NUM .

    NEWLINE         reduce using rule 52 (f2 -> CODOP REG COMA NUM .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for error in state 0 resolved as shift
WARNING: shift/reduce conflict for NAME in state 0 resolved as shift
WARNING: shift/reduce conflict for error in state 4 resolved as shift
WARNING: shift/reduce conflict for NAME in state 4 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 4 resolved as shift
WARNING: shift/reduce conflict for WORD in state 4 resolved as shift
WARNING: shift/reduce conflict for RESB in state 4 resolved as shift
WARNING: shift/reduce conflict for RESW in state 4 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 4 resolved as shift
WARNING: shift/reduce conflict for RSUB in state 4 resolved as shift
WARNING: shift/reduce conflict for CODOP in state 4 resolved as shift
WARNING: shift/reduce conflict for END in state 11 resolved as shift
WARNING: shift/reduce conflict for error in state 11 resolved as shift
WARNING: shift/reduce conflict for NAME in state 11 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 11 resolved as shift
WARNING: shift/reduce conflict for WORD in state 11 resolved as shift
WARNING: shift/reduce conflict for RESB in state 11 resolved as shift
WARNING: shift/reduce conflict for RESW in state 11 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 11 resolved as shift
WARNING: shift/reduce conflict for RSUB in state 11 resolved as shift
WARNING: shift/reduce conflict for CODOP in state 11 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 101 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 101 resolved as shift
WARNING: shift/reduce conflict for MOD in state 101 resolved as shift
WARNING: shift/reduce conflict for LESST in state 101 resolved as shift
WARNING: shift/reduce conflict for MORET in state 101 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 101 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 101 resolved as shift
WARNING: shift/reduce conflict for OR_G in state 101 resolved as shift
WARNING: shift/reduce conflict for AND_G in state 101 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (sicxe_file -> programa)
WARNING: rejected rule (empty -> <empty>) in state 2
WARNING: reduce/reduce conflict in state 10 resolved using rule (sicxe_file -> empty programa)
WARNING: rejected rule (empty -> <empty>) in state 10
WARNING: reduce/reduce conflict in state 47 resolved using rule (opdirectiva -> NAME)
WARNING: rejected rule (var -> NAME) in state 47
WARNING: reduce/reduce conflict in state 59 resolved using rule (simple3 -> CODOP NUM)
WARNING: rejected rule (f2 -> CODOP NUM) in state 59
WARNING: Rule (empty -> <empty>) is never reduced
WARNING: Rule (f2 -> CODOP NUM) is never reduced
