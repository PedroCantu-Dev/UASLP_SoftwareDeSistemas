
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORANDleftMORETLESSTMOREEQLESSEQleftPLUSMINUSleftMULTIPLYDIVIDEMODrightUMINUSFACTORIALAND DIVIDE EQUALS FACTORIAL FLOAT INT LESSEQ LESST LPARENT MINUS MOD MOREEQ MORET MULTIPLY NAME OR PLUS RPARENT UMINUS\n    calc : expression\n         | bool_expression\n         | empty\n    \n    bool_expression : \n    expression : MINUS expression %prec UMINUS\n    expression : FACTORIAL expression\n    \n    expression : expression PLUS expression\n               | expression MINUS expression\n               | expression MULTIPLY expression\n               | expression DIVIDE expression\n               | expression MOD expression\n               | expression LESST expression\n               | expression MORET expression\n               | expression LESSEQ expression\n               | expression MOREEQ expression\n               | expression OR expression\n               | expression AND expression\n\n    \n    expression : NAME EQUALS expression\n    \n    var : NAME\n    \n    expression : INT\n               | FLOAT \n               | var\n    \n    expression : LPARENT expression RPARENT\n    \n    empty :\n    '
    
_lr_action_items = {'MINUS':([0,2,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[5,13,5,5,-19,-20,-21,-22,5,5,5,5,5,5,5,5,5,5,5,5,-5,-6,5,13,-7,-8,-9,-10,-11,13,13,13,13,13,13,13,-23,]),'FACTORIAL':([0,5,6,11,12,13,14,15,16,17,18,19,20,21,22,25,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'NAME':([0,5,6,11,12,13,14,15,16,17,18,19,20,21,22,25,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'INT':([0,5,6,11,12,13,14,15,16,17,18,19,20,21,22,25,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'FLOAT':([0,5,6,11,12,13,14,15,16,17,18,19,20,21,22,25,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'LPARENT':([0,5,6,11,12,13,14,15,16,17,18,19,20,21,22,25,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'$end':([0,1,2,3,4,7,8,9,10,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,],[-4,0,-1,-2,-3,-19,-20,-21,-22,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-23,]),'PLUS':([2,7,8,9,10,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[12,-19,-20,-21,-22,-5,-6,12,-7,-8,-9,-10,-11,12,12,12,12,12,12,12,-23,]),'MULTIPLY':([2,7,8,9,10,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[14,-19,-20,-21,-22,-5,-6,14,14,14,-9,-10,-11,14,14,14,14,14,14,14,-23,]),'DIVIDE':([2,7,8,9,10,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[15,-19,-20,-21,-22,-5,-6,15,15,15,-9,-10,-11,15,15,15,15,15,15,15,-23,]),'MOD':([2,7,8,9,10,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[16,-19,-20,-21,-22,-5,-6,16,16,16,-9,-10,-11,16,16,16,16,16,16,16,-23,]),'LESST':([2,7,8,9,10,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[17,-19,-20,-21,-22,-5,-6,17,-7,-8,-9,-10,-11,-12,-13,-14,-15,17,17,17,-23,]),'MORET':([2,7,8,9,10,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[18,-19,-20,-21,-22,-5,-6,18,-7,-8,-9,-10,-11,-12,-13,-14,-15,18,18,18,-23,]),'LESSEQ':([2,7,8,9,10,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[19,-19,-20,-21,-22,-5,-6,19,-7,-8,-9,-10,-11,-12,-13,-14,-15,19,19,19,-23,]),'MOREEQ':([2,7,8,9,10,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[20,-19,-20,-21,-22,-5,-6,20,-7,-8,-9,-10,-11,-12,-13,-14,-15,20,20,20,-23,]),'OR':([2,7,8,9,10,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[21,-19,-20,-21,-22,-5,-6,21,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,21,-23,]),'AND':([2,7,8,9,10,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[22,-19,-20,-21,-22,-5,-6,22,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,22,-23,]),'EQUALS':([7,],[25,]),'RPARENT':([7,8,9,10,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[-19,-20,-21,-22,-5,-6,39,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'calc':([0,],[1,]),'expression':([0,5,6,11,12,13,14,15,16,17,18,19,20,21,22,25,],[2,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,]),'bool_expression':([0,],[3,]),'empty':([0,],[4,]),'var':([0,5,6,11,12,13,14,15,16,17,18,19,20,21,22,25,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> calc","S'",1,None,None,None),
  ('calc -> expression','calc',1,'p_calc','calc_lex.py',108),
  ('calc -> bool_expression','calc',1,'p_calc','calc_lex.py',109),
  ('calc -> empty','calc',1,'p_calc','calc_lex.py',110),
  ('bool_expression -> <empty>','bool_expression',0,'p_bool_expression','calc_lex.py',117),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calc_lex.py',123),
  ('expression -> FACTORIAL expression','expression',2,'p_expression_uni','calc_lex.py',130),
  ('expression -> expression PLUS expression','expression',3,'p_expression_bin','calc_lex.py',137),
  ('expression -> expression MINUS expression','expression',3,'p_expression_bin','calc_lex.py',138),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_bin','calc_lex.py',139),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_bin','calc_lex.py',140),
  ('expression -> expression MOD expression','expression',3,'p_expression_bin','calc_lex.py',141),
  ('expression -> expression LESST expression','expression',3,'p_expression_bin','calc_lex.py',142),
  ('expression -> expression MORET expression','expression',3,'p_expression_bin','calc_lex.py',143),
  ('expression -> expression LESSEQ expression','expression',3,'p_expression_bin','calc_lex.py',144),
  ('expression -> expression MOREEQ expression','expression',3,'p_expression_bin','calc_lex.py',145),
  ('expression -> expression OR expression','expression',3,'p_expression_bin','calc_lex.py',146),
  ('expression -> expression AND expression','expression',3,'p_expression_bin','calc_lex.py',147),
  ('expression -> NAME EQUALS expression','expression',3,'p_expression_assign','calc_lex.py',155),
  ('var -> NAME','var',1,'p_var_expression','calc_lex.py',162),
  ('expression -> INT','expression',1,'p_expression_int_float_name','calc_lex.py',169),
  ('expression -> FLOAT','expression',1,'p_expression_int_float_name','calc_lex.py',170),
  ('expression -> var','expression',1,'p_expression_int_float_name','calc_lex.py',171),
  ('expression -> LPARENT expression RPARENT','expression',3,'p_expression_parent','calc_lex.py',178),
  ('empty -> <empty>','empty',0,'p_empty','calc_lex.py',185),
]
