
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "sicxe_fileleftNEWLINEleftOR_GAND_GleftMORETLESSTMOREEQLESSEQleftPLUSMINUSleftMULTIPLYDIVIDEMODrightUMINUSEXTENDEDFACTORIALrightATSHARPEXTENDEDrightNUMleftNAMEleftCODOPleftREGADD ADDF ADDR AND AND_G ARROBA AT BASE BYTE CLEAR CODOP COMA COMF COMMENT_ML COMP COMPR C_TEXT DIRECTIV DIV DIVF DIVIDE DIVR END EQUALS EXTENDED FACTORIAL FINL FIX FLOAT FLOAT_NUM HEX_INT HIO INT J JEQ JGT JLT JSUB LDA LDB LDCH LDF LDL LDS LDT LDX LESSEQ LESST LPARENT LPS MINUS MOD MODIF MOREEQ MORET MUL MULF MULR MULTIPLY NAME NEWLINE NORM NUM OPERANDO OR OR_G PLUS RD REG RESB RESW RMO RPARENT RSUB SHARP SHIFTL SHIFTR SIO SSK STA START STB STCH STF STI STL STS STSW STT STX SUB SUBF SUBR SVC TD TIO TIX TIXR UMINUS WD WORD X_HEXsicxe_file : programa\n    | empty programa\n    | empty programa empty\n    | programa emptyprograma : inicio proposiciones fininicio : nombre_programa START numero NEWLINEinicio : nombre_programa START error NEWLINE inicio : error START numero NEWLINE inicio : error START error NEWLINE numero : INT\n    | HEX_INTfin : END entrada entrada : NAMEproposiciones : proposiciones proposicion\n    | proposicionproposicion :\n    | directiva NEWLINE\n    | instruccion NEWLINE\n    | error NEWLINE\n    instruccion : etiqueta opformato\n    | opformato\n    \n    instruccion : error opformato\n    | etiqueta error\n    \n    directiva : etiqueta tipodirectiva opdirectiva\n    | tipodirectiva opdirectivaopdirectiva : NUM\n    | NAME\n    | expression tipodirectiva : BYTE\n    | WORD\n    | RESB\n    | RESW\n    | BASEetiqueta : NAME nombre_programa : NAME opformato : f4\n    | f3\n    | f2\n    | f1f4 : PLUS f3 %prec EXTENDEDf3 : simple3\n    | indirecto3\n    | inmediato3\n    | RSUB f3 : simple3 COMA 'X'simple3 : CODOP NAME\n    | CODOP NUM\n    | CODOP expressionindirecto3 : CODOP AT NUM\n    | CODOP AT expressioninmediato3 : CODOP SHARP NUM\n    | CODOP SHARP expressionf2 : CODOP NUM\n    | CODOP REG\n    | CODOP REG COMA REG\n    | CODOP REG COMA NUMf1 : CODOP expression : MINUS expression %prec UMINUS\n    expression : FACTORIAL expression\n    \n    expression : expression PLUS expression\n               | expression MINUS expression\n               | expression MULTIPLY expression\n               | expression DIVIDE expression\n               | expression MOD expression\n               | expression LESST expression\n               | expression MORET expression\n               | expression LESSEQ expression\n               | expression MOREEQ expression\n               | expression OR_G expression\n               | expression AND_G expression\n\n    \n    expression : NAME EQUALS expression\n    \n    var : NAME\n    \n    expression : INT\n               | FLOAT\n               | var\n    \n    expression : LPARENT expression RPARENT\n    \n    empty : NEWLINE\n    |\n    "
    
_lr_action_items = {'NEWLINE':([0,2,10,13,14,15,18,25,26,27,28,30,31,32,33,34,38,44,46,47,48,49,50,51,54,55,56,58,61,62,63,64,67,68,69,70,71,72,73,74,75,88,89,90,92,93,95,96,97,98,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,],[5,5,5,41,42,43,-21,-36,-37,-38,-39,-41,-42,-43,-44,-57,-5,-22,-20,-23,-25,-26,-27,-28,-73,-74,-75,-40,-47,-54,-46,-48,99,100,-10,-11,101,102,-12,-13,-24,-58,-72,-59,-47,-45,-49,-50,-51,-52,-71,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-76,-55,-56,]),'error':([0,3,4,5,11,12,16,19,35,36,39,41,42,43,99,100,101,102,],[7,7,15,-77,15,-15,47,-34,68,71,-14,-17,-18,-19,-6,-7,-9,-8,]),'NAME':([0,3,4,5,11,12,17,20,21,22,23,24,34,39,40,41,42,43,45,52,53,57,59,65,66,76,77,78,79,80,81,82,83,84,85,86,87,99,100,101,102,],[8,8,19,-77,19,-15,50,-29,-30,-31,-32,-33,63,-14,74,-17,-18,-19,50,89,89,89,63,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-6,-7,-9,-8,]),'$end':([1,2,5,9,10,37,38,73,74,],[0,-1,-77,-4,-2,-3,-5,-12,-13,]),'END':([4,11,12,39,41,42,43,99,100,101,102,],[-16,40,-15,-14,-17,-18,-19,-6,-7,-9,-8,]),'BYTE':([4,11,12,16,19,39,41,42,43,99,100,101,102,],[20,20,-15,20,-34,-14,-17,-18,-19,-6,-7,-9,-8,]),'WORD':([4,11,12,16,19,39,41,42,43,99,100,101,102,],[21,21,-15,21,-34,-14,-17,-18,-19,-6,-7,-9,-8,]),'RESB':([4,11,12,16,19,39,41,42,43,99,100,101,102,],[22,22,-15,22,-34,-14,-17,-18,-19,-6,-7,-9,-8,]),'RESW':([4,11,12,16,19,39,41,42,43,99,100,101,102,],[23,23,-15,23,-34,-14,-17,-18,-19,-6,-7,-9,-8,]),'BASE':([4,11,12,16,19,39,41,42,43,99,100,101,102,],[24,24,-15,24,-34,-14,-17,-18,-19,-6,-7,-9,-8,]),'PLUS':([4,11,12,15,16,19,39,41,42,43,50,51,54,55,56,63,64,88,89,90,91,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,],[29,29,-15,29,29,-34,-14,-17,-18,-19,-72,77,-73,-74,-75,-72,77,-58,-72,-59,77,77,77,-6,-7,-9,-8,77,-60,-61,-62,-63,-64,77,77,77,77,77,77,-76,]),'RSUB':([4,11,12,15,16,19,29,39,41,42,43,99,100,101,102,],[33,33,-15,33,33,-34,33,-14,-17,-18,-19,-6,-7,-9,-8,]),'CODOP':([4,11,12,15,16,19,29,39,41,42,43,99,100,101,102,],[34,34,-15,34,34,-34,59,-14,-17,-18,-19,-6,-7,-9,-8,]),'START':([6,7,8,],[35,36,-35,]),'NUM':([17,20,21,22,23,24,34,45,59,65,66,94,],[49,-29,-30,-31,-32,-33,61,49,92,95,97,117,]),'MINUS':([17,20,21,22,23,24,34,45,50,51,52,53,54,55,56,57,59,63,64,65,66,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,],[52,-29,-30,-31,-32,-33,52,52,-72,78,52,52,-73,-74,-75,52,52,-72,78,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-58,-72,-59,78,78,78,78,-60,-61,-62,-63,-64,78,78,78,78,78,78,-76,]),'FACTORIAL':([17,20,21,22,23,24,34,45,52,53,57,59,65,66,76,77,78,79,80,81,82,83,84,85,86,87,],[53,-29,-30,-31,-32,-33,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'INT':([17,20,21,22,23,24,34,35,36,45,52,53,57,59,65,66,76,77,78,79,80,81,82,83,84,85,86,87,],[54,-29,-30,-31,-32,-33,54,69,69,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'FLOAT':([17,20,21,22,23,24,34,45,52,53,57,59,65,66,76,77,78,79,80,81,82,83,84,85,86,87,],[55,-29,-30,-31,-32,-33,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'LPARENT':([17,20,21,22,23,24,34,45,52,53,57,59,65,66,76,77,78,79,80,81,82,83,84,85,86,87,],[57,-29,-30,-31,-32,-33,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'COMA':([30,54,55,56,61,62,63,64,88,89,90,92,103,104,105,106,107,108,109,110,111,112,113,114,115,],[60,-73,-74,-75,-47,94,-46,-48,-58,-72,-59,-47,-71,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-76,]),'REG':([34,94,],[62,116,]),'AT':([34,59,],[65,65,]),'SHARP':([34,59,],[66,66,]),'HEX_INT':([35,36,],[70,70,]),'EQUALS':([50,63,89,],[76,76,76,]),'MULTIPLY':([50,51,54,55,56,63,64,88,89,90,91,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,],[-72,79,-73,-74,-75,-72,79,-58,-72,-59,79,79,79,79,79,79,-62,-63,-64,79,79,79,79,79,79,-76,]),'DIVIDE':([50,51,54,55,56,63,64,88,89,90,91,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,],[-72,80,-73,-74,-75,-72,80,-58,-72,-59,80,80,80,80,80,80,-62,-63,-64,80,80,80,80,80,80,-76,]),'MOD':([50,51,54,55,56,63,64,88,89,90,91,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,],[-72,81,-73,-74,-75,-72,81,-58,-72,-59,81,81,81,81,81,81,-62,-63,-64,81,81,81,81,81,81,-76,]),'LESST':([50,51,54,55,56,63,64,88,89,90,91,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,],[-72,82,-73,-74,-75,-72,82,-58,-72,-59,82,82,82,82,-60,-61,-62,-63,-64,-65,-66,-67,-68,82,82,-76,]),'MORET':([50,51,54,55,56,63,64,88,89,90,91,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,],[-72,83,-73,-74,-75,-72,83,-58,-72,-59,83,83,83,83,-60,-61,-62,-63,-64,-65,-66,-67,-68,83,83,-76,]),'LESSEQ':([50,51,54,55,56,63,64,88,89,90,91,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,],[-72,84,-73,-74,-75,-72,84,-58,-72,-59,84,84,84,84,-60,-61,-62,-63,-64,-65,-66,-67,-68,84,84,-76,]),'MOREEQ':([50,51,54,55,56,63,64,88,89,90,91,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,],[-72,85,-73,-74,-75,-72,85,-58,-72,-59,85,85,85,85,-60,-61,-62,-63,-64,-65,-66,-67,-68,85,85,-76,]),'OR_G':([50,51,54,55,56,63,64,88,89,90,91,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,],[-72,86,-73,-74,-75,-72,86,-58,-72,-59,86,86,86,86,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-76,]),'AND_G':([50,51,54,55,56,63,64,88,89,90,91,96,98,103,104,105,106,107,108,109,110,111,112,113,114,115,],[-72,87,-73,-74,-75,-72,87,-58,-72,-59,87,87,87,87,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-76,]),'RPARENT':([54,55,56,88,89,90,91,103,104,105,106,107,108,109,110,111,112,113,114,115,],[-73,-74,-75,-58,-72,-59,115,-71,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-76,]),'X':([60,],[93,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sicxe_file':([0,],[1,]),'programa':([0,3,],[2,10,]),'empty':([0,2,10,],[3,9,37,]),'inicio':([0,3,],[4,4,]),'nombre_programa':([0,3,],[6,6,]),'proposiciones':([4,],[11,]),'proposicion':([4,11,],[12,39,]),'directiva':([4,11,],[13,13,]),'instruccion':([4,11,],[14,14,]),'etiqueta':([4,11,],[16,16,]),'tipodirectiva':([4,11,16,],[17,17,45,]),'opformato':([4,11,15,16,],[18,18,44,46,]),'f4':([4,11,15,16,],[25,25,25,25,]),'f3':([4,11,15,16,29,],[26,26,26,26,58,]),'f2':([4,11,15,16,],[27,27,27,27,]),'f1':([4,11,15,16,],[28,28,28,28,]),'simple3':([4,11,15,16,29,],[30,30,30,30,30,]),'indirecto3':([4,11,15,16,29,],[31,31,31,31,31,]),'inmediato3':([4,11,15,16,29,],[32,32,32,32,32,]),'fin':([11,],[38,]),'opdirectiva':([17,45,],[48,75,]),'expression':([17,34,45,52,53,57,59,65,66,76,77,78,79,80,81,82,83,84,85,86,87,],[51,64,51,88,90,91,64,96,98,103,104,105,106,107,108,109,110,111,112,113,114,]),'var':([17,34,45,52,53,57,59,65,66,76,77,78,79,80,81,82,83,84,85,86,87,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'numero':([35,36,],[67,72,]),'entrada':([40,],[73,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sicxe_file","S'",1,None,None,None),
  ('sicxe_file -> programa','sicxe_file',1,'p_sicxe_file','lex_SICXE.py',481),
  ('sicxe_file -> empty programa','sicxe_file',2,'p_sicxe_file','lex_SICXE.py',482),
  ('sicxe_file -> empty programa empty','sicxe_file',3,'p_sicxe_file','lex_SICXE.py',483),
  ('sicxe_file -> programa empty','sicxe_file',2,'p_sicxe_file','lex_SICXE.py',484),
  ('programa -> inicio proposiciones fin','programa',3,'p_programa','lex_SICXE.py',488),
  ('inicio -> nombre_programa START numero NEWLINE','inicio',4,'p_inicio','lex_SICXE.py',494),
  ('inicio -> nombre_programa START error NEWLINE','inicio',4,'p_error_inicio_numero','lex_SICXE.py',499),
  ('inicio -> error START numero NEWLINE','inicio',4,'p_error_inicio_nombre_programa','lex_SICXE.py',504),
  ('inicio -> error START error NEWLINE','inicio',4,'p_error_inicio_nombre_numero','lex_SICXE.py',509),
  ('numero -> INT','numero',1,'p_numero','lex_SICXE.py',514),
  ('numero -> HEX_INT','numero',1,'p_numero','lex_SICXE.py',515),
  ('fin -> END entrada','fin',2,'p_fin','lex_SICXE.py',520),
  ('entrada -> NAME','entrada',1,'p_entrada','lex_SICXE.py',525),
  ('proposiciones -> proposiciones proposicion','proposiciones',2,'p_proposiciones','lex_SICXE.py',530),
  ('proposiciones -> proposicion','proposiciones',1,'p_proposiciones','lex_SICXE.py',531),
  ('proposicion -> <empty>','proposicion',0,'p_proposicion','lex_SICXE.py',540),
  ('proposicion -> directiva NEWLINE','proposicion',2,'p_proposicion','lex_SICXE.py',541),
  ('proposicion -> instruccion NEWLINE','proposicion',2,'p_proposicion','lex_SICXE.py',542),
  ('proposicion -> error NEWLINE','proposicion',2,'p_proposicion','lex_SICXE.py',543),
  ('instruccion -> etiqueta opformato','instruccion',2,'p_instruccion','lex_SICXE.py',549),
  ('instruccion -> opformato','instruccion',1,'p_instruccion','lex_SICXE.py',550),
  ('instruccion -> error opformato','instruccion',2,'p_instruccion_error','lex_SICXE.py',560),
  ('instruccion -> etiqueta error','instruccion',2,'p_instruccion_error','lex_SICXE.py',561),
  ('directiva -> etiqueta tipodirectiva opdirectiva','directiva',3,'p_directiva','lex_SICXE.py',571),
  ('directiva -> tipodirectiva opdirectiva','directiva',2,'p_directiva','lex_SICXE.py',572),
  ('opdirectiva -> NUM','opdirectiva',1,'p_opdirectiva','lex_SICXE.py',582),
  ('opdirectiva -> NAME','opdirectiva',1,'p_opdirectiva','lex_SICXE.py',583),
  ('opdirectiva -> expression','opdirectiva',1,'p_opdirectiva','lex_SICXE.py',584),
  ('tipodirectiva -> BYTE','tipodirectiva',1,'p_tipodirectiva','lex_SICXE.py',591),
  ('tipodirectiva -> WORD','tipodirectiva',1,'p_tipodirectiva','lex_SICXE.py',592),
  ('tipodirectiva -> RESB','tipodirectiva',1,'p_tipodirectiva','lex_SICXE.py',593),
  ('tipodirectiva -> RESW','tipodirectiva',1,'p_tipodirectiva','lex_SICXE.py',594),
  ('tipodirectiva -> BASE','tipodirectiva',1,'p_tipodirectiva','lex_SICXE.py',595),
  ('etiqueta -> NAME','etiqueta',1,'p_etiqueta','lex_SICXE.py',602),
  ('nombre_programa -> NAME','nombre_programa',1,'p_nombre_programa','lex_SICXE.py',609),
  ('opformato -> f4','opformato',1,'p_opformato','lex_SICXE.py',616),
  ('opformato -> f3','opformato',1,'p_opformato','lex_SICXE.py',617),
  ('opformato -> f2','opformato',1,'p_opformato','lex_SICXE.py',618),
  ('opformato -> f1','opformato',1,'p_opformato','lex_SICXE.py',619),
  ('f4 -> PLUS f3','f4',2,'p_f4','lex_SICXE.py',626),
  ('f3 -> simple3','f3',1,'p_f3','lex_SICXE.py',633),
  ('f3 -> indirecto3','f3',1,'p_f3','lex_SICXE.py',634),
  ('f3 -> inmediato3','f3',1,'p_f3','lex_SICXE.py',635),
  ('f3 -> RSUB','f3',1,'p_f3','lex_SICXE.py',636),
  ('f3 -> simple3 COMA X','f3',3,'p_f3_Indexado','lex_SICXE.py',644),
  ('simple3 -> CODOP NAME','simple3',2,'p_simple3','lex_SICXE.py',651),
  ('simple3 -> CODOP NUM','simple3',2,'p_simple3','lex_SICXE.py',652),
  ('simple3 -> CODOP expression','simple3',2,'p_simple3','lex_SICXE.py',653),
  ('indirecto3 -> CODOP AT NUM','indirecto3',3,'p_indirecto3','lex_SICXE.py',660),
  ('indirecto3 -> CODOP AT expression','indirecto3',3,'p_indirecto3','lex_SICXE.py',661),
  ('inmediato3 -> CODOP SHARP NUM','inmediato3',3,'p_inmediato3','lex_SICXE.py',666),
  ('inmediato3 -> CODOP SHARP expression','inmediato3',3,'p_inmediato3','lex_SICXE.py',667),
  ('f2 -> CODOP NUM','f2',2,'p_f2','lex_SICXE.py',672),
  ('f2 -> CODOP REG','f2',2,'p_f2','lex_SICXE.py',673),
  ('f2 -> CODOP REG COMA REG','f2',4,'p_f2','lex_SICXE.py',674),
  ('f2 -> CODOP REG COMA NUM','f2',4,'p_f2','lex_SICXE.py',675),
  ('f1 -> CODOP','f1',1,'p_f1','lex_SICXE.py',683),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','lex_SICXE.py',694),
  ('expression -> FACTORIAL expression','expression',2,'p_expression_uni','lex_SICXE.py',700),
  ('expression -> expression PLUS expression','expression',3,'p_expression_bin','lex_SICXE.py',707),
  ('expression -> expression MINUS expression','expression',3,'p_expression_bin','lex_SICXE.py',708),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_bin','lex_SICXE.py',709),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_bin','lex_SICXE.py',710),
  ('expression -> expression MOD expression','expression',3,'p_expression_bin','lex_SICXE.py',711),
  ('expression -> expression LESST expression','expression',3,'p_expression_bin','lex_SICXE.py',712),
  ('expression -> expression MORET expression','expression',3,'p_expression_bin','lex_SICXE.py',713),
  ('expression -> expression LESSEQ expression','expression',3,'p_expression_bin','lex_SICXE.py',714),
  ('expression -> expression MOREEQ expression','expression',3,'p_expression_bin','lex_SICXE.py',715),
  ('expression -> expression OR_G expression','expression',3,'p_expression_bin','lex_SICXE.py',716),
  ('expression -> expression AND_G expression','expression',3,'p_expression_bin','lex_SICXE.py',717),
  ('expression -> NAME EQUALS expression','expression',3,'p_expression_assign','lex_SICXE.py',725),
  ('var -> NAME','var',1,'p_var_expression','lex_SICXE.py',732),
  ('expression -> INT','expression',1,'p_expression_int_float_name','lex_SICXE.py',739),
  ('expression -> FLOAT','expression',1,'p_expression_int_float_name','lex_SICXE.py',740),
  ('expression -> var','expression',1,'p_expression_int_float_name','lex_SICXE.py',741),
  ('expression -> LPARENT expression RPARENT','expression',3,'p_expression_parent','lex_SICXE.py',748),
  ('empty -> NEWLINE','empty',1,'p_empty','lex_SICXE.py',755),
  ('empty -> <empty>','empty',0,'p_empty','lex_SICXE.py',756),
]
