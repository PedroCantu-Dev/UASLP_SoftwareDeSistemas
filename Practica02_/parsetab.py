
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'sicxe_fileleftNEWLINEleftOR_GAND_GleftMORETLESSTMOREEQLESSEQleftPLUSMINUSleftMULTIPLYDIVIDEMODrightUMINUSEXTENDEDFACTORIALrightATSHARPEXTENDEDrightNUMleftNAMEleftCODOPleftREGADD ADDF ADDR AND AND_G ARROBA AT BASE BYTE CLEAR CODOP CODOP1 CODOP2 CODOP2_N CODOP2_R CODOP2_R_N CODOP3 COMA COMF COMMENT_IL COMMENT_ML COMP COMPR C_TEXT DIRECTIV DIV DIVF DIVIDE DIVR END EQUALS EXTENDED FACTORIAL FINL FIX FLOAT FLOAT_NUM HEX_INT HIO INT J JEQ JGT JLT JSUB LDA LDB LDCH LDF LDL LDS LDT LDX LESSEQ LESST LPARENT LPS MINUS MOD MODIF MOREEQ MORET MUL MULF MULR MULTIPLY NAME NEWLINE NORM NUM OPERANDO OR OR_G PLUS RD REG RESB RESW RMO RPARENT RSUB SHARP SHIFTL SHIFTR SIO SSK STA START STB STCH STF STI STL STS STSW STT STX SUB SUBF SUBR SVC TD TIO TIX TIXR UMINUS WD WORD X_HEXsicxe_file : programa\n    | empty_nl programa\n    | empty_nl programa empty_nl\n    | programa empty_nlprograma : inicio proposiciones fininicio : nombre_programa START int_type NEWLINEnombre_programa : etiquetafin : END entrada entrada : etiquetaproposiciones : linea\n    | proposiciones linealinea : f_column line_core il_comment NEWLINEf_column : etiqueta\n    | emptyline_core : instruccion\n    | directivainstruccion : f4\n    | f3\n    | f2\n    | f1f1 : CODOP1\n    f2 : CODOP2 REG COMA REG\n    | CODOP2_R_N REG COMA INT\n    | CODOP2_R REG\n    | CODOP2_R\n    f2 : CODOP2 error COMA REG\n    | CODOP2 REG COMA error\n    | CODOP2 error COMA error\n    | CODOP2 error \n    | CODOP2_R_N REG COMA error\n    | CODOP2_R_N error COMA INTf3 : CODOP3 simple3\n    | CODOP3 indexado3\n    | CODOP3 indirecto3\n    | CODOP3 inmediato3\n    | RSUB\n    f3_error_codop : error simple3\n    | error indexado3\n    | error indirecto3\n    | error inmediato3f3_error_operando : CODOP3 error\n    | RSUB errorsimple3 : expressionindexado3 : simple3 COMA REGindirecto3 : AT expressioninmediato3 : SHARP expressionf4 : PLUS f3 %prec EXTENDEDdirectiva : empty BYTE C_TEXT\n    | empty BYTE X_HEX\n    | empty WORD int_type\n    | empty RESB int_type\n    | BASE etiqueta\n    directiva :  BYTE empty C_TEXT\n    | BYTE empty X_HEX\n    | WORD empty int_type\n    | RESB empty int_type\n    | BASE empty etiqueta\n    int_type : INT\n    | HEX_INT\n    il_comment : COMMENT_IL\n    | emptyempty :\n    | empty empty_nl : empty\n    | NEWLINE\n    | empty_nl empty_single_nl : empty\n    | NEWLINEetiqueta : NAME expression : MINUS expression %prec UMINUS\n    expression : FACTORIAL expression\n    \n    expression : expression PLUS expression\n               | expression MINUS expression\n               | expression MULTIPLY expression\n               | expression DIVIDE expression\n               | expression MOD expression\n               | expression LESST expression\n               | expression MORET expression\n               | expression LESSEQ expression\n               | expression MOREEQ expression\n               | expression OR_G expression\n               | expression AND_G expression\n\n    \n    expression : NAME EQUALS expression\n    \n    var : NAME\n    \n    expression : INT\n               | HEX_INT\n               | var\n    \n    expression : LPARENT expression RPARENT\n    '
    
_lr_action_items = {'NEWLINE':([0,2,9,11,19,22,23,24,25,26,27,28,36,39,40,41,42,43,44,45,46,47,48,55,57,58,59,60,61,62,67,68,69,70,73,76,79,80,81,82,83,84,85,86,87,100,101,102,103,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,],[6,6,-69,6,-5,-62,-15,-16,-17,-18,-19,-20,-36,-25,-21,77,-58,-59,-8,-9,78,-60,-61,-52,-47,-32,-33,-34,-35,-43,-84,-85,-86,-87,-29,-24,-48,-49,-50,-51,-53,-54,-55,-56,-57,-45,-46,-70,-71,-44,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-88,-22,-27,-28,-26,-23,-30,-31,]),'NAME':([0,3,4,5,6,12,13,20,21,33,35,56,63,64,65,66,71,77,78,89,90,91,92,93,94,95,96,97,98,99,104,],[9,9,9,-63,-65,9,-10,-11,9,9,67,9,67,67,67,67,67,-6,-12,67,67,67,67,67,67,67,67,67,67,67,67,]),'$end':([1,2,5,6,9,10,11,18,19,44,45,],[0,-1,-63,-65,-69,-4,-2,-3,-5,-8,-9,]),'BASE':([4,9,12,13,14,15,16,20,77,78,],[-62,-69,-62,-10,33,-13,-14,-11,-6,-12,]),'BYTE':([4,9,12,13,14,15,16,20,29,77,78,],[-62,-69,-62,-10,30,-13,-14,-11,49,-6,-12,]),'WORD':([4,9,12,13,14,15,16,20,29,77,78,],[-62,-69,-62,-10,31,-13,-14,-11,50,-6,-12,]),'RESB':([4,9,12,13,14,15,16,20,29,77,78,],[-62,-69,-62,-10,32,-13,-14,-11,51,-6,-12,]),'PLUS':([4,9,12,13,14,15,16,20,62,67,68,69,70,77,78,100,101,102,103,105,111,112,113,114,115,116,117,118,119,120,121,122,123,],[-62,-69,-62,-10,34,-13,-14,-11,89,-84,-85,-86,-87,-6,-12,89,89,-70,-71,89,-72,-73,-74,-75,-76,89,89,89,89,89,89,89,-88,]),'CODOP3':([4,9,12,13,14,15,16,20,34,77,78,],[-62,-69,-62,-10,35,-13,-14,-11,35,-6,-12,]),'RSUB':([4,9,12,13,14,15,16,20,34,77,78,],[-62,-69,-62,-10,36,-13,-14,-11,36,-6,-12,]),'CODOP2':([4,9,12,13,14,15,16,20,77,78,],[-62,-69,-62,-10,37,-13,-14,-11,-6,-12,]),'CODOP2_R_N':([4,9,12,13,14,15,16,20,77,78,],[-62,-69,-62,-10,38,-13,-14,-11,-6,-12,]),'CODOP2_R':([4,9,12,13,14,15,16,20,77,78,],[-62,-69,-62,-10,39,-13,-14,-11,-6,-12,]),'CODOP1':([4,9,12,13,14,15,16,20,77,78,],[-62,-69,-62,-10,40,-13,-14,-11,-6,-12,]),'START':([7,8,9,],[17,-7,-69,]),'COMMENT_IL':([9,22,23,24,25,26,27,28,36,39,40,42,43,55,57,58,59,60,61,62,67,68,69,70,73,76,79,80,81,82,83,84,85,86,87,100,101,102,103,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,],[-69,47,-15,-16,-17,-18,-19,-20,-36,-25,-21,-58,-59,-52,-47,-32,-33,-34,-35,-43,-84,-85,-86,-87,-29,-24,-48,-49,-50,-51,-53,-54,-55,-56,-57,-45,-46,-70,-71,-44,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-88,-22,-27,-28,-26,-23,-30,-31,]),'END':([12,13,20,78,],[21,-10,-11,-12,]),'INT':([17,31,32,35,50,51,53,54,63,64,65,66,71,89,90,91,92,93,94,95,96,97,98,99,104,108,109,],[42,-62,-62,68,42,42,42,42,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,128,130,]),'HEX_INT':([17,31,32,35,50,51,53,54,63,64,65,66,71,89,90,91,92,93,94,95,96,97,98,99,104,],[43,-62,-62,69,43,43,43,43,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'C_TEXT':([30,49,52,],[-62,79,83,]),'X_HEX':([30,49,52,],[-62,80,84,]),'AT':([35,],[63,]),'SHARP':([35,],[64,]),'MINUS':([35,62,63,64,65,66,67,68,69,70,71,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,111,112,113,114,115,116,117,118,119,120,121,122,123,],[65,90,65,65,65,65,-84,-85,-86,-87,65,65,65,65,65,65,65,65,65,65,65,65,90,90,-70,-71,65,90,-72,-73,-74,-75,-76,90,90,90,90,90,90,90,-88,]),'FACTORIAL':([35,63,64,65,66,71,89,90,91,92,93,94,95,96,97,98,99,104,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'LPARENT':([35,63,64,65,66,71,89,90,91,92,93,94,95,96,97,98,99,104,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'REG':([37,38,39,88,106,107,],[72,74,76,110,124,127,]),'error':([37,38,106,107,108,],[73,75,125,126,129,]),'COMA':([58,62,67,68,69,70,72,73,74,75,102,103,111,112,113,114,115,116,117,118,119,120,121,122,123,],[88,-43,-84,-85,-86,-87,106,107,108,109,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-88,]),'MULTIPLY':([62,67,68,69,70,100,101,102,103,105,111,112,113,114,115,116,117,118,119,120,121,122,123,],[91,-84,-85,-86,-87,91,91,-70,-71,91,91,91,-74,-75,-76,91,91,91,91,91,91,91,-88,]),'DIVIDE':([62,67,68,69,70,100,101,102,103,105,111,112,113,114,115,116,117,118,119,120,121,122,123,],[92,-84,-85,-86,-87,92,92,-70,-71,92,92,92,-74,-75,-76,92,92,92,92,92,92,92,-88,]),'MOD':([62,67,68,69,70,100,101,102,103,105,111,112,113,114,115,116,117,118,119,120,121,122,123,],[93,-84,-85,-86,-87,93,93,-70,-71,93,93,93,-74,-75,-76,93,93,93,93,93,93,93,-88,]),'LESST':([62,67,68,69,70,100,101,102,103,105,111,112,113,114,115,116,117,118,119,120,121,122,123,],[94,-84,-85,-86,-87,94,94,-70,-71,94,-72,-73,-74,-75,-76,-77,-78,-79,-80,94,94,94,-88,]),'MORET':([62,67,68,69,70,100,101,102,103,105,111,112,113,114,115,116,117,118,119,120,121,122,123,],[95,-84,-85,-86,-87,95,95,-70,-71,95,-72,-73,-74,-75,-76,-77,-78,-79,-80,95,95,95,-88,]),'LESSEQ':([62,67,68,69,70,100,101,102,103,105,111,112,113,114,115,116,117,118,119,120,121,122,123,],[96,-84,-85,-86,-87,96,96,-70,-71,96,-72,-73,-74,-75,-76,-77,-78,-79,-80,96,96,96,-88,]),'MOREEQ':([62,67,68,69,70,100,101,102,103,105,111,112,113,114,115,116,117,118,119,120,121,122,123,],[97,-84,-85,-86,-87,97,97,-70,-71,97,-72,-73,-74,-75,-76,-77,-78,-79,-80,97,97,97,-88,]),'OR_G':([62,67,68,69,70,100,101,102,103,105,111,112,113,114,115,116,117,118,119,120,121,122,123,],[98,-84,-85,-86,-87,98,98,-70,-71,98,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,98,-88,]),'AND_G':([62,67,68,69,70,100,101,102,103,105,111,112,113,114,115,116,117,118,119,120,121,122,123,],[99,-84,-85,-86,-87,99,99,-70,-71,99,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,99,-88,]),'EQUALS':([67,],[104,]),'RPARENT':([67,68,69,70,102,103,105,111,112,113,114,115,116,117,118,119,120,121,122,123,],[-84,-85,-86,-87,-70,-71,123,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-88,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sicxe_file':([0,],[1,]),'programa':([0,3,],[2,11,]),'empty_nl':([0,2,11,],[3,10,18,]),'inicio':([0,3,],[4,4,]),'empty':([0,2,4,11,12,14,22,30,31,32,33,],[5,5,16,5,16,29,48,52,53,54,56,]),'nombre_programa':([0,3,],[7,7,]),'etiqueta':([0,3,4,12,21,33,56,],[8,8,15,15,45,55,87,]),'proposiciones':([4,],[12,]),'linea':([4,12,],[13,20,]),'f_column':([4,12,],[14,14,]),'fin':([12,],[19,]),'line_core':([14,],[22,]),'instruccion':([14,],[23,]),'directiva':([14,],[24,]),'f4':([14,],[25,]),'f3':([14,34,],[26,57,]),'f2':([14,],[27,]),'f1':([14,],[28,]),'int_type':([17,50,51,53,54,],[41,81,82,85,86,]),'entrada':([21,],[44,]),'il_comment':([22,],[46,]),'simple3':([35,],[58,]),'indexado3':([35,],[59,]),'indirecto3':([35,],[60,]),'inmediato3':([35,],[61,]),'expression':([35,63,64,65,66,71,89,90,91,92,93,94,95,96,97,98,99,104,],[62,100,101,102,103,105,111,112,113,114,115,116,117,118,119,120,121,122,]),'var':([35,63,64,65,66,71,89,90,91,92,93,94,95,96,97,98,99,104,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sicxe_file","S'",1,None,None,None),
  ('sicxe_file -> programa','sicxe_file',1,'p_sicxe_file','lex_SICXE_v2.py',329),
  ('sicxe_file -> empty_nl programa','sicxe_file',2,'p_sicxe_file','lex_SICXE_v2.py',330),
  ('sicxe_file -> empty_nl programa empty_nl','sicxe_file',3,'p_sicxe_file','lex_SICXE_v2.py',331),
  ('sicxe_file -> programa empty_nl','sicxe_file',2,'p_sicxe_file','lex_SICXE_v2.py',332),
  ('programa -> inicio proposiciones fin','programa',3,'p_programa','lex_SICXE_v2.py',336),
  ('inicio -> nombre_programa START int_type NEWLINE','inicio',4,'p_inicio','lex_SICXE_v2.py',341),
  ('nombre_programa -> etiqueta','nombre_programa',1,'p_nombre_programa','lex_SICXE_v2.py',346),
  ('fin -> END entrada','fin',2,'p_fin','lex_SICXE_v2.py',350),
  ('entrada -> etiqueta','entrada',1,'p_entrada','lex_SICXE_v2.py',355),
  ('proposiciones -> linea','proposiciones',1,'p_proposiciones','lex_SICXE_v2.py',359),
  ('proposiciones -> proposiciones linea','proposiciones',2,'p_proposiciones','lex_SICXE_v2.py',360),
  ('linea -> f_column line_core il_comment NEWLINE','linea',4,'p_linea','lex_SICXE_v2.py',364),
  ('f_column -> etiqueta','f_column',1,'p_first_column','lex_SICXE_v2.py',368),
  ('f_column -> empty','f_column',1,'p_first_column','lex_SICXE_v2.py',369),
  ('line_core -> instruccion','line_core',1,'p_line_core','lex_SICXE_v2.py',373),
  ('line_core -> directiva','line_core',1,'p_line_core','lex_SICXE_v2.py',374),
  ('instruccion -> f4','instruccion',1,'p_instruccion','lex_SICXE_v2.py',381),
  ('instruccion -> f3','instruccion',1,'p_instruccion','lex_SICXE_v2.py',382),
  ('instruccion -> f2','instruccion',1,'p_instruccion','lex_SICXE_v2.py',383),
  ('instruccion -> f1','instruccion',1,'p_instruccion','lex_SICXE_v2.py',384),
  ('f1 -> CODOP1','f1',1,'p_f1','lex_SICXE_v2.py',389),
  ('f2 -> CODOP2 REG COMA REG','f2',4,'p_f2','lex_SICXE_v2.py',398),
  ('f2 -> CODOP2_R_N REG COMA INT','f2',4,'p_f2','lex_SICXE_v2.py',399),
  ('f2 -> CODOP2_R REG','f2',2,'p_f2','lex_SICXE_v2.py',400),
  ('f2 -> CODOP2_R','f2',1,'p_f2','lex_SICXE_v2.py',401),
  ('f2 -> CODOP2 error COMA REG','f2',4,'p_f2_error_','lex_SICXE_v2.py',406),
  ('f2 -> CODOP2 REG COMA error','f2',4,'p_f2_error_','lex_SICXE_v2.py',407),
  ('f2 -> CODOP2 error COMA error','f2',4,'p_f2_error_','lex_SICXE_v2.py',408),
  ('f2 -> CODOP2 error','f2',2,'p_f2_error_','lex_SICXE_v2.py',409),
  ('f2 -> CODOP2_R_N REG COMA error','f2',4,'p_f2_error_','lex_SICXE_v2.py',410),
  ('f2 -> CODOP2_R_N error COMA INT','f2',4,'p_f2_error_','lex_SICXE_v2.py',411),
  ('f3 -> CODOP3 simple3','f3',2,'p_f3','lex_SICXE_v2.py',415),
  ('f3 -> CODOP3 indexado3','f3',2,'p_f3','lex_SICXE_v2.py',416),
  ('f3 -> CODOP3 indirecto3','f3',2,'p_f3','lex_SICXE_v2.py',417),
  ('f3 -> CODOP3 inmediato3','f3',2,'p_f3','lex_SICXE_v2.py',418),
  ('f3 -> RSUB','f3',1,'p_f3','lex_SICXE_v2.py',419),
  ('f3_error_codop -> error simple3','f3_error_codop',2,'p_f3_error_codop','lex_SICXE_v2.py',424),
  ('f3_error_codop -> error indexado3','f3_error_codop',2,'p_f3_error_codop','lex_SICXE_v2.py',425),
  ('f3_error_codop -> error indirecto3','f3_error_codop',2,'p_f3_error_codop','lex_SICXE_v2.py',426),
  ('f3_error_codop -> error inmediato3','f3_error_codop',2,'p_f3_error_codop','lex_SICXE_v2.py',427),
  ('f3_error_operando -> CODOP3 error','f3_error_operando',2,'p_f3_error_operando','lex_SICXE_v2.py',431),
  ('f3_error_operando -> RSUB error','f3_error_operando',2,'p_f3_error_operando','lex_SICXE_v2.py',432),
  ('simple3 -> expression','simple3',1,'p_simple3','lex_SICXE_v2.py',436),
  ('indexado3 -> simple3 COMA REG','indexado3',3,'p_simple3_indexado3','lex_SICXE_v2.py',440),
  ('indirecto3 -> AT expression','indirecto3',2,'p_indirecto3','lex_SICXE_v2.py',444),
  ('inmediato3 -> SHARP expression','inmediato3',2,'p_inmediato3','lex_SICXE_v2.py',448),
  ('f4 -> PLUS f3','f4',2,'p_f4','lex_SICXE_v2.py',452),
  ('directiva -> empty BYTE C_TEXT','directiva',3,'p_directiva','lex_SICXE_v2.py',457),
  ('directiva -> empty BYTE X_HEX','directiva',3,'p_directiva','lex_SICXE_v2.py',458),
  ('directiva -> empty WORD int_type','directiva',3,'p_directiva','lex_SICXE_v2.py',459),
  ('directiva -> empty RESB int_type','directiva',3,'p_directiva','lex_SICXE_v2.py',460),
  ('directiva -> BASE etiqueta','directiva',2,'p_directiva','lex_SICXE_v2.py',461),
  ('directiva -> BYTE empty C_TEXT','directiva',3,'p_directiva_empty','lex_SICXE_v2.py',466),
  ('directiva -> BYTE empty X_HEX','directiva',3,'p_directiva_empty','lex_SICXE_v2.py',467),
  ('directiva -> WORD empty int_type','directiva',3,'p_directiva_empty','lex_SICXE_v2.py',468),
  ('directiva -> RESB empty int_type','directiva',3,'p_directiva_empty','lex_SICXE_v2.py',469),
  ('directiva -> BASE empty etiqueta','directiva',3,'p_directiva_empty','lex_SICXE_v2.py',470),
  ('int_type -> INT','int_type',1,'p_int_type','lex_SICXE_v2.py',475),
  ('int_type -> HEX_INT','int_type',1,'p_int_type','lex_SICXE_v2.py',476),
  ('il_comment -> COMMENT_IL','il_comment',1,'p_il_comment','lex_SICXE_v2.py',481),
  ('il_comment -> empty','il_comment',1,'p_il_comment','lex_SICXE_v2.py',482),
  ('empty -> <empty>','empty',0,'p_empty','lex_SICXE_v2.py',486),
  ('empty -> empty','empty',1,'p_empty','lex_SICXE_v2.py',487),
  ('empty_nl -> empty','empty_nl',1,'p_empty_nl','lex_SICXE_v2.py',491),
  ('empty_nl -> NEWLINE','empty_nl',1,'p_empty_nl','lex_SICXE_v2.py',492),
  ('empty_nl -> empty_nl','empty_nl',1,'p_empty_nl','lex_SICXE_v2.py',493),
  ('empty_single_nl -> empty','empty_single_nl',1,'p_empty_single_nl','lex_SICXE_v2.py',497),
  ('empty_single_nl -> NEWLINE','empty_single_nl',1,'p_empty_single_nl','lex_SICXE_v2.py',498),
  ('etiqueta -> NAME','etiqueta',1,'p_etiqueta','lex_SICXE_v2.py',502),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','lex_SICXE_v2.py',512),
  ('expression -> FACTORIAL expression','expression',2,'p_expression_uni','lex_SICXE_v2.py',518),
  ('expression -> expression PLUS expression','expression',3,'p_expression_bin','lex_SICXE_v2.py',525),
  ('expression -> expression MINUS expression','expression',3,'p_expression_bin','lex_SICXE_v2.py',526),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_bin','lex_SICXE_v2.py',527),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_bin','lex_SICXE_v2.py',528),
  ('expression -> expression MOD expression','expression',3,'p_expression_bin','lex_SICXE_v2.py',529),
  ('expression -> expression LESST expression','expression',3,'p_expression_bin','lex_SICXE_v2.py',530),
  ('expression -> expression MORET expression','expression',3,'p_expression_bin','lex_SICXE_v2.py',531),
  ('expression -> expression LESSEQ expression','expression',3,'p_expression_bin','lex_SICXE_v2.py',532),
  ('expression -> expression MOREEQ expression','expression',3,'p_expression_bin','lex_SICXE_v2.py',533),
  ('expression -> expression OR_G expression','expression',3,'p_expression_bin','lex_SICXE_v2.py',534),
  ('expression -> expression AND_G expression','expression',3,'p_expression_bin','lex_SICXE_v2.py',535),
  ('expression -> NAME EQUALS expression','expression',3,'p_expression_assign','lex_SICXE_v2.py',543),
  ('var -> NAME','var',1,'p_var_expression','lex_SICXE_v2.py',550),
  ('expression -> INT','expression',1,'p_expression_int_float_name','lex_SICXE_v2.py',557),
  ('expression -> HEX_INT','expression',1,'p_expression_int_float_name','lex_SICXE_v2.py',558),
  ('expression -> var','expression',1,'p_expression_int_float_name','lex_SICXE_v2.py',559),
  ('expression -> LPARENT expression RPARENT','expression',3,'p_expression_parent','lex_SICXE_v2.py',566),
]
