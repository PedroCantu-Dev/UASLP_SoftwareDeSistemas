Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADD
    ADDF
    ADDR
    AND
    AND_G
    ARROBA
    BASE
    CLEAR
    COMF
    COMMENT_ML
    COMP
    COMPR
    C_TEXT
    DIRECTIV
    DIV
    DIVF
    DIVIDE
    DIVR
    EQUALS
    FACTORIAL
    FINL
    FIX
    FLOAT
    FLOAT_NUM
    HIO
    J
    JEQ
    JGT
    JLT
    JSUB
    LDA
    LDB
    LDCH
    LDF
    LDL
    LDS
    LDT
    LDX
    LESSEQ
    LESST
    LPARENT
    LPS
    MINUS
    MOD
    MODIF
    MOREEQ
    MORET
    MUL
    MULF
    MULR
    MULTIPLY
    NORM
    OPERANDO
    OR
    OR_G
    RD
    RMO
    RPARENT
    SHIFTL
    SHIFTR
    SIO
    SSK
    STA
    STB
    STCH
    STF
    STI
    STL
    STS
    STSW
    STT
    STX
    SUB
    SUBF
    SUBR
    SVC
    TD
    TIO
    TIX
    TIXR
    UMINUS
    WD
    X_HEX

Grammar

Rule 0     S' -> sicxe_file
Rule 1     sicxe_file -> empty
Rule 2     sicxe_file -> programa
Rule 3     sicxe_file -> empty programa
Rule 4     sicxe_file -> empty programa empty
Rule 5     programa -> inicio proposiciones fin
Rule 6     inicio -> nombre_programa START numero NEWLINE
Rule 7     inicio -> nombre_programa START error NEWLINE
Rule 8     inicio -> error START numero NEWLINE
Rule 9     numero -> INT
Rule 10    numero -> HEX_INT
Rule 11    fin -> END entrada
Rule 12    entrada -> NAME
Rule 13    proposiciones -> proposiciones proposicion
Rule 14    proposiciones -> proposicion
Rule 15    proposicion -> <empty>
Rule 16    proposicion -> directiva NEWLINE
Rule 17    proposicion -> instruccion NEWLINE
Rule 18    proposicion -> error NEWLINE
Rule 19    instruccion -> etiqueta opformato
Rule 20    instruccion -> opformato
Rule 21    directiva -> etiqueta tipodirectiva opdirectiva
Rule 22    directiva -> tipodirectiva opdirectiva
Rule 23    opdirectiva -> NUM
Rule 24    opdirectiva -> NAME
Rule 25    tipodirectiva -> BYTE
Rule 26    tipodirectiva -> WORD
Rule 27    tipodirectiva -> RESB
Rule 28    tipodirectiva -> RESW
Rule 29    etiqueta -> NAME
Rule 30    nombre_programa -> NAME
Rule 31    opformato -> f4
Rule 32    opformato -> f3
Rule 33    opformato -> f2
Rule 34    opformato -> f1
Rule 35    f3 -> simple3
Rule 36    f3 -> indirecto3
Rule 37    f3 -> inmediato3
Rule 38    f3 -> RSUB
Rule 39    f3 -> <empty>
Rule 40    f3 -> simple3 COMA X
Rule 41    f4 -> PLUS f3
Rule 42    simple3 -> CODOP NAME
Rule 43    simple3 -> CODOP NUM
Rule 44    indirecto3 -> CODOP AT NUM
Rule 45    indirecto3 -> CODOP AT NAME
Rule 46    inmediato3 -> CODOP SHARP NUM
Rule 47    inmediato3 -> CODOP SHARP NAME
Rule 48    f2 -> CODOP NUM
Rule 49    f2 -> CODOP REG
Rule 50    f2 -> CODOP REG COMA REG
Rule 51    f2 -> CODOP REG COMA NUM
Rule 52    f1 -> CODOP NEWLINE
Rule 53    empty -> NEWLINE
Rule 54    empty -> <empty>

Terminals, with rules where they appear

ADD                  : 
ADDF                 : 
ADDR                 : 
AND                  : 
AND_G                : 
ARROBA               : 
AT                   : 44 45
BASE                 : 
BYTE                 : 25
CLEAR                : 
CODOP                : 42 43 44 45 46 47 48 49 50 51 52
COMA                 : 40 50 51
COMF                 : 
COMMENT_ML           : 
COMP                 : 
COMPR                : 
C_TEXT               : 
DIRECTIV             : 
DIV                  : 
DIVF                 : 
DIVIDE               : 
DIVR                 : 
END                  : 11
EQUALS               : 
FACTORIAL            : 
FINL                 : 
FIX                  : 
FLOAT                : 
FLOAT_NUM            : 
HEX_INT              : 10
HIO                  : 
INT                  : 9
J                    : 
JEQ                  : 
JGT                  : 
JLT                  : 
JSUB                 : 
LDA                  : 
LDB                  : 
LDCH                 : 
LDF                  : 
LDL                  : 
LDS                  : 
LDT                  : 
LDX                  : 
LESSEQ               : 
LESST                : 
LPARENT              : 
LPS                  : 
MINUS                : 
MOD                  : 
MODIF                : 
MOREEQ               : 
MORET                : 
MUL                  : 
MULF                 : 
MULR                 : 
MULTIPLY             : 
NAME                 : 12 24 29 30 42 45 47
NEWLINE              : 6 7 8 16 17 18 52 53
NORM                 : 
NUM                  : 23 43 44 46 48 51
OPERANDO             : 
OR                   : 
OR_G                 : 
PLUS                 : 41
RD                   : 
REG                  : 49 50 50 51
RESB                 : 27
RESW                 : 28
RMO                  : 
RPARENT              : 
RSUB                 : 38
SHARP                : 46 47
SHIFTL               : 
SHIFTR               : 
SIO                  : 
SSK                  : 
STA                  : 
START                : 6 7 8
STB                  : 
STCH                 : 
STF                  : 
STI                  : 
STL                  : 
STS                  : 
STSW                 : 
STT                  : 
STX                  : 
SUB                  : 
SUBF                 : 
SUBR                 : 
SVC                  : 
TD                   : 
TIO                  : 
TIX                  : 
TIXR                 : 
UMINUS               : 
WD                   : 
WORD                 : 26
X                    : 40
X_HEX                : 
error                : 7 8 18

Nonterminals, with rules where they appear

directiva            : 16
empty                : 1 3 4 4
entrada              : 11
etiqueta             : 19 21
f1                   : 34
f2                   : 33
f3                   : 32 41
f4                   : 31
fin                  : 5
indirecto3           : 36
inicio               : 5
inmediato3           : 37
instruccion          : 17
nombre_programa      : 6 7
numero               : 6 8
opdirectiva          : 21 22
opformato            : 19 20
programa             : 2 3 4
proposicion          : 13 14
proposiciones        : 5 13
sicxe_file           : 0
simple3              : 35 40
tipodirectiva        : 21 22

Parsing method: LALR

state 0

    (0) S' -> . sicxe_file
    (1) sicxe_file -> . empty
    (2) sicxe_file -> . programa
    (3) sicxe_file -> . empty programa
    (4) sicxe_file -> . empty programa empty
    (53) empty -> . NEWLINE
    (54) empty -> .
    (5) programa -> . inicio proposiciones fin
    (6) inicio -> . nombre_programa START numero NEWLINE
    (7) inicio -> . nombre_programa START error NEWLINE
    (8) inicio -> . error START numero NEWLINE
    (30) nombre_programa -> . NAME

  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
    NEWLINE         shift and go to state 4
    $end            reduce using rule 54 (empty -> .)
    error           shift and go to state 7
    NAME            shift and go to state 8

  ! error           [ reduce using rule 54 (empty -> .) ]
  ! NAME            [ reduce using rule 54 (empty -> .) ]

    sicxe_file                     shift and go to state 1
    empty                          shift and go to state 2
    programa                       shift and go to state 3
    inicio                         shift and go to state 5
    nombre_programa                shift and go to state 6

state 1

    (0) S' -> sicxe_file .



state 2

    (1) sicxe_file -> empty .
    (3) sicxe_file -> empty . programa
    (4) sicxe_file -> empty . programa empty
    (5) programa -> . inicio proposiciones fin
    (6) inicio -> . nombre_programa START numero NEWLINE
    (7) inicio -> . nombre_programa START error NEWLINE
    (8) inicio -> . error START numero NEWLINE
    (30) nombre_programa -> . NAME

    $end            reduce using rule 1 (sicxe_file -> empty .)
    error           shift and go to state 7
    NAME            shift and go to state 8

    programa                       shift and go to state 9
    inicio                         shift and go to state 5
    nombre_programa                shift and go to state 6

state 3

    (2) sicxe_file -> programa .

    $end            reduce using rule 2 (sicxe_file -> programa .)


state 4

    (53) empty -> NEWLINE .

    error           reduce using rule 53 (empty -> NEWLINE .)
    NAME            reduce using rule 53 (empty -> NEWLINE .)
    $end            reduce using rule 53 (empty -> NEWLINE .)


state 5

    (5) programa -> inicio . proposiciones fin
    (13) proposiciones -> . proposiciones proposicion
    (14) proposiciones -> . proposicion
    (15) proposicion -> .
    (16) proposicion -> . directiva NEWLINE
    (17) proposicion -> . instruccion NEWLINE
    (18) proposicion -> . error NEWLINE
    (21) directiva -> . etiqueta tipodirectiva opdirectiva
    (22) directiva -> . tipodirectiva opdirectiva
    (19) instruccion -> . etiqueta opformato
    (20) instruccion -> . opformato
    (29) etiqueta -> . NAME
    (25) tipodirectiva -> . BYTE
    (26) tipodirectiva -> . WORD
    (27) tipodirectiva -> . RESB
    (28) tipodirectiva -> . RESW
    (31) opformato -> . f4
    (32) opformato -> . f3
    (33) opformato -> . f2
    (34) opformato -> . f1
    (41) f4 -> . PLUS f3
    (35) f3 -> . simple3
    (36) f3 -> . indirecto3
    (37) f3 -> . inmediato3
    (38) f3 -> . RSUB
    (39) f3 -> .
    (40) f3 -> . simple3 COMA X
    (48) f2 -> . CODOP NUM
    (49) f2 -> . CODOP REG
    (50) f2 -> . CODOP REG COMA REG
    (51) f2 -> . CODOP REG COMA NUM
    (52) f1 -> . CODOP NEWLINE
    (42) simple3 -> . CODOP NAME
    (43) simple3 -> . CODOP NUM
    (44) indirecto3 -> . CODOP AT NUM
    (45) indirecto3 -> . CODOP AT NAME
    (46) inmediato3 -> . CODOP SHARP NUM
    (47) inmediato3 -> . CODOP SHARP NAME

  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for WORD resolved as shift
  ! shift/reduce conflict for RESB resolved as shift
  ! shift/reduce conflict for RESW resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for RSUB resolved as shift
  ! reduce/reduce conflict for NEWLINE resolved using rule 15 (proposicion -> .)
  ! shift/reduce conflict for CODOP resolved as shift
    END             reduce using rule 15 (proposicion -> .)
    NEWLINE         reduce using rule 15 (proposicion -> .)
    error           shift and go to state 14
    NAME            shift and go to state 18
    BYTE            shift and go to state 19
    WORD            shift and go to state 20
    RESB            shift and go to state 21
    RESW            shift and go to state 22
    PLUS            shift and go to state 27
    RSUB            shift and go to state 31
    CODOP           shift and go to state 32

  ! error           [ reduce using rule 15 (proposicion -> .) ]
  ! NAME            [ reduce using rule 15 (proposicion -> .) ]
  ! BYTE            [ reduce using rule 15 (proposicion -> .) ]
  ! WORD            [ reduce using rule 15 (proposicion -> .) ]
  ! RESB            [ reduce using rule 15 (proposicion -> .) ]
  ! RESW            [ reduce using rule 15 (proposicion -> .) ]
  ! PLUS            [ reduce using rule 15 (proposicion -> .) ]
  ! RSUB            [ reduce using rule 15 (proposicion -> .) ]
  ! CODOP           [ reduce using rule 15 (proposicion -> .) ]
  ! NEWLINE         [ reduce using rule 39 (f3 -> .) ]

    proposiciones                  shift and go to state 10
    proposicion                    shift and go to state 11
    directiva                      shift and go to state 12
    instruccion                    shift and go to state 13
    etiqueta                       shift and go to state 15
    tipodirectiva                  shift and go to state 16
    opformato                      shift and go to state 17
    f4                             shift and go to state 23
    f3                             shift and go to state 24
    f2                             shift and go to state 25
    f1                             shift and go to state 26
    simple3                        shift and go to state 28
    indirecto3                     shift and go to state 29
    inmediato3                     shift and go to state 30

state 6

    (6) inicio -> nombre_programa . START numero NEWLINE
    (7) inicio -> nombre_programa . START error NEWLINE

    START           shift and go to state 33


state 7

    (8) inicio -> error . START numero NEWLINE

    START           shift and go to state 34


state 8

    (30) nombre_programa -> NAME .

    START           reduce using rule 30 (nombre_programa -> NAME .)


state 9

    (3) sicxe_file -> empty programa .
    (4) sicxe_file -> empty programa . empty
    (53) empty -> . NEWLINE
    (54) empty -> .

  ! reduce/reduce conflict for $end resolved using rule 3 (sicxe_file -> empty programa .)
    $end            reduce using rule 3 (sicxe_file -> empty programa .)
    NEWLINE         shift and go to state 4

  ! $end            [ reduce using rule 54 (empty -> .) ]

    empty                          shift and go to state 35

state 10

    (5) programa -> inicio proposiciones . fin
    (13) proposiciones -> proposiciones . proposicion
    (11) fin -> . END entrada
    (15) proposicion -> .
    (16) proposicion -> . directiva NEWLINE
    (17) proposicion -> . instruccion NEWLINE
    (18) proposicion -> . error NEWLINE
    (21) directiva -> . etiqueta tipodirectiva opdirectiva
    (22) directiva -> . tipodirectiva opdirectiva
    (19) instruccion -> . etiqueta opformato
    (20) instruccion -> . opformato
    (29) etiqueta -> . NAME
    (25) tipodirectiva -> . BYTE
    (26) tipodirectiva -> . WORD
    (27) tipodirectiva -> . RESB
    (28) tipodirectiva -> . RESW
    (31) opformato -> . f4
    (32) opformato -> . f3
    (33) opformato -> . f2
    (34) opformato -> . f1
    (41) f4 -> . PLUS f3
    (35) f3 -> . simple3
    (36) f3 -> . indirecto3
    (37) f3 -> . inmediato3
    (38) f3 -> . RSUB
    (39) f3 -> .
    (40) f3 -> . simple3 COMA X
    (48) f2 -> . CODOP NUM
    (49) f2 -> . CODOP REG
    (50) f2 -> . CODOP REG COMA REG
    (51) f2 -> . CODOP REG COMA NUM
    (52) f1 -> . CODOP NEWLINE
    (42) simple3 -> . CODOP NAME
    (43) simple3 -> . CODOP NUM
    (44) indirecto3 -> . CODOP AT NUM
    (45) indirecto3 -> . CODOP AT NAME
    (46) inmediato3 -> . CODOP SHARP NUM
    (47) inmediato3 -> . CODOP SHARP NAME

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for WORD resolved as shift
  ! shift/reduce conflict for RESB resolved as shift
  ! shift/reduce conflict for RESW resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for RSUB resolved as shift
  ! reduce/reduce conflict for NEWLINE resolved using rule 15 (proposicion -> .)
  ! shift/reduce conflict for CODOP resolved as shift
    END             shift and go to state 38
    NEWLINE         reduce using rule 15 (proposicion -> .)
    error           shift and go to state 14
    NAME            shift and go to state 18
    BYTE            shift and go to state 19
    WORD            shift and go to state 20
    RESB            shift and go to state 21
    RESW            shift and go to state 22
    PLUS            shift and go to state 27
    RSUB            shift and go to state 31
    CODOP           shift and go to state 32

  ! END             [ reduce using rule 15 (proposicion -> .) ]
  ! error           [ reduce using rule 15 (proposicion -> .) ]
  ! NAME            [ reduce using rule 15 (proposicion -> .) ]
  ! BYTE            [ reduce using rule 15 (proposicion -> .) ]
  ! WORD            [ reduce using rule 15 (proposicion -> .) ]
  ! RESB            [ reduce using rule 15 (proposicion -> .) ]
  ! RESW            [ reduce using rule 15 (proposicion -> .) ]
  ! PLUS            [ reduce using rule 15 (proposicion -> .) ]
  ! RSUB            [ reduce using rule 15 (proposicion -> .) ]
  ! CODOP           [ reduce using rule 15 (proposicion -> .) ]
  ! NEWLINE         [ reduce using rule 39 (f3 -> .) ]

    fin                            shift and go to state 36
    proposicion                    shift and go to state 37
    directiva                      shift and go to state 12
    instruccion                    shift and go to state 13
    etiqueta                       shift and go to state 15
    tipodirectiva                  shift and go to state 16
    opformato                      shift and go to state 17
    f4                             shift and go to state 23
    f3                             shift and go to state 24
    f2                             shift and go to state 25
    f1                             shift and go to state 26
    simple3                        shift and go to state 28
    indirecto3                     shift and go to state 29
    inmediato3                     shift and go to state 30

state 11

    (14) proposiciones -> proposicion .

    END             reduce using rule 14 (proposiciones -> proposicion .)
    error           reduce using rule 14 (proposiciones -> proposicion .)
    NAME            reduce using rule 14 (proposiciones -> proposicion .)
    BYTE            reduce using rule 14 (proposiciones -> proposicion .)
    WORD            reduce using rule 14 (proposiciones -> proposicion .)
    RESB            reduce using rule 14 (proposiciones -> proposicion .)
    RESW            reduce using rule 14 (proposiciones -> proposicion .)
    PLUS            reduce using rule 14 (proposiciones -> proposicion .)
    RSUB            reduce using rule 14 (proposiciones -> proposicion .)
    CODOP           reduce using rule 14 (proposiciones -> proposicion .)
    NEWLINE         reduce using rule 14 (proposiciones -> proposicion .)


state 12

    (16) proposicion -> directiva . NEWLINE

    NEWLINE         shift and go to state 39


state 13

    (17) proposicion -> instruccion . NEWLINE

    NEWLINE         shift and go to state 40


state 14

    (18) proposicion -> error . NEWLINE

    NEWLINE         shift and go to state 41


state 15

    (21) directiva -> etiqueta . tipodirectiva opdirectiva
    (19) instruccion -> etiqueta . opformato
    (25) tipodirectiva -> . BYTE
    (26) tipodirectiva -> . WORD
    (27) tipodirectiva -> . RESB
    (28) tipodirectiva -> . RESW
    (31) opformato -> . f4
    (32) opformato -> . f3
    (33) opformato -> . f2
    (34) opformato -> . f1
    (41) f4 -> . PLUS f3
    (35) f3 -> . simple3
    (36) f3 -> . indirecto3
    (37) f3 -> . inmediato3
    (38) f3 -> . RSUB
    (39) f3 -> .
    (40) f3 -> . simple3 COMA X
    (48) f2 -> . CODOP NUM
    (49) f2 -> . CODOP REG
    (50) f2 -> . CODOP REG COMA REG
    (51) f2 -> . CODOP REG COMA NUM
    (52) f1 -> . CODOP NEWLINE
    (42) simple3 -> . CODOP NAME
    (43) simple3 -> . CODOP NUM
    (44) indirecto3 -> . CODOP AT NUM
    (45) indirecto3 -> . CODOP AT NAME
    (46) inmediato3 -> . CODOP SHARP NUM
    (47) inmediato3 -> . CODOP SHARP NAME

    BYTE            shift and go to state 19
    WORD            shift and go to state 20
    RESB            shift and go to state 21
    RESW            shift and go to state 22
    PLUS            shift and go to state 27
    RSUB            shift and go to state 31
    NEWLINE         reduce using rule 39 (f3 -> .)
    CODOP           shift and go to state 32

    tipodirectiva                  shift and go to state 42
    opformato                      shift and go to state 43
    f4                             shift and go to state 23
    f3                             shift and go to state 24
    f2                             shift and go to state 25
    f1                             shift and go to state 26
    simple3                        shift and go to state 28
    indirecto3                     shift and go to state 29
    inmediato3                     shift and go to state 30

state 16

    (22) directiva -> tipodirectiva . opdirectiva
    (23) opdirectiva -> . NUM
    (24) opdirectiva -> . NAME

    NUM             shift and go to state 45
    NAME            shift and go to state 46

    opdirectiva                    shift and go to state 44

state 17

    (20) instruccion -> opformato .

    NEWLINE         reduce using rule 20 (instruccion -> opformato .)


state 18

    (29) etiqueta -> NAME .

    BYTE            reduce using rule 29 (etiqueta -> NAME .)
    WORD            reduce using rule 29 (etiqueta -> NAME .)
    RESB            reduce using rule 29 (etiqueta -> NAME .)
    RESW            reduce using rule 29 (etiqueta -> NAME .)
    PLUS            reduce using rule 29 (etiqueta -> NAME .)
    RSUB            reduce using rule 29 (etiqueta -> NAME .)
    CODOP           reduce using rule 29 (etiqueta -> NAME .)
    NEWLINE         reduce using rule 29 (etiqueta -> NAME .)


state 19

    (25) tipodirectiva -> BYTE .

    NUM             reduce using rule 25 (tipodirectiva -> BYTE .)
    NAME            reduce using rule 25 (tipodirectiva -> BYTE .)


state 20

    (26) tipodirectiva -> WORD .

    NUM             reduce using rule 26 (tipodirectiva -> WORD .)
    NAME            reduce using rule 26 (tipodirectiva -> WORD .)


state 21

    (27) tipodirectiva -> RESB .

    NUM             reduce using rule 27 (tipodirectiva -> RESB .)
    NAME            reduce using rule 27 (tipodirectiva -> RESB .)


state 22

    (28) tipodirectiva -> RESW .

    NUM             reduce using rule 28 (tipodirectiva -> RESW .)
    NAME            reduce using rule 28 (tipodirectiva -> RESW .)


state 23

    (31) opformato -> f4 .

    NEWLINE         reduce using rule 31 (opformato -> f4 .)


state 24

    (32) opformato -> f3 .

    NEWLINE         reduce using rule 32 (opformato -> f3 .)


state 25

    (33) opformato -> f2 .

    NEWLINE         reduce using rule 33 (opformato -> f2 .)


state 26

    (34) opformato -> f1 .

    NEWLINE         reduce using rule 34 (opformato -> f1 .)


state 27

    (41) f4 -> PLUS . f3
    (35) f3 -> . simple3
    (36) f3 -> . indirecto3
    (37) f3 -> . inmediato3
    (38) f3 -> . RSUB
    (39) f3 -> .
    (40) f3 -> . simple3 COMA X
    (42) simple3 -> . CODOP NAME
    (43) simple3 -> . CODOP NUM
    (44) indirecto3 -> . CODOP AT NUM
    (45) indirecto3 -> . CODOP AT NAME
    (46) inmediato3 -> . CODOP SHARP NUM
    (47) inmediato3 -> . CODOP SHARP NAME

    RSUB            shift and go to state 31
    NEWLINE         reduce using rule 39 (f3 -> .)
    CODOP           shift and go to state 48

    f3                             shift and go to state 47
    simple3                        shift and go to state 28
    indirecto3                     shift and go to state 29
    inmediato3                     shift and go to state 30

state 28

    (35) f3 -> simple3 .
    (40) f3 -> simple3 . COMA X

    NEWLINE         reduce using rule 35 (f3 -> simple3 .)
    COMA            shift and go to state 49


state 29

    (36) f3 -> indirecto3 .

    NEWLINE         reduce using rule 36 (f3 -> indirecto3 .)


state 30

    (37) f3 -> inmediato3 .

    NEWLINE         reduce using rule 37 (f3 -> inmediato3 .)


state 31

    (38) f3 -> RSUB .

    NEWLINE         reduce using rule 38 (f3 -> RSUB .)


state 32

    (48) f2 -> CODOP . NUM
    (49) f2 -> CODOP . REG
    (50) f2 -> CODOP . REG COMA REG
    (51) f2 -> CODOP . REG COMA NUM
    (52) f1 -> CODOP . NEWLINE
    (42) simple3 -> CODOP . NAME
    (43) simple3 -> CODOP . NUM
    (44) indirecto3 -> CODOP . AT NUM
    (45) indirecto3 -> CODOP . AT NAME
    (46) inmediato3 -> CODOP . SHARP NUM
    (47) inmediato3 -> CODOP . SHARP NAME

    NUM             shift and go to state 50
    REG             shift and go to state 51
    NEWLINE         shift and go to state 52
    NAME            shift and go to state 53
    AT              shift and go to state 54
    SHARP           shift and go to state 55


state 33

    (6) inicio -> nombre_programa START . numero NEWLINE
    (7) inicio -> nombre_programa START . error NEWLINE
    (9) numero -> . INT
    (10) numero -> . HEX_INT

    error           shift and go to state 57
    INT             shift and go to state 58
    HEX_INT         shift and go to state 59

    numero                         shift and go to state 56

state 34

    (8) inicio -> error START . numero NEWLINE
    (9) numero -> . INT
    (10) numero -> . HEX_INT

    INT             shift and go to state 58
    HEX_INT         shift and go to state 59

    numero                         shift and go to state 60

state 35

    (4) sicxe_file -> empty programa empty .

    $end            reduce using rule 4 (sicxe_file -> empty programa empty .)


state 36

    (5) programa -> inicio proposiciones fin .

    $end            reduce using rule 5 (programa -> inicio proposiciones fin .)
    NEWLINE         reduce using rule 5 (programa -> inicio proposiciones fin .)


state 37

    (13) proposiciones -> proposiciones proposicion .

    END             reduce using rule 13 (proposiciones -> proposiciones proposicion .)
    error           reduce using rule 13 (proposiciones -> proposiciones proposicion .)
    NAME            reduce using rule 13 (proposiciones -> proposiciones proposicion .)
    BYTE            reduce using rule 13 (proposiciones -> proposiciones proposicion .)
    WORD            reduce using rule 13 (proposiciones -> proposiciones proposicion .)
    RESB            reduce using rule 13 (proposiciones -> proposiciones proposicion .)
    RESW            reduce using rule 13 (proposiciones -> proposiciones proposicion .)
    PLUS            reduce using rule 13 (proposiciones -> proposiciones proposicion .)
    RSUB            reduce using rule 13 (proposiciones -> proposiciones proposicion .)
    CODOP           reduce using rule 13 (proposiciones -> proposiciones proposicion .)
    NEWLINE         reduce using rule 13 (proposiciones -> proposiciones proposicion .)


state 38

    (11) fin -> END . entrada
    (12) entrada -> . NAME

    NAME            shift and go to state 62

    entrada                        shift and go to state 61

state 39

    (16) proposicion -> directiva NEWLINE .

    END             reduce using rule 16 (proposicion -> directiva NEWLINE .)
    error           reduce using rule 16 (proposicion -> directiva NEWLINE .)
    NAME            reduce using rule 16 (proposicion -> directiva NEWLINE .)
    BYTE            reduce using rule 16 (proposicion -> directiva NEWLINE .)
    WORD            reduce using rule 16 (proposicion -> directiva NEWLINE .)
    RESB            reduce using rule 16 (proposicion -> directiva NEWLINE .)
    RESW            reduce using rule 16 (proposicion -> directiva NEWLINE .)
    PLUS            reduce using rule 16 (proposicion -> directiva NEWLINE .)
    RSUB            reduce using rule 16 (proposicion -> directiva NEWLINE .)
    CODOP           reduce using rule 16 (proposicion -> directiva NEWLINE .)
    NEWLINE         reduce using rule 16 (proposicion -> directiva NEWLINE .)


state 40

    (17) proposicion -> instruccion NEWLINE .

    END             reduce using rule 17 (proposicion -> instruccion NEWLINE .)
    error           reduce using rule 17 (proposicion -> instruccion NEWLINE .)
    NAME            reduce using rule 17 (proposicion -> instruccion NEWLINE .)
    BYTE            reduce using rule 17 (proposicion -> instruccion NEWLINE .)
    WORD            reduce using rule 17 (proposicion -> instruccion NEWLINE .)
    RESB            reduce using rule 17 (proposicion -> instruccion NEWLINE .)
    RESW            reduce using rule 17 (proposicion -> instruccion NEWLINE .)
    PLUS            reduce using rule 17 (proposicion -> instruccion NEWLINE .)
    RSUB            reduce using rule 17 (proposicion -> instruccion NEWLINE .)
    CODOP           reduce using rule 17 (proposicion -> instruccion NEWLINE .)
    NEWLINE         reduce using rule 17 (proposicion -> instruccion NEWLINE .)


state 41

    (18) proposicion -> error NEWLINE .

    END             reduce using rule 18 (proposicion -> error NEWLINE .)
    error           reduce using rule 18 (proposicion -> error NEWLINE .)
    NAME            reduce using rule 18 (proposicion -> error NEWLINE .)
    BYTE            reduce using rule 18 (proposicion -> error NEWLINE .)
    WORD            reduce using rule 18 (proposicion -> error NEWLINE .)
    RESB            reduce using rule 18 (proposicion -> error NEWLINE .)
    RESW            reduce using rule 18 (proposicion -> error NEWLINE .)
    PLUS            reduce using rule 18 (proposicion -> error NEWLINE .)
    RSUB            reduce using rule 18 (proposicion -> error NEWLINE .)
    CODOP           reduce using rule 18 (proposicion -> error NEWLINE .)
    NEWLINE         reduce using rule 18 (proposicion -> error NEWLINE .)


state 42

    (21) directiva -> etiqueta tipodirectiva . opdirectiva
    (23) opdirectiva -> . NUM
    (24) opdirectiva -> . NAME

    NUM             shift and go to state 45
    NAME            shift and go to state 46

    opdirectiva                    shift and go to state 63

state 43

    (19) instruccion -> etiqueta opformato .

    NEWLINE         reduce using rule 19 (instruccion -> etiqueta opformato .)


state 44

    (22) directiva -> tipodirectiva opdirectiva .

    NEWLINE         reduce using rule 22 (directiva -> tipodirectiva opdirectiva .)


state 45

    (23) opdirectiva -> NUM .

    NEWLINE         reduce using rule 23 (opdirectiva -> NUM .)


state 46

    (24) opdirectiva -> NAME .

    NEWLINE         reduce using rule 24 (opdirectiva -> NAME .)


state 47

    (41) f4 -> PLUS f3 .

    NEWLINE         reduce using rule 41 (f4 -> PLUS f3 .)


state 48

    (42) simple3 -> CODOP . NAME
    (43) simple3 -> CODOP . NUM
    (44) indirecto3 -> CODOP . AT NUM
    (45) indirecto3 -> CODOP . AT NAME
    (46) inmediato3 -> CODOP . SHARP NUM
    (47) inmediato3 -> CODOP . SHARP NAME

    NAME            shift and go to state 53
    NUM             shift and go to state 64
    AT              shift and go to state 54
    SHARP           shift and go to state 55


state 49

    (40) f3 -> simple3 COMA . X

    X               shift and go to state 65


state 50

    (48) f2 -> CODOP NUM .
    (43) simple3 -> CODOP NUM .

  ! reduce/reduce conflict for NEWLINE resolved using rule 43 (simple3 -> CODOP NUM .)
    COMA            reduce using rule 43 (simple3 -> CODOP NUM .)
    NEWLINE         reduce using rule 43 (simple3 -> CODOP NUM .)

  ! NEWLINE         [ reduce using rule 48 (f2 -> CODOP NUM .) ]


state 51

    (49) f2 -> CODOP REG .
    (50) f2 -> CODOP REG . COMA REG
    (51) f2 -> CODOP REG . COMA NUM

    NEWLINE         reduce using rule 49 (f2 -> CODOP REG .)
    COMA            shift and go to state 66


state 52

    (52) f1 -> CODOP NEWLINE .

    NEWLINE         reduce using rule 52 (f1 -> CODOP NEWLINE .)


state 53

    (42) simple3 -> CODOP NAME .

    COMA            reduce using rule 42 (simple3 -> CODOP NAME .)
    NEWLINE         reduce using rule 42 (simple3 -> CODOP NAME .)


state 54

    (44) indirecto3 -> CODOP AT . NUM
    (45) indirecto3 -> CODOP AT . NAME

    NUM             shift and go to state 67
    NAME            shift and go to state 68


state 55

    (46) inmediato3 -> CODOP SHARP . NUM
    (47) inmediato3 -> CODOP SHARP . NAME

    NUM             shift and go to state 69
    NAME            shift and go to state 70


state 56

    (6) inicio -> nombre_programa START numero . NEWLINE

    NEWLINE         shift and go to state 71


state 57

    (7) inicio -> nombre_programa START error . NEWLINE

    NEWLINE         shift and go to state 72


state 58

    (9) numero -> INT .

    NEWLINE         reduce using rule 9 (numero -> INT .)


state 59

    (10) numero -> HEX_INT .

    NEWLINE         reduce using rule 10 (numero -> HEX_INT .)


state 60

    (8) inicio -> error START numero . NEWLINE

    NEWLINE         shift and go to state 73


state 61

    (11) fin -> END entrada .

    $end            reduce using rule 11 (fin -> END entrada .)
    NEWLINE         reduce using rule 11 (fin -> END entrada .)


state 62

    (12) entrada -> NAME .

    $end            reduce using rule 12 (entrada -> NAME .)
    NEWLINE         reduce using rule 12 (entrada -> NAME .)


state 63

    (21) directiva -> etiqueta tipodirectiva opdirectiva .

    NEWLINE         reduce using rule 21 (directiva -> etiqueta tipodirectiva opdirectiva .)


state 64

    (43) simple3 -> CODOP NUM .

    COMA            reduce using rule 43 (simple3 -> CODOP NUM .)
    NEWLINE         reduce using rule 43 (simple3 -> CODOP NUM .)


state 65

    (40) f3 -> simple3 COMA X .

    NEWLINE         reduce using rule 40 (f3 -> simple3 COMA X .)


state 66

    (50) f2 -> CODOP REG COMA . REG
    (51) f2 -> CODOP REG COMA . NUM

    REG             shift and go to state 74
    NUM             shift and go to state 75


state 67

    (44) indirecto3 -> CODOP AT NUM .

    NEWLINE         reduce using rule 44 (indirecto3 -> CODOP AT NUM .)


state 68

    (45) indirecto3 -> CODOP AT NAME .

    NEWLINE         reduce using rule 45 (indirecto3 -> CODOP AT NAME .)


state 69

    (46) inmediato3 -> CODOP SHARP NUM .

    NEWLINE         reduce using rule 46 (inmediato3 -> CODOP SHARP NUM .)


state 70

    (47) inmediato3 -> CODOP SHARP NAME .

    NEWLINE         reduce using rule 47 (inmediato3 -> CODOP SHARP NAME .)


state 71

    (6) inicio -> nombre_programa START numero NEWLINE .

    error           reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    NAME            reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    BYTE            reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    WORD            reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    RESB            reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    RESW            reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    PLUS            reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    RSUB            reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    CODOP           reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    END             reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    NEWLINE         reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)


state 72

    (7) inicio -> nombre_programa START error NEWLINE .

    error           reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    NAME            reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    BYTE            reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    WORD            reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    RESB            reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    RESW            reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    PLUS            reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    RSUB            reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    CODOP           reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    END             reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    NEWLINE         reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)


state 73

    (8) inicio -> error START numero NEWLINE .

    error           reduce using rule 8 (inicio -> error START numero NEWLINE .)
    NAME            reduce using rule 8 (inicio -> error START numero NEWLINE .)
    BYTE            reduce using rule 8 (inicio -> error START numero NEWLINE .)
    WORD            reduce using rule 8 (inicio -> error START numero NEWLINE .)
    RESB            reduce using rule 8 (inicio -> error START numero NEWLINE .)
    RESW            reduce using rule 8 (inicio -> error START numero NEWLINE .)
    PLUS            reduce using rule 8 (inicio -> error START numero NEWLINE .)
    RSUB            reduce using rule 8 (inicio -> error START numero NEWLINE .)
    CODOP           reduce using rule 8 (inicio -> error START numero NEWLINE .)
    END             reduce using rule 8 (inicio -> error START numero NEWLINE .)
    NEWLINE         reduce using rule 8 (inicio -> error START numero NEWLINE .)


state 74

    (50) f2 -> CODOP REG COMA REG .

    NEWLINE         reduce using rule 50 (f2 -> CODOP REG COMA REG .)


state 75

    (51) f2 -> CODOP REG COMA NUM .

    NEWLINE         reduce using rule 51 (f2 -> CODOP REG COMA NUM .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for error in state 0 resolved as shift
WARNING: shift/reduce conflict for NAME in state 0 resolved as shift
WARNING: shift/reduce conflict for error in state 5 resolved as shift
WARNING: shift/reduce conflict for NAME in state 5 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 5 resolved as shift
WARNING: shift/reduce conflict for WORD in state 5 resolved as shift
WARNING: shift/reduce conflict for RESB in state 5 resolved as shift
WARNING: shift/reduce conflict for RESW in state 5 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 5 resolved as shift
WARNING: shift/reduce conflict for RSUB in state 5 resolved as shift
WARNING: shift/reduce conflict for CODOP in state 5 resolved as shift
WARNING: shift/reduce conflict for END in state 10 resolved as shift
WARNING: shift/reduce conflict for error in state 10 resolved as shift
WARNING: shift/reduce conflict for NAME in state 10 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 10 resolved as shift
WARNING: shift/reduce conflict for WORD in state 10 resolved as shift
WARNING: shift/reduce conflict for RESB in state 10 resolved as shift
WARNING: shift/reduce conflict for RESW in state 10 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 10 resolved as shift
WARNING: shift/reduce conflict for RSUB in state 10 resolved as shift
WARNING: shift/reduce conflict for CODOP in state 10 resolved as shift
WARNING: reduce/reduce conflict in state 5 resolved using rule (proposicion -> <empty>)
WARNING: rejected rule (f3 -> <empty>) in state 5
WARNING: reduce/reduce conflict in state 9 resolved using rule (sicxe_file -> empty programa)
WARNING: rejected rule (empty -> <empty>) in state 9
WARNING: reduce/reduce conflict in state 10 resolved using rule (proposicion -> <empty>)
WARNING: rejected rule (f3 -> <empty>) in state 10
WARNING: reduce/reduce conflict in state 50 resolved using rule (simple3 -> CODOP NUM)
WARNING: rejected rule (f2 -> CODOP NUM) in state 50
WARNING: Rule (f2 -> CODOP NUM) is never reduced
