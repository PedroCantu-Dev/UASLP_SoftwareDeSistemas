Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADD
    ADDF
    ADDR
    AND
    ARROBA
    CLEAR
    COMF
    COMMENT_ML
    COMP
    COMPR
    C_TEXT
    DIRECTIV
    DIV
    DIVF
    DIVR
    EXTENDED
    FINL
    FIX
    FLOAT_NUM
    HIO
    J
    JEQ
    JGT
    JLT
    JSUB
    LDA
    LDB
    LDCH
    LDF
    LDL
    LDS
    LDT
    LDX
    LPS
    MODIF
    MUL
    MULF
    MULR
    NORM
    OPERANDO
    OR
    RD
    RMO
    SHIFTL
    SHIFTR
    SIO
    SSK
    STA
    STB
    STCH
    STF
    STI
    STL
    STS
    STSW
    STT
    STX
    SUB
    SUBF
    SUBR
    SVC
    TD
    TIO
    TIX
    TIXR
    UMINUS
    WD
    X_HEX

Grammar

Rule 0     S' -> sicxe_file
Rule 1     sicxe_file -> programa
Rule 2     sicxe_file -> empty programa
Rule 3     sicxe_file -> empty programa empty
Rule 4     sicxe_file -> programa empty
Rule 5     programa -> inicio proposiciones fin
Rule 6     inicio -> nombre_programa START numero NEWLINE
Rule 7     inicio -> nombre_programa START error NEWLINE
Rule 8     inicio -> error START numero NEWLINE
Rule 9     inicio -> error START error NEWLINE
Rule 10    numero -> INT
Rule 11    numero -> HEX_INT
Rule 12    fin -> END entrada
Rule 13    entrada -> NAME
Rule 14    proposiciones -> proposiciones proposicion
Rule 15    proposiciones -> proposicion
Rule 16    proposicion -> <empty>
Rule 17    proposicion -> directiva NEWLINE
Rule 18    proposicion -> instruccion NEWLINE
Rule 19    proposicion -> error NEWLINE
Rule 20    instruccion -> etiqueta opformato
Rule 21    instruccion -> opformato
Rule 22    instruccion -> error opformato
Rule 23    instruccion -> etiqueta error
Rule 24    directiva -> etiqueta tipodirectiva opdirectiva
Rule 25    directiva -> tipodirectiva opdirectiva
Rule 26    opdirectiva -> NUM
Rule 27    opdirectiva -> NAME
Rule 28    opdirectiva -> expression
Rule 29    tipodirectiva -> BYTE
Rule 30    tipodirectiva -> WORD
Rule 31    tipodirectiva -> RESB
Rule 32    tipodirectiva -> RESW
Rule 33    tipodirectiva -> BASE
Rule 34    etiqueta -> NAME
Rule 35    nombre_programa -> NAME
Rule 36    opformato -> f4
Rule 37    opformato -> f3
Rule 38    opformato -> f2
Rule 39    opformato -> f1
Rule 40    f4 -> PLUS f3
Rule 41    f3 -> simple3
Rule 42    f3 -> indirecto3
Rule 43    f3 -> inmediato3
Rule 44    f3 -> RSUB
Rule 45    f3 -> simple3 COMA X
Rule 46    simple3 -> CODOP NAME
Rule 47    simple3 -> CODOP NUM
Rule 48    simple3 -> CODOP expression
Rule 49    indirecto3 -> CODOP AT NUM
Rule 50    indirecto3 -> CODOP AT expression
Rule 51    inmediato3 -> CODOP SHARP NUM
Rule 52    inmediato3 -> CODOP SHARP expression
Rule 53    f2 -> CODOP NUM
Rule 54    f2 -> CODOP REG
Rule 55    f2 -> CODOP REG COMA REG
Rule 56    f2 -> CODOP REG COMA NUM
Rule 57    f1 -> CODOP
Rule 58    expression -> MINUS expression
Rule 59    expression -> FACTORIAL expression
Rule 60    expression -> expression PLUS expression
Rule 61    expression -> expression MINUS expression
Rule 62    expression -> expression MULTIPLY expression
Rule 63    expression -> expression DIVIDE expression
Rule 64    expression -> expression MOD expression
Rule 65    expression -> expression LESST expression
Rule 66    expression -> expression MORET expression
Rule 67    expression -> expression LESSEQ expression
Rule 68    expression -> expression MOREEQ expression
Rule 69    expression -> expression OR_G expression
Rule 70    expression -> expression AND_G expression
Rule 71    expression -> NAME EQUALS expression
Rule 72    var -> NAME
Rule 73    expression -> INT
Rule 74    expression -> FLOAT
Rule 75    expression -> var
Rule 76    expression -> LPARENT expression RPARENT
Rule 77    empty -> NEWLINE
Rule 78    empty -> <empty>

Terminals, with rules where they appear

ADD                  : 
ADDF                 : 
ADDR                 : 
AND                  : 
AND_G                : 70
ARROBA               : 
AT                   : 49 50
BASE                 : 33
BYTE                 : 29
CLEAR                : 
CODOP                : 46 47 48 49 50 51 52 53 54 55 56 57
COMA                 : 45 55 56
COMF                 : 
COMMENT_ML           : 
COMP                 : 
COMPR                : 
C_TEXT               : 
DIRECTIV             : 
DIV                  : 
DIVF                 : 
DIVIDE               : 63
DIVR                 : 
END                  : 12
EQUALS               : 71
EXTENDED             : 
FACTORIAL            : 59
FINL                 : 
FIX                  : 
FLOAT                : 74
FLOAT_NUM            : 
HEX_INT              : 11
HIO                  : 
INT                  : 10 73
J                    : 
JEQ                  : 
JGT                  : 
JLT                  : 
JSUB                 : 
LDA                  : 
LDB                  : 
LDCH                 : 
LDF                  : 
LDL                  : 
LDS                  : 
LDT                  : 
LDX                  : 
LESSEQ               : 67
LESST                : 65
LPARENT              : 76
LPS                  : 
MINUS                : 58 61
MOD                  : 64
MODIF                : 
MOREEQ               : 68
MORET                : 66
MUL                  : 
MULF                 : 
MULR                 : 
MULTIPLY             : 62
NAME                 : 13 27 34 35 46 71 72
NEWLINE              : 6 7 8 9 17 18 19 77
NORM                 : 
NUM                  : 26 47 49 51 53 56
OPERANDO             : 
OR                   : 
OR_G                 : 69
PLUS                 : 40 60
RD                   : 
REG                  : 54 55 55 56
RESB                 : 31
RESW                 : 32
RMO                  : 
RPARENT              : 76
RSUB                 : 44
SHARP                : 51 52
SHIFTL               : 
SHIFTR               : 
SIO                  : 
SSK                  : 
STA                  : 
START                : 6 7 8 9
STB                  : 
STCH                 : 
STF                  : 
STI                  : 
STL                  : 
STS                  : 
STSW                 : 
STT                  : 
STX                  : 
SUB                  : 
SUBF                 : 
SUBR                 : 
SVC                  : 
TD                   : 
TIO                  : 
TIX                  : 
TIXR                 : 
UMINUS               : 
WD                   : 
WORD                 : 30
X                    : 45
X_HEX                : 
error                : 7 8 9 9 19 22 23

Nonterminals, with rules where they appear

directiva            : 17
empty                : 2 3 3 4
entrada              : 12
etiqueta             : 20 23 24
expression           : 28 48 50 52 58 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69 69 70 70 71 76
f1                   : 39
f2                   : 38
f3                   : 37 40
f4                   : 36
fin                  : 5
indirecto3           : 42
inicio               : 5
inmediato3           : 43
instruccion          : 18
nombre_programa      : 6 7
numero               : 6 8
opdirectiva          : 24 25
opformato            : 20 21 22
programa             : 1 2 3 4
proposicion          : 14 15
proposiciones        : 5 14
sicxe_file           : 0
simple3              : 41 45
tipodirectiva        : 24 25
var                  : 75

Parsing method: LALR

state 0

    (0) S' -> . sicxe_file
    (1) sicxe_file -> . programa
    (2) sicxe_file -> . empty programa
    (3) sicxe_file -> . empty programa empty
    (4) sicxe_file -> . programa empty
    (5) programa -> . inicio proposiciones fin
    (77) empty -> . NEWLINE
    (78) empty -> .
    (6) inicio -> . nombre_programa START numero NEWLINE
    (7) inicio -> . nombre_programa START error NEWLINE
    (8) inicio -> . error START numero NEWLINE
    (9) inicio -> . error START error NEWLINE
    (35) nombre_programa -> . NAME

  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
    NEWLINE         shift and go to state 5
    error           shift and go to state 7
    NAME            shift and go to state 8

  ! error           [ reduce using rule 78 (empty -> .) ]
  ! NAME            [ reduce using rule 78 (empty -> .) ]

    sicxe_file                     shift and go to state 1
    programa                       shift and go to state 2
    empty                          shift and go to state 3
    inicio                         shift and go to state 4
    nombre_programa                shift and go to state 6

state 1

    (0) S' -> sicxe_file .



state 2

    (1) sicxe_file -> programa .
    (4) sicxe_file -> programa . empty
    (77) empty -> . NEWLINE
    (78) empty -> .

  ! reduce/reduce conflict for $end resolved using rule 1 (sicxe_file -> programa .)
    $end            reduce using rule 1 (sicxe_file -> programa .)
    NEWLINE         shift and go to state 5

  ! $end            [ reduce using rule 78 (empty -> .) ]

    empty                          shift and go to state 9

state 3

    (2) sicxe_file -> empty . programa
    (3) sicxe_file -> empty . programa empty
    (5) programa -> . inicio proposiciones fin
    (6) inicio -> . nombre_programa START numero NEWLINE
    (7) inicio -> . nombre_programa START error NEWLINE
    (8) inicio -> . error START numero NEWLINE
    (9) inicio -> . error START error NEWLINE
    (35) nombre_programa -> . NAME

    error           shift and go to state 7
    NAME            shift and go to state 8

    programa                       shift and go to state 10
    inicio                         shift and go to state 4
    nombre_programa                shift and go to state 6

state 4

    (5) programa -> inicio . proposiciones fin
    (14) proposiciones -> . proposiciones proposicion
    (15) proposiciones -> . proposicion
    (16) proposicion -> .
    (17) proposicion -> . directiva NEWLINE
    (18) proposicion -> . instruccion NEWLINE
    (19) proposicion -> . error NEWLINE
    (24) directiva -> . etiqueta tipodirectiva opdirectiva
    (25) directiva -> . tipodirectiva opdirectiva
    (20) instruccion -> . etiqueta opformato
    (21) instruccion -> . opformato
    (22) instruccion -> . error opformato
    (23) instruccion -> . etiqueta error
    (34) etiqueta -> . NAME
    (29) tipodirectiva -> . BYTE
    (30) tipodirectiva -> . WORD
    (31) tipodirectiva -> . RESB
    (32) tipodirectiva -> . RESW
    (33) tipodirectiva -> . BASE
    (36) opformato -> . f4
    (37) opformato -> . f3
    (38) opformato -> . f2
    (39) opformato -> . f1
    (40) f4 -> . PLUS f3
    (41) f3 -> . simple3
    (42) f3 -> . indirecto3
    (43) f3 -> . inmediato3
    (44) f3 -> . RSUB
    (45) f3 -> . simple3 COMA X
    (53) f2 -> . CODOP NUM
    (54) f2 -> . CODOP REG
    (55) f2 -> . CODOP REG COMA REG
    (56) f2 -> . CODOP REG COMA NUM
    (57) f1 -> . CODOP
    (46) simple3 -> . CODOP NAME
    (47) simple3 -> . CODOP NUM
    (48) simple3 -> . CODOP expression
    (49) indirecto3 -> . CODOP AT NUM
    (50) indirecto3 -> . CODOP AT expression
    (51) inmediato3 -> . CODOP SHARP NUM
    (52) inmediato3 -> . CODOP SHARP expression

  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for WORD resolved as shift
  ! shift/reduce conflict for RESB resolved as shift
  ! shift/reduce conflict for RESW resolved as shift
  ! shift/reduce conflict for BASE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for RSUB resolved as shift
  ! shift/reduce conflict for CODOP resolved as shift
    END             reduce using rule 16 (proposicion -> .)
    error           shift and go to state 15
    NAME            shift and go to state 19
    BYTE            shift and go to state 20
    WORD            shift and go to state 21
    RESB            shift and go to state 22
    RESW            shift and go to state 23
    BASE            shift and go to state 24
    PLUS            shift and go to state 29
    RSUB            shift and go to state 33
    CODOP           shift and go to state 34

  ! error           [ reduce using rule 16 (proposicion -> .) ]
  ! NAME            [ reduce using rule 16 (proposicion -> .) ]
  ! BYTE            [ reduce using rule 16 (proposicion -> .) ]
  ! WORD            [ reduce using rule 16 (proposicion -> .) ]
  ! RESB            [ reduce using rule 16 (proposicion -> .) ]
  ! RESW            [ reduce using rule 16 (proposicion -> .) ]
  ! BASE            [ reduce using rule 16 (proposicion -> .) ]
  ! PLUS            [ reduce using rule 16 (proposicion -> .) ]
  ! RSUB            [ reduce using rule 16 (proposicion -> .) ]
  ! CODOP           [ reduce using rule 16 (proposicion -> .) ]

    proposiciones                  shift and go to state 11
    proposicion                    shift and go to state 12
    directiva                      shift and go to state 13
    instruccion                    shift and go to state 14
    etiqueta                       shift and go to state 16
    tipodirectiva                  shift and go to state 17
    opformato                      shift and go to state 18
    f4                             shift and go to state 25
    f3                             shift and go to state 26
    f2                             shift and go to state 27
    f1                             shift and go to state 28
    simple3                        shift and go to state 30
    indirecto3                     shift and go to state 31
    inmediato3                     shift and go to state 32

state 5

    (77) empty -> NEWLINE .

    error           reduce using rule 77 (empty -> NEWLINE .)
    NAME            reduce using rule 77 (empty -> NEWLINE .)
    $end            reduce using rule 77 (empty -> NEWLINE .)


state 6

    (6) inicio -> nombre_programa . START numero NEWLINE
    (7) inicio -> nombre_programa . START error NEWLINE

    START           shift and go to state 35


state 7

    (8) inicio -> error . START numero NEWLINE
    (9) inicio -> error . START error NEWLINE

    START           shift and go to state 36


state 8

    (35) nombre_programa -> NAME .

    START           reduce using rule 35 (nombre_programa -> NAME .)


state 9

    (4) sicxe_file -> programa empty .

    $end            reduce using rule 4 (sicxe_file -> programa empty .)


state 10

    (2) sicxe_file -> empty programa .
    (3) sicxe_file -> empty programa . empty
    (77) empty -> . NEWLINE
    (78) empty -> .

  ! reduce/reduce conflict for $end resolved using rule 2 (sicxe_file -> empty programa .)
    $end            reduce using rule 2 (sicxe_file -> empty programa .)
    NEWLINE         shift and go to state 5

  ! $end            [ reduce using rule 78 (empty -> .) ]

    empty                          shift and go to state 37

state 11

    (5) programa -> inicio proposiciones . fin
    (14) proposiciones -> proposiciones . proposicion
    (12) fin -> . END entrada
    (16) proposicion -> .
    (17) proposicion -> . directiva NEWLINE
    (18) proposicion -> . instruccion NEWLINE
    (19) proposicion -> . error NEWLINE
    (24) directiva -> . etiqueta tipodirectiva opdirectiva
    (25) directiva -> . tipodirectiva opdirectiva
    (20) instruccion -> . etiqueta opformato
    (21) instruccion -> . opformato
    (22) instruccion -> . error opformato
    (23) instruccion -> . etiqueta error
    (34) etiqueta -> . NAME
    (29) tipodirectiva -> . BYTE
    (30) tipodirectiva -> . WORD
    (31) tipodirectiva -> . RESB
    (32) tipodirectiva -> . RESW
    (33) tipodirectiva -> . BASE
    (36) opformato -> . f4
    (37) opformato -> . f3
    (38) opformato -> . f2
    (39) opformato -> . f1
    (40) f4 -> . PLUS f3
    (41) f3 -> . simple3
    (42) f3 -> . indirecto3
    (43) f3 -> . inmediato3
    (44) f3 -> . RSUB
    (45) f3 -> . simple3 COMA X
    (53) f2 -> . CODOP NUM
    (54) f2 -> . CODOP REG
    (55) f2 -> . CODOP REG COMA REG
    (56) f2 -> . CODOP REG COMA NUM
    (57) f1 -> . CODOP
    (46) simple3 -> . CODOP NAME
    (47) simple3 -> . CODOP NUM
    (48) simple3 -> . CODOP expression
    (49) indirecto3 -> . CODOP AT NUM
    (50) indirecto3 -> . CODOP AT expression
    (51) inmediato3 -> . CODOP SHARP NUM
    (52) inmediato3 -> . CODOP SHARP expression

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for BYTE resolved as shift
  ! shift/reduce conflict for WORD resolved as shift
  ! shift/reduce conflict for RESB resolved as shift
  ! shift/reduce conflict for RESW resolved as shift
  ! shift/reduce conflict for BASE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for RSUB resolved as shift
  ! shift/reduce conflict for CODOP resolved as shift
    END             shift and go to state 40
    error           shift and go to state 15
    NAME            shift and go to state 19
    BYTE            shift and go to state 20
    WORD            shift and go to state 21
    RESB            shift and go to state 22
    RESW            shift and go to state 23
    BASE            shift and go to state 24
    PLUS            shift and go to state 29
    RSUB            shift and go to state 33
    CODOP           shift and go to state 34

  ! END             [ reduce using rule 16 (proposicion -> .) ]
  ! error           [ reduce using rule 16 (proposicion -> .) ]
  ! NAME            [ reduce using rule 16 (proposicion -> .) ]
  ! BYTE            [ reduce using rule 16 (proposicion -> .) ]
  ! WORD            [ reduce using rule 16 (proposicion -> .) ]
  ! RESB            [ reduce using rule 16 (proposicion -> .) ]
  ! RESW            [ reduce using rule 16 (proposicion -> .) ]
  ! BASE            [ reduce using rule 16 (proposicion -> .) ]
  ! PLUS            [ reduce using rule 16 (proposicion -> .) ]
  ! RSUB            [ reduce using rule 16 (proposicion -> .) ]
  ! CODOP           [ reduce using rule 16 (proposicion -> .) ]

    fin                            shift and go to state 38
    proposicion                    shift and go to state 39
    directiva                      shift and go to state 13
    instruccion                    shift and go to state 14
    etiqueta                       shift and go to state 16
    tipodirectiva                  shift and go to state 17
    opformato                      shift and go to state 18
    f4                             shift and go to state 25
    f3                             shift and go to state 26
    f2                             shift and go to state 27
    f1                             shift and go to state 28
    simple3                        shift and go to state 30
    indirecto3                     shift and go to state 31
    inmediato3                     shift and go to state 32

state 12

    (15) proposiciones -> proposicion .

    END             reduce using rule 15 (proposiciones -> proposicion .)
    error           reduce using rule 15 (proposiciones -> proposicion .)
    NAME            reduce using rule 15 (proposiciones -> proposicion .)
    BYTE            reduce using rule 15 (proposiciones -> proposicion .)
    WORD            reduce using rule 15 (proposiciones -> proposicion .)
    RESB            reduce using rule 15 (proposiciones -> proposicion .)
    RESW            reduce using rule 15 (proposiciones -> proposicion .)
    BASE            reduce using rule 15 (proposiciones -> proposicion .)
    PLUS            reduce using rule 15 (proposiciones -> proposicion .)
    RSUB            reduce using rule 15 (proposiciones -> proposicion .)
    CODOP           reduce using rule 15 (proposiciones -> proposicion .)


state 13

    (17) proposicion -> directiva . NEWLINE

    NEWLINE         shift and go to state 41


state 14

    (18) proposicion -> instruccion . NEWLINE

    NEWLINE         shift and go to state 42


state 15

    (19) proposicion -> error . NEWLINE
    (22) instruccion -> error . opformato
    (36) opformato -> . f4
    (37) opformato -> . f3
    (38) opformato -> . f2
    (39) opformato -> . f1
    (40) f4 -> . PLUS f3
    (41) f3 -> . simple3
    (42) f3 -> . indirecto3
    (43) f3 -> . inmediato3
    (44) f3 -> . RSUB
    (45) f3 -> . simple3 COMA X
    (53) f2 -> . CODOP NUM
    (54) f2 -> . CODOP REG
    (55) f2 -> . CODOP REG COMA REG
    (56) f2 -> . CODOP REG COMA NUM
    (57) f1 -> . CODOP
    (46) simple3 -> . CODOP NAME
    (47) simple3 -> . CODOP NUM
    (48) simple3 -> . CODOP expression
    (49) indirecto3 -> . CODOP AT NUM
    (50) indirecto3 -> . CODOP AT expression
    (51) inmediato3 -> . CODOP SHARP NUM
    (52) inmediato3 -> . CODOP SHARP expression

    NEWLINE         shift and go to state 43
    PLUS            shift and go to state 29
    RSUB            shift and go to state 33
    CODOP           shift and go to state 34

    opformato                      shift and go to state 44
    f4                             shift and go to state 25
    f3                             shift and go to state 26
    f2                             shift and go to state 27
    f1                             shift and go to state 28
    simple3                        shift and go to state 30
    indirecto3                     shift and go to state 31
    inmediato3                     shift and go to state 32

state 16

    (24) directiva -> etiqueta . tipodirectiva opdirectiva
    (20) instruccion -> etiqueta . opformato
    (23) instruccion -> etiqueta . error
    (29) tipodirectiva -> . BYTE
    (30) tipodirectiva -> . WORD
    (31) tipodirectiva -> . RESB
    (32) tipodirectiva -> . RESW
    (33) tipodirectiva -> . BASE
    (36) opformato -> . f4
    (37) opformato -> . f3
    (38) opformato -> . f2
    (39) opformato -> . f1
    (40) f4 -> . PLUS f3
    (41) f3 -> . simple3
    (42) f3 -> . indirecto3
    (43) f3 -> . inmediato3
    (44) f3 -> . RSUB
    (45) f3 -> . simple3 COMA X
    (53) f2 -> . CODOP NUM
    (54) f2 -> . CODOP REG
    (55) f2 -> . CODOP REG COMA REG
    (56) f2 -> . CODOP REG COMA NUM
    (57) f1 -> . CODOP
    (46) simple3 -> . CODOP NAME
    (47) simple3 -> . CODOP NUM
    (48) simple3 -> . CODOP expression
    (49) indirecto3 -> . CODOP AT NUM
    (50) indirecto3 -> . CODOP AT expression
    (51) inmediato3 -> . CODOP SHARP NUM
    (52) inmediato3 -> . CODOP SHARP expression

    error           shift and go to state 47
    BYTE            shift and go to state 20
    WORD            shift and go to state 21
    RESB            shift and go to state 22
    RESW            shift and go to state 23
    BASE            shift and go to state 24
    PLUS            shift and go to state 29
    RSUB            shift and go to state 33
    CODOP           shift and go to state 34

    tipodirectiva                  shift and go to state 45
    opformato                      shift and go to state 46
    f4                             shift and go to state 25
    f3                             shift and go to state 26
    f2                             shift and go to state 27
    f1                             shift and go to state 28
    simple3                        shift and go to state 30
    indirecto3                     shift and go to state 31
    inmediato3                     shift and go to state 32

state 17

    (25) directiva -> tipodirectiva . opdirectiva
    (26) opdirectiva -> . NUM
    (27) opdirectiva -> . NAME
    (28) opdirectiva -> . expression
    (58) expression -> . MINUS expression
    (59) expression -> . FACTORIAL expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression MULTIPLY expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression MOD expression
    (65) expression -> . expression LESST expression
    (66) expression -> . expression MORET expression
    (67) expression -> . expression LESSEQ expression
    (68) expression -> . expression MOREEQ expression
    (69) expression -> . expression OR_G expression
    (70) expression -> . expression AND_G expression
    (71) expression -> . NAME EQUALS expression
    (73) expression -> . INT
    (74) expression -> . FLOAT
    (75) expression -> . var
    (76) expression -> . LPARENT expression RPARENT
    (72) var -> . NAME

    NUM             shift and go to state 49
    NAME            shift and go to state 50
    MINUS           shift and go to state 52
    FACTORIAL       shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LPARENT         shift and go to state 57

    opdirectiva                    shift and go to state 48
    expression                     shift and go to state 51
    var                            shift and go to state 56

state 18

    (21) instruccion -> opformato .

    NEWLINE         reduce using rule 21 (instruccion -> opformato .)


state 19

    (34) etiqueta -> NAME .

    error           reduce using rule 34 (etiqueta -> NAME .)
    BYTE            reduce using rule 34 (etiqueta -> NAME .)
    WORD            reduce using rule 34 (etiqueta -> NAME .)
    RESB            reduce using rule 34 (etiqueta -> NAME .)
    RESW            reduce using rule 34 (etiqueta -> NAME .)
    BASE            reduce using rule 34 (etiqueta -> NAME .)
    PLUS            reduce using rule 34 (etiqueta -> NAME .)
    RSUB            reduce using rule 34 (etiqueta -> NAME .)
    CODOP           reduce using rule 34 (etiqueta -> NAME .)


state 20

    (29) tipodirectiva -> BYTE .

    NUM             reduce using rule 29 (tipodirectiva -> BYTE .)
    NAME            reduce using rule 29 (tipodirectiva -> BYTE .)
    MINUS           reduce using rule 29 (tipodirectiva -> BYTE .)
    FACTORIAL       reduce using rule 29 (tipodirectiva -> BYTE .)
    INT             reduce using rule 29 (tipodirectiva -> BYTE .)
    FLOAT           reduce using rule 29 (tipodirectiva -> BYTE .)
    LPARENT         reduce using rule 29 (tipodirectiva -> BYTE .)


state 21

    (30) tipodirectiva -> WORD .

    NUM             reduce using rule 30 (tipodirectiva -> WORD .)
    NAME            reduce using rule 30 (tipodirectiva -> WORD .)
    MINUS           reduce using rule 30 (tipodirectiva -> WORD .)
    FACTORIAL       reduce using rule 30 (tipodirectiva -> WORD .)
    INT             reduce using rule 30 (tipodirectiva -> WORD .)
    FLOAT           reduce using rule 30 (tipodirectiva -> WORD .)
    LPARENT         reduce using rule 30 (tipodirectiva -> WORD .)


state 22

    (31) tipodirectiva -> RESB .

    NUM             reduce using rule 31 (tipodirectiva -> RESB .)
    NAME            reduce using rule 31 (tipodirectiva -> RESB .)
    MINUS           reduce using rule 31 (tipodirectiva -> RESB .)
    FACTORIAL       reduce using rule 31 (tipodirectiva -> RESB .)
    INT             reduce using rule 31 (tipodirectiva -> RESB .)
    FLOAT           reduce using rule 31 (tipodirectiva -> RESB .)
    LPARENT         reduce using rule 31 (tipodirectiva -> RESB .)


state 23

    (32) tipodirectiva -> RESW .

    NUM             reduce using rule 32 (tipodirectiva -> RESW .)
    NAME            reduce using rule 32 (tipodirectiva -> RESW .)
    MINUS           reduce using rule 32 (tipodirectiva -> RESW .)
    FACTORIAL       reduce using rule 32 (tipodirectiva -> RESW .)
    INT             reduce using rule 32 (tipodirectiva -> RESW .)
    FLOAT           reduce using rule 32 (tipodirectiva -> RESW .)
    LPARENT         reduce using rule 32 (tipodirectiva -> RESW .)


state 24

    (33) tipodirectiva -> BASE .

    NUM             reduce using rule 33 (tipodirectiva -> BASE .)
    NAME            reduce using rule 33 (tipodirectiva -> BASE .)
    MINUS           reduce using rule 33 (tipodirectiva -> BASE .)
    FACTORIAL       reduce using rule 33 (tipodirectiva -> BASE .)
    INT             reduce using rule 33 (tipodirectiva -> BASE .)
    FLOAT           reduce using rule 33 (tipodirectiva -> BASE .)
    LPARENT         reduce using rule 33 (tipodirectiva -> BASE .)


state 25

    (36) opformato -> f4 .

    NEWLINE         reduce using rule 36 (opformato -> f4 .)


state 26

    (37) opformato -> f3 .

    NEWLINE         reduce using rule 37 (opformato -> f3 .)


state 27

    (38) opformato -> f2 .

    NEWLINE         reduce using rule 38 (opformato -> f2 .)


state 28

    (39) opformato -> f1 .

    NEWLINE         reduce using rule 39 (opformato -> f1 .)


state 29

    (40) f4 -> PLUS . f3
    (41) f3 -> . simple3
    (42) f3 -> . indirecto3
    (43) f3 -> . inmediato3
    (44) f3 -> . RSUB
    (45) f3 -> . simple3 COMA X
    (46) simple3 -> . CODOP NAME
    (47) simple3 -> . CODOP NUM
    (48) simple3 -> . CODOP expression
    (49) indirecto3 -> . CODOP AT NUM
    (50) indirecto3 -> . CODOP AT expression
    (51) inmediato3 -> . CODOP SHARP NUM
    (52) inmediato3 -> . CODOP SHARP expression

    RSUB            shift and go to state 33
    CODOP           shift and go to state 59

    f3                             shift and go to state 58
    simple3                        shift and go to state 30
    indirecto3                     shift and go to state 31
    inmediato3                     shift and go to state 32

state 30

    (41) f3 -> simple3 .
    (45) f3 -> simple3 . COMA X

    NEWLINE         reduce using rule 41 (f3 -> simple3 .)
    COMA            shift and go to state 60


state 31

    (42) f3 -> indirecto3 .

    NEWLINE         reduce using rule 42 (f3 -> indirecto3 .)


state 32

    (43) f3 -> inmediato3 .

    NEWLINE         reduce using rule 43 (f3 -> inmediato3 .)


state 33

    (44) f3 -> RSUB .

    NEWLINE         reduce using rule 44 (f3 -> RSUB .)


state 34

    (53) f2 -> CODOP . NUM
    (54) f2 -> CODOP . REG
    (55) f2 -> CODOP . REG COMA REG
    (56) f2 -> CODOP . REG COMA NUM
    (57) f1 -> CODOP .
    (46) simple3 -> CODOP . NAME
    (47) simple3 -> CODOP . NUM
    (48) simple3 -> CODOP . expression
    (49) indirecto3 -> CODOP . AT NUM
    (50) indirecto3 -> CODOP . AT expression
    (51) inmediato3 -> CODOP . SHARP NUM
    (52) inmediato3 -> CODOP . SHARP expression
    (58) expression -> . MINUS expression
    (59) expression -> . FACTORIAL expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression MULTIPLY expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression MOD expression
    (65) expression -> . expression LESST expression
    (66) expression -> . expression MORET expression
    (67) expression -> . expression LESSEQ expression
    (68) expression -> . expression MOREEQ expression
    (69) expression -> . expression OR_G expression
    (70) expression -> . expression AND_G expression
    (71) expression -> . NAME EQUALS expression
    (73) expression -> . INT
    (74) expression -> . FLOAT
    (75) expression -> . var
    (76) expression -> . LPARENT expression RPARENT
    (72) var -> . NAME

    NUM             shift and go to state 61
    REG             shift and go to state 62
    NEWLINE         reduce using rule 57 (f1 -> CODOP .)
    NAME            shift and go to state 63
    AT              shift and go to state 65
    SHARP           shift and go to state 66
    MINUS           shift and go to state 52
    FACTORIAL       shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LPARENT         shift and go to state 57

    expression                     shift and go to state 64
    var                            shift and go to state 56

state 35

    (6) inicio -> nombre_programa START . numero NEWLINE
    (7) inicio -> nombre_programa START . error NEWLINE
    (10) numero -> . INT
    (11) numero -> . HEX_INT

    error           shift and go to state 68
    INT             shift and go to state 69
    HEX_INT         shift and go to state 70

    numero                         shift and go to state 67

state 36

    (8) inicio -> error START . numero NEWLINE
    (9) inicio -> error START . error NEWLINE
    (10) numero -> . INT
    (11) numero -> . HEX_INT

    error           shift and go to state 71
    INT             shift and go to state 69
    HEX_INT         shift and go to state 70

    numero                         shift and go to state 72

state 37

    (3) sicxe_file -> empty programa empty .

    $end            reduce using rule 3 (sicxe_file -> empty programa empty .)


state 38

    (5) programa -> inicio proposiciones fin .

    NEWLINE         reduce using rule 5 (programa -> inicio proposiciones fin .)
    $end            reduce using rule 5 (programa -> inicio proposiciones fin .)


state 39

    (14) proposiciones -> proposiciones proposicion .

    END             reduce using rule 14 (proposiciones -> proposiciones proposicion .)
    error           reduce using rule 14 (proposiciones -> proposiciones proposicion .)
    NAME            reduce using rule 14 (proposiciones -> proposiciones proposicion .)
    BYTE            reduce using rule 14 (proposiciones -> proposiciones proposicion .)
    WORD            reduce using rule 14 (proposiciones -> proposiciones proposicion .)
    RESB            reduce using rule 14 (proposiciones -> proposiciones proposicion .)
    RESW            reduce using rule 14 (proposiciones -> proposiciones proposicion .)
    BASE            reduce using rule 14 (proposiciones -> proposiciones proposicion .)
    PLUS            reduce using rule 14 (proposiciones -> proposiciones proposicion .)
    RSUB            reduce using rule 14 (proposiciones -> proposiciones proposicion .)
    CODOP           reduce using rule 14 (proposiciones -> proposiciones proposicion .)


state 40

    (12) fin -> END . entrada
    (13) entrada -> . NAME

    NAME            shift and go to state 74

    entrada                        shift and go to state 73

state 41

    (17) proposicion -> directiva NEWLINE .

    END             reduce using rule 17 (proposicion -> directiva NEWLINE .)
    error           reduce using rule 17 (proposicion -> directiva NEWLINE .)
    NAME            reduce using rule 17 (proposicion -> directiva NEWLINE .)
    BYTE            reduce using rule 17 (proposicion -> directiva NEWLINE .)
    WORD            reduce using rule 17 (proposicion -> directiva NEWLINE .)
    RESB            reduce using rule 17 (proposicion -> directiva NEWLINE .)
    RESW            reduce using rule 17 (proposicion -> directiva NEWLINE .)
    BASE            reduce using rule 17 (proposicion -> directiva NEWLINE .)
    PLUS            reduce using rule 17 (proposicion -> directiva NEWLINE .)
    RSUB            reduce using rule 17 (proposicion -> directiva NEWLINE .)
    CODOP           reduce using rule 17 (proposicion -> directiva NEWLINE .)


state 42

    (18) proposicion -> instruccion NEWLINE .

    END             reduce using rule 18 (proposicion -> instruccion NEWLINE .)
    error           reduce using rule 18 (proposicion -> instruccion NEWLINE .)
    NAME            reduce using rule 18 (proposicion -> instruccion NEWLINE .)
    BYTE            reduce using rule 18 (proposicion -> instruccion NEWLINE .)
    WORD            reduce using rule 18 (proposicion -> instruccion NEWLINE .)
    RESB            reduce using rule 18 (proposicion -> instruccion NEWLINE .)
    RESW            reduce using rule 18 (proposicion -> instruccion NEWLINE .)
    BASE            reduce using rule 18 (proposicion -> instruccion NEWLINE .)
    PLUS            reduce using rule 18 (proposicion -> instruccion NEWLINE .)
    RSUB            reduce using rule 18 (proposicion -> instruccion NEWLINE .)
    CODOP           reduce using rule 18 (proposicion -> instruccion NEWLINE .)


state 43

    (19) proposicion -> error NEWLINE .

    END             reduce using rule 19 (proposicion -> error NEWLINE .)
    error           reduce using rule 19 (proposicion -> error NEWLINE .)
    NAME            reduce using rule 19 (proposicion -> error NEWLINE .)
    BYTE            reduce using rule 19 (proposicion -> error NEWLINE .)
    WORD            reduce using rule 19 (proposicion -> error NEWLINE .)
    RESB            reduce using rule 19 (proposicion -> error NEWLINE .)
    RESW            reduce using rule 19 (proposicion -> error NEWLINE .)
    BASE            reduce using rule 19 (proposicion -> error NEWLINE .)
    PLUS            reduce using rule 19 (proposicion -> error NEWLINE .)
    RSUB            reduce using rule 19 (proposicion -> error NEWLINE .)
    CODOP           reduce using rule 19 (proposicion -> error NEWLINE .)


state 44

    (22) instruccion -> error opformato .

    NEWLINE         reduce using rule 22 (instruccion -> error opformato .)


state 45

    (24) directiva -> etiqueta tipodirectiva . opdirectiva
    (26) opdirectiva -> . NUM
    (27) opdirectiva -> . NAME
    (28) opdirectiva -> . expression
    (58) expression -> . MINUS expression
    (59) expression -> . FACTORIAL expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression MULTIPLY expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression MOD expression
    (65) expression -> . expression LESST expression
    (66) expression -> . expression MORET expression
    (67) expression -> . expression LESSEQ expression
    (68) expression -> . expression MOREEQ expression
    (69) expression -> . expression OR_G expression
    (70) expression -> . expression AND_G expression
    (71) expression -> . NAME EQUALS expression
    (73) expression -> . INT
    (74) expression -> . FLOAT
    (75) expression -> . var
    (76) expression -> . LPARENT expression RPARENT
    (72) var -> . NAME

    NUM             shift and go to state 49
    NAME            shift and go to state 50
    MINUS           shift and go to state 52
    FACTORIAL       shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LPARENT         shift and go to state 57

    opdirectiva                    shift and go to state 75
    expression                     shift and go to state 51
    var                            shift and go to state 56

state 46

    (20) instruccion -> etiqueta opformato .

    NEWLINE         reduce using rule 20 (instruccion -> etiqueta opformato .)


state 47

    (23) instruccion -> etiqueta error .

    NEWLINE         reduce using rule 23 (instruccion -> etiqueta error .)


state 48

    (25) directiva -> tipodirectiva opdirectiva .

    NEWLINE         reduce using rule 25 (directiva -> tipodirectiva opdirectiva .)


state 49

    (26) opdirectiva -> NUM .

    NEWLINE         reduce using rule 26 (opdirectiva -> NUM .)


state 50

    (27) opdirectiva -> NAME .
    (71) expression -> NAME . EQUALS expression
    (72) var -> NAME .

  ! reduce/reduce conflict for NEWLINE resolved using rule 27 (opdirectiva -> NAME .)
    NEWLINE         reduce using rule 27 (opdirectiva -> NAME .)
    EQUALS          shift and go to state 76
    PLUS            reduce using rule 72 (var -> NAME .)
    MINUS           reduce using rule 72 (var -> NAME .)
    MULTIPLY        reduce using rule 72 (var -> NAME .)
    DIVIDE          reduce using rule 72 (var -> NAME .)
    MOD             reduce using rule 72 (var -> NAME .)
    LESST           reduce using rule 72 (var -> NAME .)
    MORET           reduce using rule 72 (var -> NAME .)
    LESSEQ          reduce using rule 72 (var -> NAME .)
    MOREEQ          reduce using rule 72 (var -> NAME .)
    OR_G            reduce using rule 72 (var -> NAME .)
    AND_G           reduce using rule 72 (var -> NAME .)

  ! NEWLINE         [ reduce using rule 72 (var -> NAME .) ]


state 51

    (28) opdirectiva -> expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . MULTIPLY expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . MOD expression
    (65) expression -> expression . LESST expression
    (66) expression -> expression . MORET expression
    (67) expression -> expression . LESSEQ expression
    (68) expression -> expression . MOREEQ expression
    (69) expression -> expression . OR_G expression
    (70) expression -> expression . AND_G expression

    NEWLINE         reduce using rule 28 (opdirectiva -> expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    MOD             shift and go to state 81
    LESST           shift and go to state 82
    MORET           shift and go to state 83
    LESSEQ          shift and go to state 84
    MOREEQ          shift and go to state 85
    OR_G            shift and go to state 86
    AND_G           shift and go to state 87


state 52

    (58) expression -> MINUS . expression
    (58) expression -> . MINUS expression
    (59) expression -> . FACTORIAL expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression MULTIPLY expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression MOD expression
    (65) expression -> . expression LESST expression
    (66) expression -> . expression MORET expression
    (67) expression -> . expression LESSEQ expression
    (68) expression -> . expression MOREEQ expression
    (69) expression -> . expression OR_G expression
    (70) expression -> . expression AND_G expression
    (71) expression -> . NAME EQUALS expression
    (73) expression -> . INT
    (74) expression -> . FLOAT
    (75) expression -> . var
    (76) expression -> . LPARENT expression RPARENT
    (72) var -> . NAME

    MINUS           shift and go to state 52
    FACTORIAL       shift and go to state 53
    NAME            shift and go to state 89
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LPARENT         shift and go to state 57

    expression                     shift and go to state 88
    var                            shift and go to state 56

state 53

    (59) expression -> FACTORIAL . expression
    (58) expression -> . MINUS expression
    (59) expression -> . FACTORIAL expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression MULTIPLY expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression MOD expression
    (65) expression -> . expression LESST expression
    (66) expression -> . expression MORET expression
    (67) expression -> . expression LESSEQ expression
    (68) expression -> . expression MOREEQ expression
    (69) expression -> . expression OR_G expression
    (70) expression -> . expression AND_G expression
    (71) expression -> . NAME EQUALS expression
    (73) expression -> . INT
    (74) expression -> . FLOAT
    (75) expression -> . var
    (76) expression -> . LPARENT expression RPARENT
    (72) var -> . NAME

    MINUS           shift and go to state 52
    FACTORIAL       shift and go to state 53
    NAME            shift and go to state 89
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LPARENT         shift and go to state 57

    expression                     shift and go to state 90
    var                            shift and go to state 56

state 54

    (73) expression -> INT .

    PLUS            reduce using rule 73 (expression -> INT .)
    MINUS           reduce using rule 73 (expression -> INT .)
    MULTIPLY        reduce using rule 73 (expression -> INT .)
    DIVIDE          reduce using rule 73 (expression -> INT .)
    MOD             reduce using rule 73 (expression -> INT .)
    LESST           reduce using rule 73 (expression -> INT .)
    MORET           reduce using rule 73 (expression -> INT .)
    LESSEQ          reduce using rule 73 (expression -> INT .)
    MOREEQ          reduce using rule 73 (expression -> INT .)
    OR_G            reduce using rule 73 (expression -> INT .)
    AND_G           reduce using rule 73 (expression -> INT .)
    NEWLINE         reduce using rule 73 (expression -> INT .)
    COMA            reduce using rule 73 (expression -> INT .)
    RPARENT         reduce using rule 73 (expression -> INT .)


state 55

    (74) expression -> FLOAT .

    PLUS            reduce using rule 74 (expression -> FLOAT .)
    MINUS           reduce using rule 74 (expression -> FLOAT .)
    MULTIPLY        reduce using rule 74 (expression -> FLOAT .)
    DIVIDE          reduce using rule 74 (expression -> FLOAT .)
    MOD             reduce using rule 74 (expression -> FLOAT .)
    LESST           reduce using rule 74 (expression -> FLOAT .)
    MORET           reduce using rule 74 (expression -> FLOAT .)
    LESSEQ          reduce using rule 74 (expression -> FLOAT .)
    MOREEQ          reduce using rule 74 (expression -> FLOAT .)
    OR_G            reduce using rule 74 (expression -> FLOAT .)
    AND_G           reduce using rule 74 (expression -> FLOAT .)
    NEWLINE         reduce using rule 74 (expression -> FLOAT .)
    COMA            reduce using rule 74 (expression -> FLOAT .)
    RPARENT         reduce using rule 74 (expression -> FLOAT .)


state 56

    (75) expression -> var .

    PLUS            reduce using rule 75 (expression -> var .)
    MINUS           reduce using rule 75 (expression -> var .)
    MULTIPLY        reduce using rule 75 (expression -> var .)
    DIVIDE          reduce using rule 75 (expression -> var .)
    MOD             reduce using rule 75 (expression -> var .)
    LESST           reduce using rule 75 (expression -> var .)
    MORET           reduce using rule 75 (expression -> var .)
    LESSEQ          reduce using rule 75 (expression -> var .)
    MOREEQ          reduce using rule 75 (expression -> var .)
    OR_G            reduce using rule 75 (expression -> var .)
    AND_G           reduce using rule 75 (expression -> var .)
    NEWLINE         reduce using rule 75 (expression -> var .)
    COMA            reduce using rule 75 (expression -> var .)
    RPARENT         reduce using rule 75 (expression -> var .)


state 57

    (76) expression -> LPARENT . expression RPARENT
    (58) expression -> . MINUS expression
    (59) expression -> . FACTORIAL expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression MULTIPLY expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression MOD expression
    (65) expression -> . expression LESST expression
    (66) expression -> . expression MORET expression
    (67) expression -> . expression LESSEQ expression
    (68) expression -> . expression MOREEQ expression
    (69) expression -> . expression OR_G expression
    (70) expression -> . expression AND_G expression
    (71) expression -> . NAME EQUALS expression
    (73) expression -> . INT
    (74) expression -> . FLOAT
    (75) expression -> . var
    (76) expression -> . LPARENT expression RPARENT
    (72) var -> . NAME

    MINUS           shift and go to state 52
    FACTORIAL       shift and go to state 53
    NAME            shift and go to state 89
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LPARENT         shift and go to state 57

    expression                     shift and go to state 91
    var                            shift and go to state 56

state 58

    (40) f4 -> PLUS f3 .

    NEWLINE         reduce using rule 40 (f4 -> PLUS f3 .)


state 59

    (46) simple3 -> CODOP . NAME
    (47) simple3 -> CODOP . NUM
    (48) simple3 -> CODOP . expression
    (49) indirecto3 -> CODOP . AT NUM
    (50) indirecto3 -> CODOP . AT expression
    (51) inmediato3 -> CODOP . SHARP NUM
    (52) inmediato3 -> CODOP . SHARP expression
    (58) expression -> . MINUS expression
    (59) expression -> . FACTORIAL expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression MULTIPLY expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression MOD expression
    (65) expression -> . expression LESST expression
    (66) expression -> . expression MORET expression
    (67) expression -> . expression LESSEQ expression
    (68) expression -> . expression MOREEQ expression
    (69) expression -> . expression OR_G expression
    (70) expression -> . expression AND_G expression
    (71) expression -> . NAME EQUALS expression
    (73) expression -> . INT
    (74) expression -> . FLOAT
    (75) expression -> . var
    (76) expression -> . LPARENT expression RPARENT
    (72) var -> . NAME

    NAME            shift and go to state 63
    NUM             shift and go to state 92
    AT              shift and go to state 65
    SHARP           shift and go to state 66
    MINUS           shift and go to state 52
    FACTORIAL       shift and go to state 53
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LPARENT         shift and go to state 57

    expression                     shift and go to state 64
    var                            shift and go to state 56

state 60

    (45) f3 -> simple3 COMA . X

    X               shift and go to state 93


state 61

    (53) f2 -> CODOP NUM .
    (47) simple3 -> CODOP NUM .

  ! reduce/reduce conflict for NEWLINE resolved using rule 47 (simple3 -> CODOP NUM .)
    COMA            reduce using rule 47 (simple3 -> CODOP NUM .)
    NEWLINE         reduce using rule 47 (simple3 -> CODOP NUM .)

  ! NEWLINE         [ reduce using rule 53 (f2 -> CODOP NUM .) ]


state 62

    (54) f2 -> CODOP REG .
    (55) f2 -> CODOP REG . COMA REG
    (56) f2 -> CODOP REG . COMA NUM

    NEWLINE         reduce using rule 54 (f2 -> CODOP REG .)
    COMA            shift and go to state 94


state 63

    (46) simple3 -> CODOP NAME .
    (71) expression -> NAME . EQUALS expression
    (72) var -> NAME .

  ! reduce/reduce conflict for COMA resolved using rule 46 (simple3 -> CODOP NAME .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 46 (simple3 -> CODOP NAME .)
    COMA            reduce using rule 46 (simple3 -> CODOP NAME .)
    NEWLINE         reduce using rule 46 (simple3 -> CODOP NAME .)
    EQUALS          shift and go to state 76
    PLUS            reduce using rule 72 (var -> NAME .)
    MINUS           reduce using rule 72 (var -> NAME .)
    MULTIPLY        reduce using rule 72 (var -> NAME .)
    DIVIDE          reduce using rule 72 (var -> NAME .)
    MOD             reduce using rule 72 (var -> NAME .)
    LESST           reduce using rule 72 (var -> NAME .)
    MORET           reduce using rule 72 (var -> NAME .)
    LESSEQ          reduce using rule 72 (var -> NAME .)
    MOREEQ          reduce using rule 72 (var -> NAME .)
    OR_G            reduce using rule 72 (var -> NAME .)
    AND_G           reduce using rule 72 (var -> NAME .)

  ! COMA            [ reduce using rule 72 (var -> NAME .) ]
  ! NEWLINE         [ reduce using rule 72 (var -> NAME .) ]


state 64

    (48) simple3 -> CODOP expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . MULTIPLY expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . MOD expression
    (65) expression -> expression . LESST expression
    (66) expression -> expression . MORET expression
    (67) expression -> expression . LESSEQ expression
    (68) expression -> expression . MOREEQ expression
    (69) expression -> expression . OR_G expression
    (70) expression -> expression . AND_G expression

    COMA            reduce using rule 48 (simple3 -> CODOP expression .)
    NEWLINE         reduce using rule 48 (simple3 -> CODOP expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    MOD             shift and go to state 81
    LESST           shift and go to state 82
    MORET           shift and go to state 83
    LESSEQ          shift and go to state 84
    MOREEQ          shift and go to state 85
    OR_G            shift and go to state 86
    AND_G           shift and go to state 87


state 65

    (49) indirecto3 -> CODOP AT . NUM
    (50) indirecto3 -> CODOP AT . expression
    (58) expression -> . MINUS expression
    (59) expression -> . FACTORIAL expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression MULTIPLY expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression MOD expression
    (65) expression -> . expression LESST expression
    (66) expression -> . expression MORET expression
    (67) expression -> . expression LESSEQ expression
    (68) expression -> . expression MOREEQ expression
    (69) expression -> . expression OR_G expression
    (70) expression -> . expression AND_G expression
    (71) expression -> . NAME EQUALS expression
    (73) expression -> . INT
    (74) expression -> . FLOAT
    (75) expression -> . var
    (76) expression -> . LPARENT expression RPARENT
    (72) var -> . NAME

    NUM             shift and go to state 95
    MINUS           shift and go to state 52
    FACTORIAL       shift and go to state 53
    NAME            shift and go to state 89
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LPARENT         shift and go to state 57

    expression                     shift and go to state 96
    var                            shift and go to state 56

state 66

    (51) inmediato3 -> CODOP SHARP . NUM
    (52) inmediato3 -> CODOP SHARP . expression
    (58) expression -> . MINUS expression
    (59) expression -> . FACTORIAL expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression MULTIPLY expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression MOD expression
    (65) expression -> . expression LESST expression
    (66) expression -> . expression MORET expression
    (67) expression -> . expression LESSEQ expression
    (68) expression -> . expression MOREEQ expression
    (69) expression -> . expression OR_G expression
    (70) expression -> . expression AND_G expression
    (71) expression -> . NAME EQUALS expression
    (73) expression -> . INT
    (74) expression -> . FLOAT
    (75) expression -> . var
    (76) expression -> . LPARENT expression RPARENT
    (72) var -> . NAME

    NUM             shift and go to state 97
    MINUS           shift and go to state 52
    FACTORIAL       shift and go to state 53
    NAME            shift and go to state 89
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LPARENT         shift and go to state 57

    expression                     shift and go to state 98
    var                            shift and go to state 56

state 67

    (6) inicio -> nombre_programa START numero . NEWLINE

    NEWLINE         shift and go to state 99


state 68

    (7) inicio -> nombre_programa START error . NEWLINE

    NEWLINE         shift and go to state 100


state 69

    (10) numero -> INT .

    NEWLINE         reduce using rule 10 (numero -> INT .)


state 70

    (11) numero -> HEX_INT .

    NEWLINE         reduce using rule 11 (numero -> HEX_INT .)


state 71

    (9) inicio -> error START error . NEWLINE

    NEWLINE         shift and go to state 101


state 72

    (8) inicio -> error START numero . NEWLINE

    NEWLINE         shift and go to state 102


state 73

    (12) fin -> END entrada .

    NEWLINE         reduce using rule 12 (fin -> END entrada .)
    $end            reduce using rule 12 (fin -> END entrada .)


state 74

    (13) entrada -> NAME .

    NEWLINE         reduce using rule 13 (entrada -> NAME .)
    $end            reduce using rule 13 (entrada -> NAME .)


state 75

    (24) directiva -> etiqueta tipodirectiva opdirectiva .

    NEWLINE         reduce using rule 24 (directiva -> etiqueta tipodirectiva opdirectiva .)


state 76

    (71) expression -> NAME EQUALS . expression
    (58) expression -> . MINUS expression
    (59) expression -> . FACTORIAL expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression MULTIPLY expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression MOD expression
    (65) expression -> . expression LESST expression
    (66) expression -> . expression MORET expression
    (67) expression -> . expression LESSEQ expression
    (68) expression -> . expression MOREEQ expression
    (69) expression -> . expression OR_G expression
    (70) expression -> . expression AND_G expression
    (71) expression -> . NAME EQUALS expression
    (73) expression -> . INT
    (74) expression -> . FLOAT
    (75) expression -> . var
    (76) expression -> . LPARENT expression RPARENT
    (72) var -> . NAME

    MINUS           shift and go to state 52
    FACTORIAL       shift and go to state 53
    NAME            shift and go to state 89
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LPARENT         shift and go to state 57

    expression                     shift and go to state 103
    var                            shift and go to state 56

state 77

    (60) expression -> expression PLUS . expression
    (58) expression -> . MINUS expression
    (59) expression -> . FACTORIAL expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression MULTIPLY expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression MOD expression
    (65) expression -> . expression LESST expression
    (66) expression -> . expression MORET expression
    (67) expression -> . expression LESSEQ expression
    (68) expression -> . expression MOREEQ expression
    (69) expression -> . expression OR_G expression
    (70) expression -> . expression AND_G expression
    (71) expression -> . NAME EQUALS expression
    (73) expression -> . INT
    (74) expression -> . FLOAT
    (75) expression -> . var
    (76) expression -> . LPARENT expression RPARENT
    (72) var -> . NAME

    MINUS           shift and go to state 52
    FACTORIAL       shift and go to state 53
    NAME            shift and go to state 89
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LPARENT         shift and go to state 57

    expression                     shift and go to state 104
    var                            shift and go to state 56

state 78

    (61) expression -> expression MINUS . expression
    (58) expression -> . MINUS expression
    (59) expression -> . FACTORIAL expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression MULTIPLY expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression MOD expression
    (65) expression -> . expression LESST expression
    (66) expression -> . expression MORET expression
    (67) expression -> . expression LESSEQ expression
    (68) expression -> . expression MOREEQ expression
    (69) expression -> . expression OR_G expression
    (70) expression -> . expression AND_G expression
    (71) expression -> . NAME EQUALS expression
    (73) expression -> . INT
    (74) expression -> . FLOAT
    (75) expression -> . var
    (76) expression -> . LPARENT expression RPARENT
    (72) var -> . NAME

    MINUS           shift and go to state 52
    FACTORIAL       shift and go to state 53
    NAME            shift and go to state 89
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LPARENT         shift and go to state 57

    expression                     shift and go to state 105
    var                            shift and go to state 56

state 79

    (62) expression -> expression MULTIPLY . expression
    (58) expression -> . MINUS expression
    (59) expression -> . FACTORIAL expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression MULTIPLY expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression MOD expression
    (65) expression -> . expression LESST expression
    (66) expression -> . expression MORET expression
    (67) expression -> . expression LESSEQ expression
    (68) expression -> . expression MOREEQ expression
    (69) expression -> . expression OR_G expression
    (70) expression -> . expression AND_G expression
    (71) expression -> . NAME EQUALS expression
    (73) expression -> . INT
    (74) expression -> . FLOAT
    (75) expression -> . var
    (76) expression -> . LPARENT expression RPARENT
    (72) var -> . NAME

    MINUS           shift and go to state 52
    FACTORIAL       shift and go to state 53
    NAME            shift and go to state 89
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LPARENT         shift and go to state 57

    expression                     shift and go to state 106
    var                            shift and go to state 56

state 80

    (63) expression -> expression DIVIDE . expression
    (58) expression -> . MINUS expression
    (59) expression -> . FACTORIAL expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression MULTIPLY expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression MOD expression
    (65) expression -> . expression LESST expression
    (66) expression -> . expression MORET expression
    (67) expression -> . expression LESSEQ expression
    (68) expression -> . expression MOREEQ expression
    (69) expression -> . expression OR_G expression
    (70) expression -> . expression AND_G expression
    (71) expression -> . NAME EQUALS expression
    (73) expression -> . INT
    (74) expression -> . FLOAT
    (75) expression -> . var
    (76) expression -> . LPARENT expression RPARENT
    (72) var -> . NAME

    MINUS           shift and go to state 52
    FACTORIAL       shift and go to state 53
    NAME            shift and go to state 89
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LPARENT         shift and go to state 57

    expression                     shift and go to state 107
    var                            shift and go to state 56

state 81

    (64) expression -> expression MOD . expression
    (58) expression -> . MINUS expression
    (59) expression -> . FACTORIAL expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression MULTIPLY expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression MOD expression
    (65) expression -> . expression LESST expression
    (66) expression -> . expression MORET expression
    (67) expression -> . expression LESSEQ expression
    (68) expression -> . expression MOREEQ expression
    (69) expression -> . expression OR_G expression
    (70) expression -> . expression AND_G expression
    (71) expression -> . NAME EQUALS expression
    (73) expression -> . INT
    (74) expression -> . FLOAT
    (75) expression -> . var
    (76) expression -> . LPARENT expression RPARENT
    (72) var -> . NAME

    MINUS           shift and go to state 52
    FACTORIAL       shift and go to state 53
    NAME            shift and go to state 89
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LPARENT         shift and go to state 57

    expression                     shift and go to state 108
    var                            shift and go to state 56

state 82

    (65) expression -> expression LESST . expression
    (58) expression -> . MINUS expression
    (59) expression -> . FACTORIAL expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression MULTIPLY expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression MOD expression
    (65) expression -> . expression LESST expression
    (66) expression -> . expression MORET expression
    (67) expression -> . expression LESSEQ expression
    (68) expression -> . expression MOREEQ expression
    (69) expression -> . expression OR_G expression
    (70) expression -> . expression AND_G expression
    (71) expression -> . NAME EQUALS expression
    (73) expression -> . INT
    (74) expression -> . FLOAT
    (75) expression -> . var
    (76) expression -> . LPARENT expression RPARENT
    (72) var -> . NAME

    MINUS           shift and go to state 52
    FACTORIAL       shift and go to state 53
    NAME            shift and go to state 89
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LPARENT         shift and go to state 57

    expression                     shift and go to state 109
    var                            shift and go to state 56

state 83

    (66) expression -> expression MORET . expression
    (58) expression -> . MINUS expression
    (59) expression -> . FACTORIAL expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression MULTIPLY expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression MOD expression
    (65) expression -> . expression LESST expression
    (66) expression -> . expression MORET expression
    (67) expression -> . expression LESSEQ expression
    (68) expression -> . expression MOREEQ expression
    (69) expression -> . expression OR_G expression
    (70) expression -> . expression AND_G expression
    (71) expression -> . NAME EQUALS expression
    (73) expression -> . INT
    (74) expression -> . FLOAT
    (75) expression -> . var
    (76) expression -> . LPARENT expression RPARENT
    (72) var -> . NAME

    MINUS           shift and go to state 52
    FACTORIAL       shift and go to state 53
    NAME            shift and go to state 89
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LPARENT         shift and go to state 57

    expression                     shift and go to state 110
    var                            shift and go to state 56

state 84

    (67) expression -> expression LESSEQ . expression
    (58) expression -> . MINUS expression
    (59) expression -> . FACTORIAL expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression MULTIPLY expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression MOD expression
    (65) expression -> . expression LESST expression
    (66) expression -> . expression MORET expression
    (67) expression -> . expression LESSEQ expression
    (68) expression -> . expression MOREEQ expression
    (69) expression -> . expression OR_G expression
    (70) expression -> . expression AND_G expression
    (71) expression -> . NAME EQUALS expression
    (73) expression -> . INT
    (74) expression -> . FLOAT
    (75) expression -> . var
    (76) expression -> . LPARENT expression RPARENT
    (72) var -> . NAME

    MINUS           shift and go to state 52
    FACTORIAL       shift and go to state 53
    NAME            shift and go to state 89
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LPARENT         shift and go to state 57

    expression                     shift and go to state 111
    var                            shift and go to state 56

state 85

    (68) expression -> expression MOREEQ . expression
    (58) expression -> . MINUS expression
    (59) expression -> . FACTORIAL expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression MULTIPLY expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression MOD expression
    (65) expression -> . expression LESST expression
    (66) expression -> . expression MORET expression
    (67) expression -> . expression LESSEQ expression
    (68) expression -> . expression MOREEQ expression
    (69) expression -> . expression OR_G expression
    (70) expression -> . expression AND_G expression
    (71) expression -> . NAME EQUALS expression
    (73) expression -> . INT
    (74) expression -> . FLOAT
    (75) expression -> . var
    (76) expression -> . LPARENT expression RPARENT
    (72) var -> . NAME

    MINUS           shift and go to state 52
    FACTORIAL       shift and go to state 53
    NAME            shift and go to state 89
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LPARENT         shift and go to state 57

    expression                     shift and go to state 112
    var                            shift and go to state 56

state 86

    (69) expression -> expression OR_G . expression
    (58) expression -> . MINUS expression
    (59) expression -> . FACTORIAL expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression MULTIPLY expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression MOD expression
    (65) expression -> . expression LESST expression
    (66) expression -> . expression MORET expression
    (67) expression -> . expression LESSEQ expression
    (68) expression -> . expression MOREEQ expression
    (69) expression -> . expression OR_G expression
    (70) expression -> . expression AND_G expression
    (71) expression -> . NAME EQUALS expression
    (73) expression -> . INT
    (74) expression -> . FLOAT
    (75) expression -> . var
    (76) expression -> . LPARENT expression RPARENT
    (72) var -> . NAME

    MINUS           shift and go to state 52
    FACTORIAL       shift and go to state 53
    NAME            shift and go to state 89
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LPARENT         shift and go to state 57

    expression                     shift and go to state 113
    var                            shift and go to state 56

state 87

    (70) expression -> expression AND_G . expression
    (58) expression -> . MINUS expression
    (59) expression -> . FACTORIAL expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression MULTIPLY expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression MOD expression
    (65) expression -> . expression LESST expression
    (66) expression -> . expression MORET expression
    (67) expression -> . expression LESSEQ expression
    (68) expression -> . expression MOREEQ expression
    (69) expression -> . expression OR_G expression
    (70) expression -> . expression AND_G expression
    (71) expression -> . NAME EQUALS expression
    (73) expression -> . INT
    (74) expression -> . FLOAT
    (75) expression -> . var
    (76) expression -> . LPARENT expression RPARENT
    (72) var -> . NAME

    MINUS           shift and go to state 52
    FACTORIAL       shift and go to state 53
    NAME            shift and go to state 89
    INT             shift and go to state 54
    FLOAT           shift and go to state 55
    LPARENT         shift and go to state 57

    expression                     shift and go to state 114
    var                            shift and go to state 56

state 88

    (58) expression -> MINUS expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . MULTIPLY expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . MOD expression
    (65) expression -> expression . LESST expression
    (66) expression -> expression . MORET expression
    (67) expression -> expression . LESSEQ expression
    (68) expression -> expression . MOREEQ expression
    (69) expression -> expression . OR_G expression
    (70) expression -> expression . AND_G expression

    PLUS            reduce using rule 58 (expression -> MINUS expression .)
    MINUS           reduce using rule 58 (expression -> MINUS expression .)
    MULTIPLY        reduce using rule 58 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 58 (expression -> MINUS expression .)
    MOD             reduce using rule 58 (expression -> MINUS expression .)
    LESST           reduce using rule 58 (expression -> MINUS expression .)
    MORET           reduce using rule 58 (expression -> MINUS expression .)
    LESSEQ          reduce using rule 58 (expression -> MINUS expression .)
    MOREEQ          reduce using rule 58 (expression -> MINUS expression .)
    OR_G            reduce using rule 58 (expression -> MINUS expression .)
    AND_G           reduce using rule 58 (expression -> MINUS expression .)
    NEWLINE         reduce using rule 58 (expression -> MINUS expression .)
    COMA            reduce using rule 58 (expression -> MINUS expression .)
    RPARENT         reduce using rule 58 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]
  ! MULTIPLY        [ shift and go to state 79 ]
  ! DIVIDE          [ shift and go to state 80 ]
  ! MOD             [ shift and go to state 81 ]
  ! LESST           [ shift and go to state 82 ]
  ! MORET           [ shift and go to state 83 ]
  ! LESSEQ          [ shift and go to state 84 ]
  ! MOREEQ          [ shift and go to state 85 ]
  ! OR_G            [ shift and go to state 86 ]
  ! AND_G           [ shift and go to state 87 ]


state 89

    (71) expression -> NAME . EQUALS expression
    (72) var -> NAME .

    EQUALS          shift and go to state 76
    PLUS            reduce using rule 72 (var -> NAME .)
    MINUS           reduce using rule 72 (var -> NAME .)
    MULTIPLY        reduce using rule 72 (var -> NAME .)
    DIVIDE          reduce using rule 72 (var -> NAME .)
    MOD             reduce using rule 72 (var -> NAME .)
    LESST           reduce using rule 72 (var -> NAME .)
    MORET           reduce using rule 72 (var -> NAME .)
    LESSEQ          reduce using rule 72 (var -> NAME .)
    MOREEQ          reduce using rule 72 (var -> NAME .)
    OR_G            reduce using rule 72 (var -> NAME .)
    AND_G           reduce using rule 72 (var -> NAME .)
    NEWLINE         reduce using rule 72 (var -> NAME .)
    COMA            reduce using rule 72 (var -> NAME .)
    RPARENT         reduce using rule 72 (var -> NAME .)


state 90

    (59) expression -> FACTORIAL expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . MULTIPLY expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . MOD expression
    (65) expression -> expression . LESST expression
    (66) expression -> expression . MORET expression
    (67) expression -> expression . LESSEQ expression
    (68) expression -> expression . MOREEQ expression
    (69) expression -> expression . OR_G expression
    (70) expression -> expression . AND_G expression

    PLUS            reduce using rule 59 (expression -> FACTORIAL expression .)
    MINUS           reduce using rule 59 (expression -> FACTORIAL expression .)
    MULTIPLY        reduce using rule 59 (expression -> FACTORIAL expression .)
    DIVIDE          reduce using rule 59 (expression -> FACTORIAL expression .)
    MOD             reduce using rule 59 (expression -> FACTORIAL expression .)
    LESST           reduce using rule 59 (expression -> FACTORIAL expression .)
    MORET           reduce using rule 59 (expression -> FACTORIAL expression .)
    LESSEQ          reduce using rule 59 (expression -> FACTORIAL expression .)
    MOREEQ          reduce using rule 59 (expression -> FACTORIAL expression .)
    OR_G            reduce using rule 59 (expression -> FACTORIAL expression .)
    AND_G           reduce using rule 59 (expression -> FACTORIAL expression .)
    NEWLINE         reduce using rule 59 (expression -> FACTORIAL expression .)
    COMA            reduce using rule 59 (expression -> FACTORIAL expression .)
    RPARENT         reduce using rule 59 (expression -> FACTORIAL expression .)

  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]
  ! MULTIPLY        [ shift and go to state 79 ]
  ! DIVIDE          [ shift and go to state 80 ]
  ! MOD             [ shift and go to state 81 ]
  ! LESST           [ shift and go to state 82 ]
  ! MORET           [ shift and go to state 83 ]
  ! LESSEQ          [ shift and go to state 84 ]
  ! MOREEQ          [ shift and go to state 85 ]
  ! OR_G            [ shift and go to state 86 ]
  ! AND_G           [ shift and go to state 87 ]


state 91

    (76) expression -> LPARENT expression . RPARENT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . MULTIPLY expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . MOD expression
    (65) expression -> expression . LESST expression
    (66) expression -> expression . MORET expression
    (67) expression -> expression . LESSEQ expression
    (68) expression -> expression . MOREEQ expression
    (69) expression -> expression . OR_G expression
    (70) expression -> expression . AND_G expression

    RPARENT         shift and go to state 115
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    MOD             shift and go to state 81
    LESST           shift and go to state 82
    MORET           shift and go to state 83
    LESSEQ          shift and go to state 84
    MOREEQ          shift and go to state 85
    OR_G            shift and go to state 86
    AND_G           shift and go to state 87


state 92

    (47) simple3 -> CODOP NUM .

    COMA            reduce using rule 47 (simple3 -> CODOP NUM .)
    NEWLINE         reduce using rule 47 (simple3 -> CODOP NUM .)


state 93

    (45) f3 -> simple3 COMA X .

    NEWLINE         reduce using rule 45 (f3 -> simple3 COMA X .)


state 94

    (55) f2 -> CODOP REG COMA . REG
    (56) f2 -> CODOP REG COMA . NUM

    REG             shift and go to state 116
    NUM             shift and go to state 117


state 95

    (49) indirecto3 -> CODOP AT NUM .

    NEWLINE         reduce using rule 49 (indirecto3 -> CODOP AT NUM .)


state 96

    (50) indirecto3 -> CODOP AT expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . MULTIPLY expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . MOD expression
    (65) expression -> expression . LESST expression
    (66) expression -> expression . MORET expression
    (67) expression -> expression . LESSEQ expression
    (68) expression -> expression . MOREEQ expression
    (69) expression -> expression . OR_G expression
    (70) expression -> expression . AND_G expression

    NEWLINE         reduce using rule 50 (indirecto3 -> CODOP AT expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    MOD             shift and go to state 81
    LESST           shift and go to state 82
    MORET           shift and go to state 83
    LESSEQ          shift and go to state 84
    MOREEQ          shift and go to state 85
    OR_G            shift and go to state 86
    AND_G           shift and go to state 87


state 97

    (51) inmediato3 -> CODOP SHARP NUM .

    NEWLINE         reduce using rule 51 (inmediato3 -> CODOP SHARP NUM .)


state 98

    (52) inmediato3 -> CODOP SHARP expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . MULTIPLY expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . MOD expression
    (65) expression -> expression . LESST expression
    (66) expression -> expression . MORET expression
    (67) expression -> expression . LESSEQ expression
    (68) expression -> expression . MOREEQ expression
    (69) expression -> expression . OR_G expression
    (70) expression -> expression . AND_G expression

    NEWLINE         reduce using rule 52 (inmediato3 -> CODOP SHARP expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    MOD             shift and go to state 81
    LESST           shift and go to state 82
    MORET           shift and go to state 83
    LESSEQ          shift and go to state 84
    MOREEQ          shift and go to state 85
    OR_G            shift and go to state 86
    AND_G           shift and go to state 87


state 99

    (6) inicio -> nombre_programa START numero NEWLINE .

    error           reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    NAME            reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    BYTE            reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    WORD            reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    RESB            reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    RESW            reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    BASE            reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    PLUS            reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    RSUB            reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    CODOP           reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)
    END             reduce using rule 6 (inicio -> nombre_programa START numero NEWLINE .)


state 100

    (7) inicio -> nombre_programa START error NEWLINE .

    error           reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    NAME            reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    BYTE            reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    WORD            reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    RESB            reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    RESW            reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    BASE            reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    PLUS            reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    RSUB            reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    CODOP           reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)
    END             reduce using rule 7 (inicio -> nombre_programa START error NEWLINE .)


state 101

    (9) inicio -> error START error NEWLINE .

    error           reduce using rule 9 (inicio -> error START error NEWLINE .)
    NAME            reduce using rule 9 (inicio -> error START error NEWLINE .)
    BYTE            reduce using rule 9 (inicio -> error START error NEWLINE .)
    WORD            reduce using rule 9 (inicio -> error START error NEWLINE .)
    RESB            reduce using rule 9 (inicio -> error START error NEWLINE .)
    RESW            reduce using rule 9 (inicio -> error START error NEWLINE .)
    BASE            reduce using rule 9 (inicio -> error START error NEWLINE .)
    PLUS            reduce using rule 9 (inicio -> error START error NEWLINE .)
    RSUB            reduce using rule 9 (inicio -> error START error NEWLINE .)
    CODOP           reduce using rule 9 (inicio -> error START error NEWLINE .)
    END             reduce using rule 9 (inicio -> error START error NEWLINE .)


state 102

    (8) inicio -> error START numero NEWLINE .

    error           reduce using rule 8 (inicio -> error START numero NEWLINE .)
    NAME            reduce using rule 8 (inicio -> error START numero NEWLINE .)
    BYTE            reduce using rule 8 (inicio -> error START numero NEWLINE .)
    WORD            reduce using rule 8 (inicio -> error START numero NEWLINE .)
    RESB            reduce using rule 8 (inicio -> error START numero NEWLINE .)
    RESW            reduce using rule 8 (inicio -> error START numero NEWLINE .)
    BASE            reduce using rule 8 (inicio -> error START numero NEWLINE .)
    PLUS            reduce using rule 8 (inicio -> error START numero NEWLINE .)
    RSUB            reduce using rule 8 (inicio -> error START numero NEWLINE .)
    CODOP           reduce using rule 8 (inicio -> error START numero NEWLINE .)
    END             reduce using rule 8 (inicio -> error START numero NEWLINE .)


state 103

    (71) expression -> NAME EQUALS expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . MULTIPLY expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . MOD expression
    (65) expression -> expression . LESST expression
    (66) expression -> expression . MORET expression
    (67) expression -> expression . LESSEQ expression
    (68) expression -> expression . MOREEQ expression
    (69) expression -> expression . OR_G expression
    (70) expression -> expression . AND_G expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for LESST resolved as shift
  ! shift/reduce conflict for MORET resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for MOREEQ resolved as shift
  ! shift/reduce conflict for OR_G resolved as shift
  ! shift/reduce conflict for AND_G resolved as shift
    NEWLINE         reduce using rule 71 (expression -> NAME EQUALS expression .)
    COMA            reduce using rule 71 (expression -> NAME EQUALS expression .)
    RPARENT         reduce using rule 71 (expression -> NAME EQUALS expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    MOD             shift and go to state 81
    LESST           shift and go to state 82
    MORET           shift and go to state 83
    LESSEQ          shift and go to state 84
    MOREEQ          shift and go to state 85
    OR_G            shift and go to state 86
    AND_G           shift and go to state 87

  ! PLUS            [ reduce using rule 71 (expression -> NAME EQUALS expression .) ]
  ! MINUS           [ reduce using rule 71 (expression -> NAME EQUALS expression .) ]
  ! MULTIPLY        [ reduce using rule 71 (expression -> NAME EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 71 (expression -> NAME EQUALS expression .) ]
  ! MOD             [ reduce using rule 71 (expression -> NAME EQUALS expression .) ]
  ! LESST           [ reduce using rule 71 (expression -> NAME EQUALS expression .) ]
  ! MORET           [ reduce using rule 71 (expression -> NAME EQUALS expression .) ]
  ! LESSEQ          [ reduce using rule 71 (expression -> NAME EQUALS expression .) ]
  ! MOREEQ          [ reduce using rule 71 (expression -> NAME EQUALS expression .) ]
  ! OR_G            [ reduce using rule 71 (expression -> NAME EQUALS expression .) ]
  ! AND_G           [ reduce using rule 71 (expression -> NAME EQUALS expression .) ]


state 104

    (60) expression -> expression PLUS expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . MULTIPLY expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . MOD expression
    (65) expression -> expression . LESST expression
    (66) expression -> expression . MORET expression
    (67) expression -> expression . LESSEQ expression
    (68) expression -> expression . MOREEQ expression
    (69) expression -> expression . OR_G expression
    (70) expression -> expression . AND_G expression

    PLUS            reduce using rule 60 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 60 (expression -> expression PLUS expression .)
    LESST           reduce using rule 60 (expression -> expression PLUS expression .)
    MORET           reduce using rule 60 (expression -> expression PLUS expression .)
    LESSEQ          reduce using rule 60 (expression -> expression PLUS expression .)
    MOREEQ          reduce using rule 60 (expression -> expression PLUS expression .)
    OR_G            reduce using rule 60 (expression -> expression PLUS expression .)
    AND_G           reduce using rule 60 (expression -> expression PLUS expression .)
    NEWLINE         reduce using rule 60 (expression -> expression PLUS expression .)
    COMA            reduce using rule 60 (expression -> expression PLUS expression .)
    RPARENT         reduce using rule 60 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    MOD             shift and go to state 81

  ! MULTIPLY        [ reduce using rule 60 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 60 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 60 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]
  ! LESST           [ shift and go to state 82 ]
  ! MORET           [ shift and go to state 83 ]
  ! LESSEQ          [ shift and go to state 84 ]
  ! MOREEQ          [ shift and go to state 85 ]
  ! OR_G            [ shift and go to state 86 ]
  ! AND_G           [ shift and go to state 87 ]


state 105

    (61) expression -> expression MINUS expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . MULTIPLY expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . MOD expression
    (65) expression -> expression . LESST expression
    (66) expression -> expression . MORET expression
    (67) expression -> expression . LESSEQ expression
    (68) expression -> expression . MOREEQ expression
    (69) expression -> expression . OR_G expression
    (70) expression -> expression . AND_G expression

    PLUS            reduce using rule 61 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 61 (expression -> expression MINUS expression .)
    LESST           reduce using rule 61 (expression -> expression MINUS expression .)
    MORET           reduce using rule 61 (expression -> expression MINUS expression .)
    LESSEQ          reduce using rule 61 (expression -> expression MINUS expression .)
    MOREEQ          reduce using rule 61 (expression -> expression MINUS expression .)
    OR_G            reduce using rule 61 (expression -> expression MINUS expression .)
    AND_G           reduce using rule 61 (expression -> expression MINUS expression .)
    NEWLINE         reduce using rule 61 (expression -> expression MINUS expression .)
    COMA            reduce using rule 61 (expression -> expression MINUS expression .)
    RPARENT         reduce using rule 61 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    MOD             shift and go to state 81

  ! MULTIPLY        [ reduce using rule 61 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 61 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 61 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]
  ! LESST           [ shift and go to state 82 ]
  ! MORET           [ shift and go to state 83 ]
  ! LESSEQ          [ shift and go to state 84 ]
  ! MOREEQ          [ shift and go to state 85 ]
  ! OR_G            [ shift and go to state 86 ]
  ! AND_G           [ shift and go to state 87 ]


state 106

    (62) expression -> expression MULTIPLY expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . MULTIPLY expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . MOD expression
    (65) expression -> expression . LESST expression
    (66) expression -> expression . MORET expression
    (67) expression -> expression . LESSEQ expression
    (68) expression -> expression . MOREEQ expression
    (69) expression -> expression . OR_G expression
    (70) expression -> expression . AND_G expression

    PLUS            reduce using rule 62 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 62 (expression -> expression MULTIPLY expression .)
    MULTIPLY        reduce using rule 62 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 62 (expression -> expression MULTIPLY expression .)
    MOD             reduce using rule 62 (expression -> expression MULTIPLY expression .)
    LESST           reduce using rule 62 (expression -> expression MULTIPLY expression .)
    MORET           reduce using rule 62 (expression -> expression MULTIPLY expression .)
    LESSEQ          reduce using rule 62 (expression -> expression MULTIPLY expression .)
    MOREEQ          reduce using rule 62 (expression -> expression MULTIPLY expression .)
    OR_G            reduce using rule 62 (expression -> expression MULTIPLY expression .)
    AND_G           reduce using rule 62 (expression -> expression MULTIPLY expression .)
    NEWLINE         reduce using rule 62 (expression -> expression MULTIPLY expression .)
    COMA            reduce using rule 62 (expression -> expression MULTIPLY expression .)
    RPARENT         reduce using rule 62 (expression -> expression MULTIPLY expression .)

  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]
  ! MULTIPLY        [ shift and go to state 79 ]
  ! DIVIDE          [ shift and go to state 80 ]
  ! MOD             [ shift and go to state 81 ]
  ! LESST           [ shift and go to state 82 ]
  ! MORET           [ shift and go to state 83 ]
  ! LESSEQ          [ shift and go to state 84 ]
  ! MOREEQ          [ shift and go to state 85 ]
  ! OR_G            [ shift and go to state 86 ]
  ! AND_G           [ shift and go to state 87 ]


state 107

    (63) expression -> expression DIVIDE expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . MULTIPLY expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . MOD expression
    (65) expression -> expression . LESST expression
    (66) expression -> expression . MORET expression
    (67) expression -> expression . LESSEQ expression
    (68) expression -> expression . MOREEQ expression
    (69) expression -> expression . OR_G expression
    (70) expression -> expression . AND_G expression

    PLUS            reduce using rule 63 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 63 (expression -> expression DIVIDE expression .)
    MULTIPLY        reduce using rule 63 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 63 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 63 (expression -> expression DIVIDE expression .)
    LESST           reduce using rule 63 (expression -> expression DIVIDE expression .)
    MORET           reduce using rule 63 (expression -> expression DIVIDE expression .)
    LESSEQ          reduce using rule 63 (expression -> expression DIVIDE expression .)
    MOREEQ          reduce using rule 63 (expression -> expression DIVIDE expression .)
    OR_G            reduce using rule 63 (expression -> expression DIVIDE expression .)
    AND_G           reduce using rule 63 (expression -> expression DIVIDE expression .)
    NEWLINE         reduce using rule 63 (expression -> expression DIVIDE expression .)
    COMA            reduce using rule 63 (expression -> expression DIVIDE expression .)
    RPARENT         reduce using rule 63 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]
  ! MULTIPLY        [ shift and go to state 79 ]
  ! DIVIDE          [ shift and go to state 80 ]
  ! MOD             [ shift and go to state 81 ]
  ! LESST           [ shift and go to state 82 ]
  ! MORET           [ shift and go to state 83 ]
  ! LESSEQ          [ shift and go to state 84 ]
  ! MOREEQ          [ shift and go to state 85 ]
  ! OR_G            [ shift and go to state 86 ]
  ! AND_G           [ shift and go to state 87 ]


state 108

    (64) expression -> expression MOD expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . MULTIPLY expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . MOD expression
    (65) expression -> expression . LESST expression
    (66) expression -> expression . MORET expression
    (67) expression -> expression . LESSEQ expression
    (68) expression -> expression . MOREEQ expression
    (69) expression -> expression . OR_G expression
    (70) expression -> expression . AND_G expression

    PLUS            reduce using rule 64 (expression -> expression MOD expression .)
    MINUS           reduce using rule 64 (expression -> expression MOD expression .)
    MULTIPLY        reduce using rule 64 (expression -> expression MOD expression .)
    DIVIDE          reduce using rule 64 (expression -> expression MOD expression .)
    MOD             reduce using rule 64 (expression -> expression MOD expression .)
    LESST           reduce using rule 64 (expression -> expression MOD expression .)
    MORET           reduce using rule 64 (expression -> expression MOD expression .)
    LESSEQ          reduce using rule 64 (expression -> expression MOD expression .)
    MOREEQ          reduce using rule 64 (expression -> expression MOD expression .)
    OR_G            reduce using rule 64 (expression -> expression MOD expression .)
    AND_G           reduce using rule 64 (expression -> expression MOD expression .)
    NEWLINE         reduce using rule 64 (expression -> expression MOD expression .)
    COMA            reduce using rule 64 (expression -> expression MOD expression .)
    RPARENT         reduce using rule 64 (expression -> expression MOD expression .)

  ! PLUS            [ shift and go to state 77 ]
  ! MINUS           [ shift and go to state 78 ]
  ! MULTIPLY        [ shift and go to state 79 ]
  ! DIVIDE          [ shift and go to state 80 ]
  ! MOD             [ shift and go to state 81 ]
  ! LESST           [ shift and go to state 82 ]
  ! MORET           [ shift and go to state 83 ]
  ! LESSEQ          [ shift and go to state 84 ]
  ! MOREEQ          [ shift and go to state 85 ]
  ! OR_G            [ shift and go to state 86 ]
  ! AND_G           [ shift and go to state 87 ]


state 109

    (65) expression -> expression LESST expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . MULTIPLY expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . MOD expression
    (65) expression -> expression . LESST expression
    (66) expression -> expression . MORET expression
    (67) expression -> expression . LESSEQ expression
    (68) expression -> expression . MOREEQ expression
    (69) expression -> expression . OR_G expression
    (70) expression -> expression . AND_G expression

    LESST           reduce using rule 65 (expression -> expression LESST expression .)
    MORET           reduce using rule 65 (expression -> expression LESST expression .)
    LESSEQ          reduce using rule 65 (expression -> expression LESST expression .)
    MOREEQ          reduce using rule 65 (expression -> expression LESST expression .)
    OR_G            reduce using rule 65 (expression -> expression LESST expression .)
    AND_G           reduce using rule 65 (expression -> expression LESST expression .)
    NEWLINE         reduce using rule 65 (expression -> expression LESST expression .)
    COMA            reduce using rule 65 (expression -> expression LESST expression .)
    RPARENT         reduce using rule 65 (expression -> expression LESST expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    MOD             shift and go to state 81

  ! PLUS            [ reduce using rule 65 (expression -> expression LESST expression .) ]
  ! MINUS           [ reduce using rule 65 (expression -> expression LESST expression .) ]
  ! MULTIPLY        [ reduce using rule 65 (expression -> expression LESST expression .) ]
  ! DIVIDE          [ reduce using rule 65 (expression -> expression LESST expression .) ]
  ! MOD             [ reduce using rule 65 (expression -> expression LESST expression .) ]
  ! LESST           [ shift and go to state 82 ]
  ! MORET           [ shift and go to state 83 ]
  ! LESSEQ          [ shift and go to state 84 ]
  ! MOREEQ          [ shift and go to state 85 ]
  ! OR_G            [ shift and go to state 86 ]
  ! AND_G           [ shift and go to state 87 ]


state 110

    (66) expression -> expression MORET expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . MULTIPLY expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . MOD expression
    (65) expression -> expression . LESST expression
    (66) expression -> expression . MORET expression
    (67) expression -> expression . LESSEQ expression
    (68) expression -> expression . MOREEQ expression
    (69) expression -> expression . OR_G expression
    (70) expression -> expression . AND_G expression

    LESST           reduce using rule 66 (expression -> expression MORET expression .)
    MORET           reduce using rule 66 (expression -> expression MORET expression .)
    LESSEQ          reduce using rule 66 (expression -> expression MORET expression .)
    MOREEQ          reduce using rule 66 (expression -> expression MORET expression .)
    OR_G            reduce using rule 66 (expression -> expression MORET expression .)
    AND_G           reduce using rule 66 (expression -> expression MORET expression .)
    NEWLINE         reduce using rule 66 (expression -> expression MORET expression .)
    COMA            reduce using rule 66 (expression -> expression MORET expression .)
    RPARENT         reduce using rule 66 (expression -> expression MORET expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    MOD             shift and go to state 81

  ! PLUS            [ reduce using rule 66 (expression -> expression MORET expression .) ]
  ! MINUS           [ reduce using rule 66 (expression -> expression MORET expression .) ]
  ! MULTIPLY        [ reduce using rule 66 (expression -> expression MORET expression .) ]
  ! DIVIDE          [ reduce using rule 66 (expression -> expression MORET expression .) ]
  ! MOD             [ reduce using rule 66 (expression -> expression MORET expression .) ]
  ! LESST           [ shift and go to state 82 ]
  ! MORET           [ shift and go to state 83 ]
  ! LESSEQ          [ shift and go to state 84 ]
  ! MOREEQ          [ shift and go to state 85 ]
  ! OR_G            [ shift and go to state 86 ]
  ! AND_G           [ shift and go to state 87 ]


state 111

    (67) expression -> expression LESSEQ expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . MULTIPLY expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . MOD expression
    (65) expression -> expression . LESST expression
    (66) expression -> expression . MORET expression
    (67) expression -> expression . LESSEQ expression
    (68) expression -> expression . MOREEQ expression
    (69) expression -> expression . OR_G expression
    (70) expression -> expression . AND_G expression

    LESST           reduce using rule 67 (expression -> expression LESSEQ expression .)
    MORET           reduce using rule 67 (expression -> expression LESSEQ expression .)
    LESSEQ          reduce using rule 67 (expression -> expression LESSEQ expression .)
    MOREEQ          reduce using rule 67 (expression -> expression LESSEQ expression .)
    OR_G            reduce using rule 67 (expression -> expression LESSEQ expression .)
    AND_G           reduce using rule 67 (expression -> expression LESSEQ expression .)
    NEWLINE         reduce using rule 67 (expression -> expression LESSEQ expression .)
    COMA            reduce using rule 67 (expression -> expression LESSEQ expression .)
    RPARENT         reduce using rule 67 (expression -> expression LESSEQ expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    MOD             shift and go to state 81

  ! PLUS            [ reduce using rule 67 (expression -> expression LESSEQ expression .) ]
  ! MINUS           [ reduce using rule 67 (expression -> expression LESSEQ expression .) ]
  ! MULTIPLY        [ reduce using rule 67 (expression -> expression LESSEQ expression .) ]
  ! DIVIDE          [ reduce using rule 67 (expression -> expression LESSEQ expression .) ]
  ! MOD             [ reduce using rule 67 (expression -> expression LESSEQ expression .) ]
  ! LESST           [ shift and go to state 82 ]
  ! MORET           [ shift and go to state 83 ]
  ! LESSEQ          [ shift and go to state 84 ]
  ! MOREEQ          [ shift and go to state 85 ]
  ! OR_G            [ shift and go to state 86 ]
  ! AND_G           [ shift and go to state 87 ]


state 112

    (68) expression -> expression MOREEQ expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . MULTIPLY expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . MOD expression
    (65) expression -> expression . LESST expression
    (66) expression -> expression . MORET expression
    (67) expression -> expression . LESSEQ expression
    (68) expression -> expression . MOREEQ expression
    (69) expression -> expression . OR_G expression
    (70) expression -> expression . AND_G expression

    LESST           reduce using rule 68 (expression -> expression MOREEQ expression .)
    MORET           reduce using rule 68 (expression -> expression MOREEQ expression .)
    LESSEQ          reduce using rule 68 (expression -> expression MOREEQ expression .)
    MOREEQ          reduce using rule 68 (expression -> expression MOREEQ expression .)
    OR_G            reduce using rule 68 (expression -> expression MOREEQ expression .)
    AND_G           reduce using rule 68 (expression -> expression MOREEQ expression .)
    NEWLINE         reduce using rule 68 (expression -> expression MOREEQ expression .)
    COMA            reduce using rule 68 (expression -> expression MOREEQ expression .)
    RPARENT         reduce using rule 68 (expression -> expression MOREEQ expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    MOD             shift and go to state 81

  ! PLUS            [ reduce using rule 68 (expression -> expression MOREEQ expression .) ]
  ! MINUS           [ reduce using rule 68 (expression -> expression MOREEQ expression .) ]
  ! MULTIPLY        [ reduce using rule 68 (expression -> expression MOREEQ expression .) ]
  ! DIVIDE          [ reduce using rule 68 (expression -> expression MOREEQ expression .) ]
  ! MOD             [ reduce using rule 68 (expression -> expression MOREEQ expression .) ]
  ! LESST           [ shift and go to state 82 ]
  ! MORET           [ shift and go to state 83 ]
  ! LESSEQ          [ shift and go to state 84 ]
  ! MOREEQ          [ shift and go to state 85 ]
  ! OR_G            [ shift and go to state 86 ]
  ! AND_G           [ shift and go to state 87 ]


state 113

    (69) expression -> expression OR_G expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . MULTIPLY expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . MOD expression
    (65) expression -> expression . LESST expression
    (66) expression -> expression . MORET expression
    (67) expression -> expression . LESSEQ expression
    (68) expression -> expression . MOREEQ expression
    (69) expression -> expression . OR_G expression
    (70) expression -> expression . AND_G expression

    OR_G            reduce using rule 69 (expression -> expression OR_G expression .)
    AND_G           reduce using rule 69 (expression -> expression OR_G expression .)
    NEWLINE         reduce using rule 69 (expression -> expression OR_G expression .)
    COMA            reduce using rule 69 (expression -> expression OR_G expression .)
    RPARENT         reduce using rule 69 (expression -> expression OR_G expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    MOD             shift and go to state 81
    LESST           shift and go to state 82
    MORET           shift and go to state 83
    LESSEQ          shift and go to state 84
    MOREEQ          shift and go to state 85

  ! PLUS            [ reduce using rule 69 (expression -> expression OR_G expression .) ]
  ! MINUS           [ reduce using rule 69 (expression -> expression OR_G expression .) ]
  ! MULTIPLY        [ reduce using rule 69 (expression -> expression OR_G expression .) ]
  ! DIVIDE          [ reduce using rule 69 (expression -> expression OR_G expression .) ]
  ! MOD             [ reduce using rule 69 (expression -> expression OR_G expression .) ]
  ! LESST           [ reduce using rule 69 (expression -> expression OR_G expression .) ]
  ! MORET           [ reduce using rule 69 (expression -> expression OR_G expression .) ]
  ! LESSEQ          [ reduce using rule 69 (expression -> expression OR_G expression .) ]
  ! MOREEQ          [ reduce using rule 69 (expression -> expression OR_G expression .) ]
  ! OR_G            [ shift and go to state 86 ]
  ! AND_G           [ shift and go to state 87 ]


state 114

    (70) expression -> expression AND_G expression .
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . MULTIPLY expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . MOD expression
    (65) expression -> expression . LESST expression
    (66) expression -> expression . MORET expression
    (67) expression -> expression . LESSEQ expression
    (68) expression -> expression . MOREEQ expression
    (69) expression -> expression . OR_G expression
    (70) expression -> expression . AND_G expression

    OR_G            reduce using rule 70 (expression -> expression AND_G expression .)
    AND_G           reduce using rule 70 (expression -> expression AND_G expression .)
    NEWLINE         reduce using rule 70 (expression -> expression AND_G expression .)
    COMA            reduce using rule 70 (expression -> expression AND_G expression .)
    RPARENT         reduce using rule 70 (expression -> expression AND_G expression .)
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    MULTIPLY        shift and go to state 79
    DIVIDE          shift and go to state 80
    MOD             shift and go to state 81
    LESST           shift and go to state 82
    MORET           shift and go to state 83
    LESSEQ          shift and go to state 84
    MOREEQ          shift and go to state 85

  ! PLUS            [ reduce using rule 70 (expression -> expression AND_G expression .) ]
  ! MINUS           [ reduce using rule 70 (expression -> expression AND_G expression .) ]
  ! MULTIPLY        [ reduce using rule 70 (expression -> expression AND_G expression .) ]
  ! DIVIDE          [ reduce using rule 70 (expression -> expression AND_G expression .) ]
  ! MOD             [ reduce using rule 70 (expression -> expression AND_G expression .) ]
  ! LESST           [ reduce using rule 70 (expression -> expression AND_G expression .) ]
  ! MORET           [ reduce using rule 70 (expression -> expression AND_G expression .) ]
  ! LESSEQ          [ reduce using rule 70 (expression -> expression AND_G expression .) ]
  ! MOREEQ          [ reduce using rule 70 (expression -> expression AND_G expression .) ]
  ! OR_G            [ shift and go to state 86 ]
  ! AND_G           [ shift and go to state 87 ]


state 115

    (76) expression -> LPARENT expression RPARENT .

    PLUS            reduce using rule 76 (expression -> LPARENT expression RPARENT .)
    MINUS           reduce using rule 76 (expression -> LPARENT expression RPARENT .)
    MULTIPLY        reduce using rule 76 (expression -> LPARENT expression RPARENT .)
    DIVIDE          reduce using rule 76 (expression -> LPARENT expression RPARENT .)
    MOD             reduce using rule 76 (expression -> LPARENT expression RPARENT .)
    LESST           reduce using rule 76 (expression -> LPARENT expression RPARENT .)
    MORET           reduce using rule 76 (expression -> LPARENT expression RPARENT .)
    LESSEQ          reduce using rule 76 (expression -> LPARENT expression RPARENT .)
    MOREEQ          reduce using rule 76 (expression -> LPARENT expression RPARENT .)
    OR_G            reduce using rule 76 (expression -> LPARENT expression RPARENT .)
    AND_G           reduce using rule 76 (expression -> LPARENT expression RPARENT .)
    NEWLINE         reduce using rule 76 (expression -> LPARENT expression RPARENT .)
    COMA            reduce using rule 76 (expression -> LPARENT expression RPARENT .)
    RPARENT         reduce using rule 76 (expression -> LPARENT expression RPARENT .)


state 116

    (55) f2 -> CODOP REG COMA REG .

    NEWLINE         reduce using rule 55 (f2 -> CODOP REG COMA REG .)


state 117

    (56) f2 -> CODOP REG COMA NUM .

    NEWLINE         reduce using rule 56 (f2 -> CODOP REG COMA NUM .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for error in state 0 resolved as shift
WARNING: shift/reduce conflict for NAME in state 0 resolved as shift
WARNING: shift/reduce conflict for error in state 4 resolved as shift
WARNING: shift/reduce conflict for NAME in state 4 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 4 resolved as shift
WARNING: shift/reduce conflict for WORD in state 4 resolved as shift
WARNING: shift/reduce conflict for RESB in state 4 resolved as shift
WARNING: shift/reduce conflict for RESW in state 4 resolved as shift
WARNING: shift/reduce conflict for BASE in state 4 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 4 resolved as shift
WARNING: shift/reduce conflict for RSUB in state 4 resolved as shift
WARNING: shift/reduce conflict for CODOP in state 4 resolved as shift
WARNING: shift/reduce conflict for END in state 11 resolved as shift
WARNING: shift/reduce conflict for error in state 11 resolved as shift
WARNING: shift/reduce conflict for NAME in state 11 resolved as shift
WARNING: shift/reduce conflict for BYTE in state 11 resolved as shift
WARNING: shift/reduce conflict for WORD in state 11 resolved as shift
WARNING: shift/reduce conflict for RESB in state 11 resolved as shift
WARNING: shift/reduce conflict for RESW in state 11 resolved as shift
WARNING: shift/reduce conflict for BASE in state 11 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 11 resolved as shift
WARNING: shift/reduce conflict for RSUB in state 11 resolved as shift
WARNING: shift/reduce conflict for CODOP in state 11 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 103 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 103 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 103 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 103 resolved as shift
WARNING: shift/reduce conflict for MOD in state 103 resolved as shift
WARNING: shift/reduce conflict for LESST in state 103 resolved as shift
WARNING: shift/reduce conflict for MORET in state 103 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 103 resolved as shift
WARNING: shift/reduce conflict for MOREEQ in state 103 resolved as shift
WARNING: shift/reduce conflict for OR_G in state 103 resolved as shift
WARNING: shift/reduce conflict for AND_G in state 103 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (sicxe_file -> programa)
WARNING: rejected rule (empty -> <empty>) in state 2
WARNING: reduce/reduce conflict in state 10 resolved using rule (sicxe_file -> empty programa)
WARNING: rejected rule (empty -> <empty>) in state 10
WARNING: reduce/reduce conflict in state 50 resolved using rule (opdirectiva -> NAME)
WARNING: rejected rule (var -> NAME) in state 50
WARNING: reduce/reduce conflict in state 61 resolved using rule (simple3 -> CODOP NUM)
WARNING: rejected rule (f2 -> CODOP NUM) in state 61
WARNING: reduce/reduce conflict in state 63 resolved using rule (simple3 -> CODOP NAME)
WARNING: rejected rule (var -> NAME) in state 63
WARNING: Rule (empty -> <empty>) is never reduced
WARNING: Rule (f2 -> CODOP NUM) is never reduced
